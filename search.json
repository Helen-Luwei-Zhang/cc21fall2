[{"path":"index.html","id":"welcome","chapter":"1 Welcome!","heading":"1 Welcome!","text":"Everyone: let’s add content welcome page.Please edit file submit pull request .","code":""},{"path":"community-contribution.html","id":"community-contribution","chapter":"2 Community Contribution","heading":"2 Community Contribution","text":"fairly open-ended assignment provides opportunity receive credit contributing collective learning class, perhaps beyond. reflect minimum 3 hours work. complete assignment must submit short description contribution. appropriate, attach relevant files.many ways can contribute:organize lead workshop particular topic (date may assignment due date need schedule )help students find final project partnersgive well-rehearsed 5 minute lightning talk class datavis topic (theory tool) (email set date – may assignment due date need schedule )create video tutorial (length)create cheatsheet resourcewrite tutorial tool ’s well documentedbuild viz product (ex. htmlwidget RStudio add-) class use[idea](Note: translations allowed)may draw expand existing resources. , critical cite sources.","code":""},{"path":"community-contribution.html","id":"important-logistics","chapter":"2 Community Contribution","heading":"2.1 IMPORTANT LOGISTICS","text":"","code":""},{"path":"community-contribution.html","id":"groups","chapter":"2 Community Contribution","heading":"2.1.1 Groups","text":"may work partner choosing. work alone, need join group 1, simply submit work CourseWorks solo assignment.work partner, add group CC page People tab. Ed Discussion can used find partners similar interests.","code":""},{"path":"community-contribution.html","id":"what-to-submit","chapter":"2 Community Contribution","heading":"2.1.2 What to submit","text":"cases something tangible upload, tutorial, cheatsheet, etc. Alternatively may submit link material online (YouTube video, etc.) ’s nothing tangible include longer description (see 2.).cases something tangible upload, tutorial, cheatsheet, etc. Alternatively may submit link material online (YouTube video, etc.) ’s nothing tangible include longer description (see 2.).explanation motivation project, need addresses, evaluation project including learned / might differently next time. (1/2 page)explanation motivation project, need addresses, evaluation project including learned / might differently next time. (1/2 page)","code":""},{"path":"community-contribution.html","id":"submitting-your-assignment","chapter":"2 Community Contribution","heading":"2.1.3 Submitting your assignment","text":"must submit assignment twice: CourseWorks (can graded) class, details follow.CourseWorks submission (assignment): submit work .Rmd rendered .pdf .html file, just problem sets. work lend format, write assignment text box .CourseWorks submission (assignment): submit work .Rmd rendered .pdf .html file, just problem sets. work lend format, write assignment text box .Class (GitHub) submission: detail provided separate assignment.Class (GitHub) submission: detail provided separate assignment.","code":""},{"path":"community-contribution.html","id":"grading","chapter":"2 Community Contribution","heading":"2.1.4 Grading","text":"graded quality work, originality, effort invested. sources used must cited.","code":""},{"path":"github-submission-instructions.html","id":"github-submission-instructions","chapter":"3 GitHub submission instructions","heading":"3 GitHub submission instructions","text":"chapter gives information need upload community contribution. Please read entire document carefully making submission. particular note fact bookdown requires different .Rmd format ’re used , must make changes beginning file described submitting.","code":""},{"path":"github-submission-instructions.html","id":"background","chapter":"3 GitHub submission instructions","heading":"3.1 Background","text":"web site makes use bookdown package render collection .Rmd files nicely formatted online book chapters subchapters. job submit slightly modified version community contribution .Rmd file GitHub repository source files web site stored. backend, admins divide chapters book sections order .community contribution different format, create short .Rmd file explains , includes links relevant files, slides, etc. can post GitHub repo (another online site.)","code":""},{"path":"github-submission-instructions.html","id":"preparing-your-.rmd-file","chapter":"3 GitHub submission instructions","heading":"3.2 Preparing your .Rmd file","text":"submit ONE Rmd file.completing modifications, .Rmd look like sample .Rmd.Create concise, descriptive name project. instance, name base_r_ggplot_graph something similar work contrasting/working base R graphics ggplot2 graphics. Check .Rmd filenames file make sure name isn’t already taken. project name words joined underscores, white space. Use .Rmd .rmd. addition, letters must lowercase. Create copy .Rmd file new name.Create concise, descriptive name project. instance, name base_r_ggplot_graph something similar work contrasting/working base R graphics ggplot2 graphics. Check .Rmd filenames file make sure name isn’t already taken. project name words joined underscores, white space. Use .Rmd .rmd. addition, letters must lowercase. Create copy .Rmd file new name.Completely delete YAML header (section top .Rmd includes name, title, date, output, etc.) including --- line.Completely delete YAML header (section top .Rmd includes name, title, date, output, etc.) including --- line.Choose short, descriptive, human readable title project title show table contents – look examples panel left. Capitalize first letter (“sentence case”). first line document, enter single hashtag, followed single whitespace, title. important follow format bookdown renders title header. use single # headers anywhere else document.Choose short, descriptive, human readable title project title show table contents – look examples panel left. Capitalize first letter (“sentence case”). first line document, enter single hashtag, followed single whitespace, title. important follow format bookdown renders title header. use single # headers anywhere else document.second line blank, followed name(s):\n# Base R vs. ggplot2\n\nAaron Burr Alexander Hamilton\n\ncontent starts . second line blank, followed name(s):project requires data, please use built-dataset read directly URL, :\ndf <- readr::read_csv(\"https://people.sc.fsu.edu/~jburkardt/data/csv/addresses.csv\")  absolutely must include data file, please use small one, many reasons desirable keep repository size small possible.project requires data, please use built-dataset read directly URL, :df <- readr::read_csv(\"https://people.sc.fsu.edu/~jburkardt/data/csv/addresses.csv\")  absolutely must include data file, please use small one, many reasons desirable keep repository size small possible.included setup chunk .Rmd file, please remember remove label setup chunk, .e., use:\n{r, include=FALSE}\ninstead :\n{r setup, include=FALSE}included setup chunk .Rmd file, please remember remove label setup chunk, .e., use:instead :project requires libraries installed included document, please adhere following conventions. evaluate install.packages() statements document. Consumers .Rmd file won’t want packages get installed knit document. Include library() statements top .Rmd file, title, name, setup, content. chapter requires installation package source (GitHub installation), please add comment identifying . Please mention well PR. example library() section install statements won’t evaluated:\n\n# remotes::install_github(\"twitter/AnomalyDetection\")\nlibrary(\"AnomalyDetection\") # must installed sourceIf project requires libraries installed included document, please adhere following conventions. evaluate install.packages() statements document. Consumers .Rmd file won’t want packages get installed knit document. Include library() statements top .Rmd file, title, name, setup, content. chapter requires installation package source (GitHub installation), please add comment identifying . Please mention well PR. example library() section install statements won’t evaluated:developed .Rmd file moving library() statements rest file content, highly recommended knit review document . may change namespace available section code development, causing function work exhibit unexpected behavior.file contain getwd() / setwd() calls (never use scripts anyway!) write statements.Want get fancy? See optional tweaks section .","code":"# Base R vs. ggplot2\n\nAaron Burr and Alexander Hamilton\n\nYour content starts here. {r, include=FALSE}{r setup, include=FALSE}\n# remotes::install_github(\"twitter/AnomalyDetection\")\nlibrary(\"AnomalyDetection\") # must be installed from source"},{"path":"github-submission-instructions.html","id":"submission-steps","chapter":"3 GitHub submission instructions","heading":"3.3 Submission steps","text":"submit work, following “Workflow #4” – submitting pull request someone else’s repository write access. Instructions available lecture slides topic well tutorial. repeated abbreviated form, specific instructions naming conventions, content information, important details.Fork cc21fall2 repo (repo) GitHub account.Fork cc21fall2 repo (repo) GitHub account.Clone/download forked repo local computer.Clone/download forked repo local computer.Create new branch name project name, case sample_project. skip step. merge PR doesn’t come branch. already forgot , check tutorial fix .Create new branch name project name, case sample_project. skip step. merge PR doesn’t come branch. already forgot , check tutorial fix .Copy modified .Rmd file name root directory branch. example, sample_project.Rmd.Copy modified .Rmd file name root directory branch. example, sample_project.Rmd.include .html file. (order bookdown package work, .Rmd files rendered behind scenes.)include .html file. (order bookdown package work, .Rmd files rendered behind scenes.)[OPTIONAL] resources (images) included project, create folder resources/. example, resources/sample_project/. Put resources files . sure change links .Rmd include resources/.../, example:\n![Test Photo](resources/sample_project/pumpkins.jpg)[OPTIONAL] resources (images) included project, create folder resources/. example, resources/sample_project/. Put resources files . sure change links .Rmd include resources/.../, example:![Test Photo](resources/sample_project/pumpkins.jpg)ready submit project, push branch remote repo. Follow tutorial create pull request.ready submit project, push branch remote repo. Follow tutorial create pull request.point back forth begin team managing pull requests. asked make changes, simply make changes local branch, save, commit, push GitHub. new commits added pull request; need , , create new pull request. (, based circumstances, make sense close pull request start new one, tell .)point back forth begin team managing pull requests. asked make changes, simply make changes local branch, save, commit, push GitHub. new commits added pull request; need , , create new pull request. (, based circumstances, make sense close pull request start new one, tell .)pull request merged, ’s fine delete local clone (folder) well forked repository GitHub account.pull request merged, ’s fine delete local clone (folder) well forked repository GitHub account.","code":""},{"path":"github-submission-instructions.html","id":"optional-tweaks","chapter":"3 GitHub submission instructions","heading":"3.4 Optional tweaks","text":"prefer links chapter open new tabs, add {target=\"_blank\"} link, :\n[edav.info](edav.info){target=\"_blank\"}prefer links chapter open new tabs, add {target=\"_blank\"} link, :[edav.info](edav.info){target=\"_blank\"}Note headers (##, ###, etc.) converted numbered headings : ## –> 3.1 ### –> 3.1.1  headings appear chapter subheadings sub-subheadings navigation panel left. Think logical structure users navigate chapter. recommend using ## ### headings since “sub-sub-subheadings” 4.1.3.4 generally unnecessary look messy.Note headers (##, ###, etc.) converted numbered headings : ## –> 3.1 ### –> 3.1.1  headings appear chapter subheadings sub-subheadings navigation panel left. Think logical structure users navigate chapter. recommend using ## ### headings since “sub-sub-subheadings” 4.1.3.4 generally unnecessary look messy.Unfortunately, ’s simple way preview chapter ’s actually merged project. (bookdown preview_chapter() option works entire book rendered least become complex require packages project grows.) really want preview , fork clone minimal bookdown repo, add .Rmd file, click “Build book” button Build tab (next Git), open .html files _book folder web browser see rendered book.  ’re interested bookdown options, see official reference book.  useful tweaks share? Submit issue PR.Unfortunately, ’s simple way preview chapter ’s actually merged project. (bookdown preview_chapter() option works entire book rendered least become complex require packages project grows.) really want preview , fork clone minimal bookdown repo, add .Rmd file, click “Build book” button Build tab (next Git), open .html files _book folder web browser see rendered book.  ’re interested bookdown options, see official reference book.  useful tweaks share? Submit issue PR.","code":""},{"path":"github-submission-instructions.html","id":"faq","chapter":"3 GitHub submission instructions","heading":"3.5 FAQ","text":"","code":""},{"path":"github-submission-instructions.html","id":"what-should-i-expect-after-creating-a-pull-request","chapter":"3 GitHub submission instructions","heading":"3.5.1 What should I expect after creating a pull request?","text":"Within week create pull request, apply label assign classmate “PR merger” review files submit see meet requirements.Within week create pull request, apply label assign classmate “PR merger” review files submit see meet requirements.take time can process pull requests, long see pull request repo, don’t worry.take time can process pull requests, long see pull request repo, don’t worry.PR merger contacts regarding pull request, usually means files fail meet requirements. explain wrong, please fix soon possible.PR merger contacts regarding pull request, usually means files fail meet requirements. explain wrong, please fix soon possible.","code":""},{"path":"github-submission-instructions.html","id":"what-if-i-catch-mistakes-before-my-pull-request-is-merged","chapter":"3 GitHub submission instructions","heading":"3.5.2 What if I catch mistakes before my pull request is merged?","text":"Just make changes branch, commit push GitHub. automatically added pull request.","code":""},{"path":"github-submission-instructions.html","id":"what-if-i-catch-mistakes-after-my-pull-request-is-merged","chapter":"3 GitHub submission instructions","heading":"3.5.3 What if I catch mistakes after my pull request is merged?","text":"may submit additional pull requests fix material site. edits small, fixing typos, easiest make edits directly GitHub, following instructions. merge first pull requests edits, please patient.","code":""},{"path":"github-submission-instructions.html","id":"other-questions","chapter":"3 GitHub submission instructions","heading":"3.5.4 Other questions","text":"additional questions, please ask Discussions section respond.Thank contributions!","code":""},{"path":"sample-project.html","id":"sample-project","chapter":"4 Sample project","heading":"4 Sample project","text":"","code":""},{"path":"sample-project.html","id":"happy-halloween","chapter":"4 Sample project","heading":"4.1 HAPPY HALLOWEEN!","text":"Test Photo","code":""},{"path":"statistics-in-r-vs-python.html","id":"statistics-in-r-vs-python","chapter":"5 Statistics in R vs Python","heading":"5 Statistics in R vs Python","text":"Weiyi Jiang Sicheng LiPython R two popular coding languages Data Science. project, propose comparison Python R different kinds scenarios, including generating random numbers, time series analysis basic machine learning. Furthermore, visualize comparizon cheat sheet reference. project, conducted following R Python:\n1. Several random number generating methods including generating normal distribution uniform distribution.\n2. Time Series Analysis tools including ARIMA model, acf/pacf parameters, adfuller test Granger Causality test.\n3. Machine Learning tools including Linear regression, Lasso, Ridge, SVM, Decision Tree Random Forest.link:https://github.com/serendipitylee/cc_group1","code":""},{"path":"data-visualization-with-searborn.html","id":"data-visualization-with-searborn","chapter":"6 Data Visualization with Searborn","heading":"6 Data Visualization with Searborn","text":"Xinyu Huang (xh2511)created cheat sheet data visualization Seaborn, package python. Including data preparation, plot aesthetics, categorical data plotting, statistical relationships plotting customizations.See two pdf files ‘https://github.com/Elliot1h/EDAV-cc’ cheat sheet citations. can also found ‘resources/python_seaborn_cheatsheet’.","code":""},{"path":"how-to-make-your-own-r-package.html","id":"how-to-make-your-own-r-package","chapter":"7 How to Make Your Own R package","heading":"7 How to Make Your Own R package","text":"Yuren DongIn project introduced procedures integrating functions create packages. knowledge, able save time integrating commonly used data processing workflow packages,share analytical pipelines collaborators. Thus, think great opportunity share classmates strategy.link: https://github.com/yunyuntian/make_r_package_cheatsheet/","code":""},{"path":"rchess-package-cheatsheet.html","id":"rchess-package-cheatsheet","chapter":"8 RChess package cheatsheet","heading":"8 RChess package cheatsheet","text":"Ju Hyun JeonHow can one analyze chess games R? several packages help users understand chess positions R many resources. cheatsheet made help people use RChess.\nRChess approachable convenient way processing Chess data R. Furthermore, can used conjunction ggplot2 plot chess positions. cheatsheet contains functions example positions help understand package. 4 major uses Rchess functions. 1. importing positions, 2. identifying positions, 3. modifying positions, 4. visualizing positions. study can conducted derive methods process annotated PGNs PGNs clock time.cheatsheet can accessed following link.\nhttps://github.com/witchhead/RChessCheatsheet/blob/main/RchessCheatSheet.pdf","code":""},{"path":"hypothesis-testing-cheatsheet.html","id":"hypothesis-testing-cheatsheet","chapter":"9 Hypothesis testing cheatsheet","heading":"9 Hypothesis testing cheatsheet","text":"Weisheng ChenThis PDF version cheat sheet hypothesis testing including key concepts, steps conducting hypothesis testing comparison different tests.Check cheat sheet clicking following Github link:https://github.com/SteveChen2751/GR5702-EDAV/blob/main/Hypothesis_Testing_Cheatsheet.pdf","code":""},{"path":"interactive-web-visualizations-for-r-cheatsheet.html","id":"interactive-web-visualizations-for-r-cheatsheet","chapter":"10 Interactive web visualizations for R cheatsheet\"","heading":"10 Interactive web visualizations for R cheatsheet\"","text":"Tianhang CuiThe content cheatsheet interactive web visualizations R, form PDF. includes make adjust general type interactive web visualization plotly, create special types visualization.many libraries can used R make useful nice-looking interactive visualization. However, easiest best tools different purposes often library (example:3D scatterplot can done ‘plotly’ using ‘threejs’ much easier effective), search internet see package commonly used different kinds interactive visualization. cheat sheets internet specific packages detail, none contains commonly used packages interactive visualization. Thus, think helpful cheat sheet include commonly used packages, statisticians/programmers can easily use needs make interactive visualization based purposes.addresses need statisticians/programmers want quickly check make interactive visualization data given requirement. statistics/programmers often just need simple use make interactive graph (tooltips, mouse-click events, etc.) interactive visualization packages contains function default, need include basic use package used. functions needed, user can also quickly find ways checking package document.Page1Page2To check cheatsheet pdf form, click link :\nhttp://tianhangcui.com/cheatsheet_vis_for_R/Cheatsheet_Interactive_web_visualizations_for_R.pdf","code":""},{"path":"ggforce.html","id":"ggforce","chapter":"11 ggforce","heading":"11 ggforce","text":"Rona Xuggforce ‘ggplot2’ extension aims aid data visualization. cheat sheet created includes several major features\npackage functions found helpful.Link: https://github.com/rona-x/ggforce_cheatsheet.git","code":""},{"path":"gganimate-cheatsheet.html","id":"gganimate-cheatsheet","chapter":"12 GGanimate cheatsheet","heading":"12 GGanimate cheatsheet","text":"Siyu Li","code":"\nlibrary(ggplot2)\n# remotes::install_github('thomasp85/gganimate')\n# remotes::install_github('thomasp85/transformr')\nlibrary(gganimate)# must be installed from source"},{"path":"gganimate-cheatsheet.html","id":"pdf-cheatsheet","chapter":"12 GGanimate cheatsheet","heading":"12.1 PDF cheatsheet","text":"Please click link:\ngganimate_cheatsheet","code":""},{"path":"gganimate-cheatsheet.html","id":"introduction","chapter":"12 GGanimate cheatsheet","heading":"12.2 Introduction","text":"gganimate extends grammar graphics \nimplemented ggplot2 include description animation. providing \nrange new grammar classes can added\nplot object order customise \nchange time.","code":""},{"path":"gganimate-cheatsheet.html","id":"installation","chapter":"12 GGanimate cheatsheet","heading":"12.3 Installation","text":"NOTE: May also need install ‘gifski’ ‘av’ package.","code":"install.packages('devtools')\ndevtools::install_github('thomasp85/gganimate')\ndevtools::install_github('thomasp85/transformr')"},{"path":"gganimate-cheatsheet.html","id":"basic-function","chapter":"12 GGanimate cheatsheet","heading":"12.4 Basic function","text":"• transition_∗():\ndefines data spread \nrelates across time.• view_∗():\ndefines positional scales \nchange along animation.• shadow_∗():\ndefines data points time\npresented given point time.• enter_∗()/exit_∗():\ndefines new data appear \nold data disappear \ncourse animation.• ease_aes():\ndefines different aesthetics \neased transitions.• animate():\nrender gganimate object.• anim_save():\nsave animation file.","code":"p <- ggplot()+\n   geom_point()+//or other kinds of graph\n   transition_states(states, transition_length,\nstate_length)+\n   view_follow(fixed_x,fixed_y)+\n   shadow_wake(wake_length,size,alpha)\n   enter_fade()+\n   exit_shrink()+\n   ease_aes(default=’linear’)\nanimate(p)\nanim_save(filename,path)"},{"path":"gganimate-cheatsheet.html","id":"transition","chapter":"12 GGanimate cheatsheet","heading":"12.4.1 Transition","text":"","code":""},{"path":"gganimate-cheatsheet.html","id":"transition_states","chapter":"12 GGanimate cheatsheet","heading":"12.4.1.1 transition_states","text":"Transition several distinct stages data","code":"\nanim<-ggplot(iris, aes(Sepal.Width, Petal.Width)) +\ngeom_point() +\nlabs(title = \"{closest_state}\") +\ntransition_states(Species, transition_length = 3, state_length = 1)\nanimate(anim)"},{"path":"gganimate-cheatsheet.html","id":"transition_filter","chapter":"12 GGanimate cheatsheet","heading":"12.4.1.2 transition_filter","text":"Transition different filters","code":"\nanim<-ggplot(iris,aes(Petal.Width,Petal.Length,\ncolour=Species))+\ngeom_point()+\ntransition_filter(\ntransition_length=2,filter_length = 1,\nSetosa=Species=='setosa',\nLong = Petal.Length>4,\nWide = Petal.Width>2)\nanimate(anim)"},{"path":"gganimate-cheatsheet.html","id":"transition_layers","chapter":"12 GGanimate cheatsheet","heading":"12.4.1.3 transition_layers","text":"Build plot layer layer","code":"\nggplot(mtcars, aes(mpg, disp)) +\ngeom_point() +\ngeom_smooth(colour = 'grey', se = FALSE) +\ngeom_smooth(aes(colour = factor(gear))) +\ntransition_layers(layer_length = 1, transition_length = 2,\nfrom_blank = FALSE, layer_order = c(3, 1, 2)) +\nenter_fade() + enter_grow()## NULL"},{"path":"gganimate-cheatsheet.html","id":"transition_revealtransition_time","chapter":"12 GGanimate cheatsheet","heading":"12.4.1.4 transition_reveal&transition_time","text":"","code":"\nanim<-ggplot(airquality,aes(Day,Temp,group=\nMonth))+geom_line()+\ngeom_point(aes(group=seq_along(Day)),size\n=3,color='red')+\ntransition_reveal(Day)\nanimate(anim)\nanim<-ggplot(airquality,aes(Day,Temp))+\ngeom_point(aes(colour=factor(Month)))+\ntransition_time(Day)\nanimate(anim)"},{"path":"gganimate-cheatsheet.html","id":"shadow","chapter":"12 GGanimate cheatsheet","heading":"12.4.2 Shadow","text":"","code":""},{"path":"gganimate-cheatsheet.html","id":"shadow_mark","chapter":"12 GGanimate cheatsheet","heading":"12.4.2.1 shadow_mark","text":"Show original data background","code":"\nanim <- ggplot(airquality,aes(Day,Temp,colour = factor(Month))) +\ngeom_point() +\ntransition_time(Day)\nanim1<-anim+shadow_mark(colour='black',size = 0.75,past = TRUE, future = FALSE)\nanimate(anim1)"},{"path":"gganimate-cheatsheet.html","id":"shadow_trail","chapter":"12 GGanimate cheatsheet","heading":"12.4.2.2 shadow_trail","text":"trail evenly spaced old frames","code":"\nanim2 <- anim +\nshadow_trail(distance=0.4,alpha = 0.3, shape = 2)\nanimate(anim2)"},{"path":"gganimate-cheatsheet.html","id":"shadow_weak","chapter":"12 GGanimate cheatsheet","heading":"12.4.2.3 shadow_weak","text":"Show preceding frames gradual falloff","code":"\nanim3<-anim+shadow_wake(wake_length=0.1,size=2,alpha =FALSE,colour='grey92')\nanimate(anim3)"},{"path":"gganimate-cheatsheet.html","id":"view","chapter":"12 GGanimate cheatsheet","heading":"12.4.3 View","text":"","code":""},{"path":"gganimate-cheatsheet.html","id":"view_follow","chapter":"12 GGanimate cheatsheet","heading":"12.4.3.1 view_follow","text":"Let view follow data","code":"\nanim<-ggplot(iris,aes(Sepal.Length, Sepal.Width))+\ngeom_point()+labs(title = \"closest_state\")+\ntransition_states(Species,transition_length=4\n,state_length=1)\nanim1<-anim+view_follow(fixed_x=TRUE,\nfixed_y=FALSE)\nanim2<-anim+view_follow(fixed_x=c(4,NA),\nfixed_y=c(2,NA))\nanimate(anim1)\nanimate(anim2)"},{"path":"gganimate-cheatsheet.html","id":"view_step","chapter":"12 GGanimate cheatsheet","heading":"12.4.3.2 view_step","text":"Follow data steps.NOTE: use view_step relative transition_states. transition doesn’t wrap, view shouldn’t either.","code":"\nanim<-ggplot(iris,aes(Petal.Length,Petal.Width))+\ngeom_point()+\ntransition_states(Species, transition_length=1)+\nview_step(pause_length=2,step_length=1,\nnsteps =3,pause_first=TRUE)\nanimate(anim)"},{"path":"gganimate-cheatsheet.html","id":"animation","chapter":"12 GGanimate cheatsheet","heading":"12.4.4 Animation","text":"","code":"animate(plot, nframes, fps, height, width, duration, detail, renderer, device, ref_frame, start_pause,\nend_pause, rewind,...)\nanim_save(filename, animation=last_animation(), path=NULL, ...)"},{"path":"gganimate-cheatsheet.html","id":"example","chapter":"12 GGanimate cheatsheet","heading":"12.5 Example","text":"","code":"\nggplot(mtcars, aes(factor(cyl), mpg)) +\ngeom_boxplot() +\ntransition_states(\ngear,\ntransition_length = 2,\nstate_length = 1\n) +\nenter_fade() +\nexit_shrink() +\nease_aes('sine-in-out')## NULL\nlibrary(gapminder)\nggplot(gapminder, aes(gdpPercap, lifeExp, size =\npop, colour = country)) +\ngeom_point(alpha=0.7,show.legend=FALSE)+\nscale_colour_manual(values=country_colors)+\nscale_size(range = c(2, 12))+scale_x_log10()+\nfacet_wrap(~continent) +\nlabs(title='Year: frame_time', x='GDP per\ncapita', y='life expectancy') +\ntransition_time(year) +\nease_aes('linear')## NULL"},{"path":"gganimate-cheatsheet.html","id":"references","chapter":"12 GGanimate cheatsheet","heading":"12.6 References","text":"official githubofficial introduction pdf","code":""},{"path":"statistical-tests-and-parameter-estimations-in-r-cheatsheet.html","id":"statistical-tests-and-parameter-estimations-in-r-cheatsheet","chapter":"13 Statistical Tests and Parameter Estimations in R Cheatsheet","heading":"13 Statistical Tests and Parameter Estimations in R Cheatsheet","text":"Candong ChenThis project includes pdf version cheatsheet Statistical Tests Parameter Estimations R. includes moment estimation, MLE, EM algorithm, distribution estimation, parametric tests, bivariate correlation test, nonparametric tests.Click following link check cheatsheet:\nhttps://github.com/Kimtanyo/EDAV/blob/master/latex/statistical_test_and_parameter_test_in_r.pdf","code":""},{"path":"ggalluvial-cheat-sheet.html","id":"ggalluvial-cheat-sheet","chapter":"14 ggalluvial-cheat-sheet","heading":"14 ggalluvial-cheat-sheet","text":"Qingyi Zhang (qz2419)chosen ggalluvial package topic.First, described ggalluvial function .introduced two aspect since two Format alluvial graph: Wide format Lodes(Long) Format.introducing basic information code, also make changes basic graph can help analyst efficiently analyze data different aspects.cheat sheet link: https://github.com/Seleven711/ggalluvial-cheat-sheet/blob/5bcefce6b22d94e6877ca74726312d4d4d334e77/qz2419cc.pdfif link work, use link instead: https://cheatography.com//seleven/cheat-sheets/ggalluvial/pdf/","code":""},{"path":"introduction-to-plotly.html","id":"introduction-to-plotly","chapter":"15 Introduction to plotly","heading":"15 Introduction to plotly","text":"Moya Zhu Yunshu Cai","code":"\nlibrary(plotly)\nlibrary(dplyr)\nlibrary(vcd)"},{"path":"introduction-to-plotly.html","id":"introduction-1","chapter":"15 Introduction to plotly","heading":"15.1 Introduction","text":"cheat sheet help find proper visualization demostration purpose using plotly. plots interactive documented variable types. package use ‘Plotly’, ‘dplyr’","code":""},{"path":"introduction-to-plotly.html","id":"prepare-install-load","chapter":"15 Introduction to plotly","heading":"15.1.1 Prepare: Install & Load","text":"","code":"\n# After install\nlibrary(plotly)"},{"path":"introduction-to-plotly.html","id":"comparision","chapter":"15 Introduction to plotly","heading":"15.1.2 Comparision","text":"","code":""},{"path":"introduction-to-plotly.html","id":"comparing-over-items-bar-charts","chapter":"15 Introduction to plotly","heading":"15.1.2.1 Comparing over items – Bar Charts","text":"Bar charts aimed show distribution data points see specific group values behave comparing groups.Vertical bar chartsHorizontal bar chartsCustomizing Individual Bar Widths pictorial representation grouped dataCustomizing Individual Bar Colors focusing particular item comparing othersCustomizing Individual Bar Base comparing groups relatively opposite values (ex. income expense, restocking sales)","code":"\nfig <- plot_ly(\n  x = c(\"giraffes\", \"orangutans\", \"monkeys\"),\n  y = c(20, 14, 23),\n  name = \"SF Zoo\",\n  type = \"bar\"\n)\n\nfig\nfig <- plot_ly(x = c(20, 14, 23), y = c('giraffes', 'orangutans', 'monkeys'), type = 'bar', orientation = 'h')\n\nfig\nx= c(1, 2, 3, 5.5, 10)\ny= c(10, 8, 6, 4, 2)\nwidth = c(0.8, 0.8, 0.8, 3.5, 4)\ndata <- data.frame(x, y, width)\n\nfig <- plot_ly(data)\nfig <- fig %>% add_bars(\n    x= ~x,\n    y= ~y,\n    width = ~width\n  )\n\nfig\nx <- c('item A', 'item B', 'item C', 'item D', 'item E')\ny <- c(5, 17, 20, 12, 15)\ndata <- data.frame(x, y)\n\nfig <- plot_ly(data, x = ~x, y = ~y, type = 'bar',\n        marker = list(color = c('rgba(204,204,204,1)', 'rgba(204,204,204,1)',\n                                'rgba(204,204,204,1)', 'rgba(199,77,120,0.8)',\n                                'rgba(204,204,204,1)')))\nfig <- fig %>% layout(title = \"Least Used Features\",\n         xaxis = list(title = \"\"),\n         yaxis = list(title = \"\"))\n\nfig\nfig <- plot_ly()\nfig <- fig %>% add_bars(\n    x = c(\"2016\", \"2017\", \"2018\"),\n    y = c(500,600,700),\n    base = c(-500,-600,-700),\n    marker = list(\n      color = 'lightpink'\n    ),\n    name = 'expenses'\n  )\nfig <- fig %>% add_bars(\n    x = c(\"2016\", \"2017\", \"2018\"),\n    y = c(300,400,700),\n    base = 0,\n    marker = list(\n      color = 'lightblue'\n    ),\n    name = 'revenue'\n  )\n\nfig"},{"path":"introduction-to-plotly.html","id":"comparing-over-time-line-charts-area-plots","chapter":"15 Introduction to plotly","heading":"15.1.2.2 Comparing over time – Line Charts, Area Plots","text":"Line charts aimed show changes data either short long periods time, compare trend different groups data.Area charts aimed also indicate total value compare differences among variables.Line chart single variable(Styled) Line chart one variablesArea chart single variable(Custom colored) Area chart one variables(Stacked) Area chart one variables suitable displaying part--whole relations showing constituent parts whole one .","code":"\nx <- c(1:100)\nrandom_y <- rnorm(100, mean = 0)\ndata <- data.frame(x, random_y)\n\nfig <- plot_ly(data, x = ~x, y = ~random_y, type = 'scatter', mode = 'lines')\n\nfig\nmonth <- c('January', 'February', 'March', 'April', 'May', 'June', 'July',\n         'August', 'September', 'October', 'November', 'December')\nhigh_2000 <- c(32.5, 37.6, 49.9, 53.0, 69.1, 75.4, 76.5, 76.6, 70.7, 60.6, 45.1, 29.3)\nlow_2000 <- c(13.8, 22.3, 32.5, 37.2, 49.9, 56.1, 57.7, 58.3, 51.2, 42.8, 31.6, 15.9)\nhigh_2007 <- c(36.5, 26.6, 43.6, 52.3, 71.5, 81.4, 80.5, 82.2, 76.0, 67.3, 46.1, 35.0)\nlow_2007 <- c(23.6, 14.0, 27.0, 36.8, 47.6, 57.7, 58.9, 61.2, 53.3, 48.5, 31.0, 23.6)\nhigh_2014 <- c(28.8, 28.5, 37.0, 56.8, 69.7, 79.7, 78.5, 77.8, 74.1, 62.6, 45.3, 39.9)\nlow_2014 <- c(12.7, 14.3, 18.6, 35.5, 49.9, 58.0, 60.0, 58.6, 51.7, 45.2, 32.2, 29.1)\n\ndata <- data.frame(month, high_2000, low_2000, high_2007, low_2007, high_2014, low_2014)\n\n#The default order will be alphabetized unless specified as below:\ndata$month <- factor(data$month, levels = data[[\"month\"]])\n\nfig <- plot_ly(data, x = ~month, y = ~high_2014, name = 'High 2014', type = 'scatter', mode = 'lines',\n        line = list(color = 'rgb(205, 12, 24)', width = 4)) \nfig <- fig %>% add_trace(y = ~low_2014, name = 'Low 2014', line = list(color = 'rgb(22, 96, 167)', width = 4)) \nfig <- fig %>% add_trace(y = ~high_2007, name = 'High 2007', line = list(color = 'rgb(205, 12, 24)', width = 4, dash = 'dash')) \nfig <- fig %>% add_trace(y = ~low_2007, name = 'Low 2007', line = list(color = 'rgb(22, 96, 167)', width = 4, dash = 'dash')) \nfig <- fig %>% add_trace(y = ~high_2000, name = 'High 2000', line = list(color = 'rgb(205, 12, 24)', width = 4, dash = 'dot')) \nfig <- fig %>% add_trace(y = ~low_2000, name = 'Low 2000', line = list(color = 'rgb(22, 96, 167)', width = 4, dash = 'dot')) \nfig <- fig %>% layout(title = \"Average High and Low Temperatures in New York\",\n         xaxis = list(title = \"Months\"),\n         yaxis = list (title = \"Temperature (degrees F)\"))\n\nfig\ndensity <- density(diamonds$carat)\n\nfig <- plot_ly(x = ~density$x, y = ~density$y, type = 'scatter', mode = 'lines', fill = 'tozeroy')\nfig <- fig %>% layout(xaxis = list(title = 'Carat'),\n         yaxis = list(title = 'Density'))\n\nfig\ndiamonds1 <- diamonds[which(diamonds$cut == \"Fair\"),]\ndensity1 <- density(diamonds1$carat)\n\ndiamonds2 <- diamonds[which(diamonds$cut == \"Ideal\"),]\ndensity2 <- density(diamonds2$carat)\n\nfig <- plot_ly(x = ~density1$x, y = ~density1$y, type = 'scatter', mode = 'lines', name = 'Fair cut', fill = 'tozeroy',\n        fillcolor = 'rgba(168, 216, 234, 0.5)',\n        line = list(width = 0.5))\nfig <- fig %>% add_trace(x = ~density2$x, y = ~density2$y, name = 'Ideal cut', fill = 'tozeroy',\n            fillcolor = 'rgba(255, 212, 96, 0.5)')\nfig <- fig %>% layout(xaxis = list(title = 'Carat'),\n         yaxis = list(title = 'Density'))\n\nfig\ndata <- t(USPersonalExpenditure)\ndata <- data.frame(\"year\"=rownames(data), data)\n\nfig <- plot_ly(data, x = ~year, y = ~Food.and.Tobacco, name = 'Food and Tobacco', type = 'scatter', mode = 'none', stackgroup = 'one', fillcolor = '#F5FF8D')\nfig <- fig %>% add_trace(y = ~Household.Operation, name = 'Household Operation', fillcolor = '#50CB86')\nfig <- fig %>% add_trace(y = ~Medical.and.Health, name = 'Medical and Health', fillcolor = '#4C74C9')\nfig <- fig %>% add_trace(y = ~Personal.Care, name = 'Personal Care', fillcolor = '#700961')\nfig <- fig %>% add_trace(y = ~Private.Education, name = 'Private Education', fillcolor = '#312F44')\nfig <- fig %>% layout(title = 'United States Personal Expenditures by Categories',\n         xaxis = list(title = \"\",\n                      showgrid = FALSE),\n         yaxis = list(title = \"Expenditures (in billions of dollars)\",\n                      showgrid = FALSE))\n\nfig"},{"path":"introduction-to-plotly.html","id":"distribution","chapter":"15 Introduction to plotly","heading":"15.1.3 Distribution","text":"One coutinuous variable histogram:One continuous variable histogram density line:multi-continuous variable histogram overlaid:","code":"\nfig <- plot_ly(data = iris, x = ~Sepal.Length,type=\"histogram\")\nfig\ndens<-density(iris$Sepal.Length)\n\nfig <- plot_ly(data = iris,x = ~Sepal.Length,type=\"histogram\", name = \"Histogram\")%>%\n  add_trace(x=dens$x,y=dens$y,mode = \"lines\",type='scatter', fill = \"tozeroy\", yaxis = \"y2\", name = \"Density\") %>% \n  layout(yaxis2 = list(overlaying = \"y\", side = \"right\"))\nfig\nfig <- plot_ly(data=iris,alpha = 0.6)\nfig <- fig %>% add_histogram(x = ~Sepal.Length,name='sepal length')\nfig <- fig %>% add_histogram(x = ~Petal.Length,name='petalvlength')\nfig <- fig %>% add_histogram(x = ~Petal.Width,name='petal width')\nfig <- fig %>% layout(barmode = \"overlay\")\n\nfig"},{"path":"introduction-to-plotly.html","id":"relationship","chapter":"15 Introduction to plotly","heading":"15.1.4 Relationship","text":"","code":""},{"path":"introduction-to-plotly.html","id":"between-two-continuous-variables","chapter":"15 Introduction to plotly","heading":"15.1.4.1 Between two continuous variables:","text":"Scatter plot","code":"\nfig <- plot_ly(data = iris, x = ~Sepal.Length, y = ~Petal.Length)\nfig\n#with color:\nfig_color <- plot_ly(data = iris, x = ~Sepal.Length, y = ~Petal.Length, color = ~Species)\nfig_color"},{"path":"introduction-to-plotly.html","id":"multiple-variables","chapter":"15 Introduction to plotly","heading":"15.1.4.2 Multiple variables:","text":"Bubble size scatter plot indicating relationship 3 variables text hover","code":"\ndata <- read.csv(\"https://raw.githubusercontent.com/plotly/datasets/master/school_earnings.csv\")\n\nfig <- plot_ly(data, x = ~Women, y = ~Men, text = ~School, type = 'scatter', mode = 'markers',\n        marker = list(size = ~Gap, opacity = 0.5, color = 'rgb(255, 65, 54)'))\nfig <- fig %>% layout(title = 'Gender Gap in Earnings per University',\n         xaxis = list(showgrid = FALSE),\n         yaxis = list(showgrid = FALSE))\nfig"},{"path":"introduction-to-plotly.html","id":"composition","chapter":"15 Introduction to plotly","heading":"15.1.5 Composition","text":"","code":""},{"path":"introduction-to-plotly.html","id":"changing-over-time","chapter":"15 Introduction to plotly","heading":"15.1.5.1 Changing over time","text":"Cumulative values:\nStacked area chart","code":"\ndata <- t(USPersonalExpenditure)\ndata <- data.frame(\"year\"=rownames(data), data)\n\nfig <- plot_ly(data, x = ~year, y = ~Food.and.Tobacco, name = 'Food and Tobacco', type = 'scatter', mode = 'none', stackgroup = 'one', groupnorm = 'percent', fillcolor = '#F5FF8D')\nfig <- fig %>% add_trace(y = ~Household.Operation, name = 'Household Operation', fillcolor = '#50CB86')\nfig <- fig %>% add_trace(y = ~Medical.and.Health, name = 'Medical and Health', fillcolor = '#4C74C9')\nfig <- fig %>% add_trace(y = ~Personal.Care, name = 'Personal Care', fillcolor = '#700961')\nfig <- fig %>% add_trace(y = ~Private.Education, name = 'Private Education', fillcolor = '#312F44')\nfig <- fig %>% layout(title = 'United States Personal Expenditures by Categories',\n         xaxis = list(title = \"\",\n                      showgrid = FALSE),\n         yaxis = list(title = \"Proportion from the Total Expenditures\",\n                      showgrid = FALSE,\n                      ticksuffix = '%'))\n\nfig"},{"path":"introduction-to-plotly.html","id":"static","chapter":"15 Introduction to plotly","heading":"15.1.5.2 Static","text":"Single categorical variable:\npie chart:Multi-categorical variables:\nStacked bar plot:Hierarchical data:\nMulti-categorical:\nTree map displays hierarchical data sets nested rectangles. represent branches dimension data.sequential data\nwaterfall chart helps understanding cumulative effect sequential values. represent accumulation subtraction total. ’s great representation lots financial data.","code":"\nfig <- plot_ly()\nfig <- fig %>% add_pie(data = count(iris,Species), labels = ~Species, values = ~n,\n                         name = \"Species\", domain = list(row = 0, column = 0))\nfig\ndata(Arthritis)\nuniq<-unique(Arthritis$Treatment)\nArthritis%>% group_by(Treatment) %>%arrange(Improved)%>%\n  plot_ly( x = ~Treatment, y = ~Improved,color = ~ Improved,type = 'bar')%>%\nlayout(yaxis = list(title = 'value'), barmode = 'stack')\ndf1 = read.csv('https://raw.githubusercontent.com/plotly/datasets/718417069ead87650b90472464c7565dc8c2cb1c/sunburst-coffee-flavors-complete.csv')\n\nfig <- plot_ly(\n  type='treemap',\n  ids=df1$ids,\n  labels=df1$labels,\n  parents=df1$parents,\n  domain=list(column=0))\nfig\nx= list(\"Sales\", \"Consulting\", \"Net revenue\", \"Purchases\", \"Other expenses\", \"Profit before tax\")\nmeasure= c(\"relative\", \"relative\", \"total\", \"relative\", \"relative\", \"total\")\ntext= c(\"+60\", \"+80\", \"\", \"-40\", \"-20\", \"Total\")\ny= c(60, 80, 0, -40, -20, 0)\ndata = data.frame(x=factor(x,levels=x),measure,text,y)\n\nfig <- plot_ly(\n  data, name = \"20\", type = \"waterfall\", measure = ~measure,\n  x = ~x, textposition = \"outside\", y= ~y, text =~text,\n  connector = list(line = list(color= \"rgb(63, 63, 63)\"))) \nfig <- fig %>%\n  layout(title = \"Profit and loss statement 2018\",\n        xaxis = list(title = \"\"),\n        yaxis = list(title = \"\"),\n        autosize = TRUE,\n        showlegend = TRUE)\n\nfig"},{"path":"introduction-to-plotly.html","id":"references-1","chapter":"15 Introduction to plotly","heading":"15.2 References","text":"https://plotly.com/r/bar-charts/\nhttps://plotly.com/r/horizontal-bar-charts/\nhttps://plotly.com/r/line-charts/\nhttps://www.fusioncharts.com/blog/line-charts-vs-area-charts/\nhttps://plotly.com/r/filled-area-plots/\nhttps://plotly.com/r/treemaps/\nhttps://plotly.com/python/waterfall-charts/\nhttps://plotly.com/r/histograms/\nhttps://www.qlik.com/blog/third-pillar--mapping-data--visualizations-usage","code":""},{"path":"tutorial-on-cluster-analysis.html","id":"tutorial-on-cluster-analysis","chapter":"16 Tutorial on Cluster Analysis","heading":"16 Tutorial on Cluster Analysis","text":"Jannik Wiedenhaupt","code":""},{"path":"tutorial-on-cluster-analysis.html","id":"what-is-clustering-analysis","chapter":"16 Tutorial on Cluster Analysis","heading":"16.1 What is Clustering Analysis?","text":"Clustering Analysis data exploration method one popular classification techniques. Clustering works segregating data points different groups based similarity dissimiliarity attributes. means data clustered homogeneity inside clusters maximized heterogeneity clusters maximized. concept novel human understanding, clustering grouping elements based likeness important.Likewise data science machine learning, clustering algorithms carry task labeling unlabelled data inputs helps data interpretation establishing patterns predictive purposes.understand idea clustering, let’s look following picures points customer rated personal importance price quality.\nCan identify groups data points graph?\n\ncluster data like ?\n\nlike ?\nvisual representation (also two-dimensional), can already clearly decide cluster data points. cluster data points properly, need clustering algorithms.","code":""},{"path":"tutorial-on-cluster-analysis.html","id":"what-types-of-clustering-analysis-exist","chapter":"16 Tutorial on Cluster Analysis","heading":"16.2 What Types of Clustering Analysis Exist?","text":"many different types clustering algorithms particularly useful different situations.four common types :","code":""},{"path":"tutorial-on-cluster-analysis.html","id":"centroid-based-algorithms","chapter":"16 Tutorial on Cluster Analysis","heading":"16.2.1 Centroid-based Algorithms","text":"Centroid-based algorithm separate data points based multiple -called centroids data. data point assigned cluster based squared distance centroid. commonly used type clustering.","code":""},{"path":"tutorial-on-cluster-analysis.html","id":"hierarchical-algorithms","chapter":"16 Tutorial on Cluster Analysis","heading":"16.2.2 Hierarchical Algorithms","text":"Hierarchical algorithms differ centroid-based algorithms constract hierarchy among data points. hierarchy, one can choose different sized clusters based granularity required task hand. normally used hierarchical data structures like company databases taxonomy animal species.\ntwo main types hierarchical algorithms:Agglomerative clustering - observations considered invdividually merged everbigger clustersDivisive cluster - observations considered together split int eversmaller clusters","code":""},{"path":"tutorial-on-cluster-analysis.html","id":"distribution-based-algorithms","chapter":"16 Tutorial on Cluster Analysis","heading":"16.2.3 Distribution-based Algorithms","text":"Distribution-based clustering assumes data composed distributions. Therefore, data points considered parts cluster based probability belong given cluster. distance center cluster increases, probability data point belongs cluster decreases. algorithm recommended know distribution data.","code":""},{"path":"tutorial-on-cluster-analysis.html","id":"density-based-algorithms","chapter":"16 Tutorial on Cluster Analysis","heading":"16.2.4 Density-based Algorithms","text":"Density-based clustering works detecting regions factors focused ’re separated via means regions might empty sparse. Points part cluster categorized noise. Outliers assigned clusters therefore ignored algorithms.","code":""},{"path":"tutorial-on-cluster-analysis.html","id":"how-does-cluster-analysis-work-on-paper","chapter":"16 Tutorial on Cluster Analysis","heading":"16.3 How Does Cluster Analysis Work on Paper?","text":"following process followed approaching cluster analysis.Variable selection: Select variables, called bases, used cluster observations. want make decisions based classification, example targeting different groups customers, likely also want additional variables, called descriptors, help understand found clusters.Similarity/Dissimilarity calculation: Choose suitable measures proximity different observations. Based type bases, need choose distance function similarity function. variables compared individually first. , summed calculate total similarity/distance two observations. Comparing observations yields proximity distance matrix.Cluster creation: Choose suitable clustering method ones mentioned needed also objective functions decide clusters merged split .Additional steps (always required):\n1. Determine number clusters. can either done based thorough understanding problem’s domain, planned interpretation, statistical procedure. example required centroid-based algorithms.\n2. Interpretation clusters.\n3. Test strength clustering results. Test internal homogeneity external homogeneity clusters.","code":""},{"path":"tutorial-on-cluster-analysis.html","id":"how-does-cluster-analysis-work-in-r","chapter":"16 Tutorial on Cluster Analysis","heading":"16.4 How Does Cluster Analysis Work in R?","text":"","code":""},{"path":"tutorial-on-cluster-analysis.html","id":"data-preparation","chapter":"16 Tutorial on Cluster Analysis","heading":"16.4.1 Data Preparation","text":"First, load dataset. tutorial, use states dataset cluster US states.Second, also use factoextra package particularly eclust function simplify analysis visualization.Third, check data following form:Rows observations columns variablesMissing values removed estimatedData must standardizedAvoid double-weighting underlying constructs avoiding multicollinearity","code":"\ndf <- datasets::state.x77%>%data.frame()\nhead(df, 3)##         Population Income Illiteracy Life.Exp Murder HS.Grad Frost   Area\n## Alabama       3615   3624        2.1    69.05   15.1    41.3    20  50708\n## Alaska         365   6315        1.5    69.31   11.3    66.7   152 566432\n## Arizona       2212   4530        1.8    70.55    7.8    58.1    15 113417\n# Delete NA values\ndf <- na.omit(df)\n\n# Save non-scaled version for later\ndf_original <- df\n\n# Standardize variables\ndf <- df %>% mutate_all(~(scale(.) %>% as.vector))\n\ncor_matrix <- cor(df)\ncorrplot(cor_matrix, method = \"number\", type = \"lower\", tl.pos = 'd')\n# Because murder and life expectancy are strongly correlated, we remove murder\ndf <- subset(df, select = -c(Murder))"},{"path":"tutorial-on-cluster-analysis.html","id":"centroid-based-algorithms-1","chapter":"16 Tutorial on Cluster Analysis","heading":"16.4.2 Centroid-based Algorithms","text":"classic centroid-based algorithm called “k-means” used . K-means takes data points input groups k clusters following process.Select inputsSelect k cluster centersAssign cases closest centerUpdate cluster centersReassign casesRepeat steps 4 5 convergenceGoing process R simple requires one function.\nparameters followingFUNcluster: Clustering function. , k-means.hc_metric: Metric used calculating dissimilarities observations. , euclidean distance.k: Number clusters. 5 guessed lack exploration dataset.","code":"\nres.km <- eclust(df, FUNcluster = \"kmeans\", k = 5, hc_metric = \"euclidean\")"},{"path":"tutorial-on-cluster-analysis.html","id":"choosing-the-number-of-clusters","chapter":"16 Tutorial on Cluster Analysis","heading":"16.4.2.1 Choosing the Number of Clusters","text":"Alternatively setting number clusters k , can also resort different statistics:1. Gap Statistic2. Silhouette Plot3. Elbow Method\nelbow method visual method, determine cluster based spotting elbow graph.weak (pronounced) elbows 2 6.4. Indices\nUse package NbClust experiment different clustering methods, distances, indices.","code":"\nres.km <- eclust(df, FUNcluster = \"kmeans\", hc_metric = \"euclidean\", graph = FALSE)\nfviz_gap_stat(res.km$gap_stat)\nfviz_silhouette(res.km)##   cluster size ave.sil.width\n## 1       1   15          0.08\n## 2       2   23          0.36\n## 3       3   11          0.52\n## 4       4    1          0.00\nfviz_nbclust(df, FUNcluster = kmeans, method = \"wss\") + labs(subtitle = \"Elbow method\") \ncat(\"C-Index:\\n\", NbClust(data=df, method = \"kmeans\", distance = \"euclidean\", index=\"cindex\")$Best.nc)## C-Index:\n##  3 0.2594\ncat(\"Dunn-Index:\\n\", NbClust(data=df, method = \"kmeans\", distance = \"euclidean\", index=\"dunn\")$Best.nc)## Dunn-Index:\n##  15 0.3403\ncat(\"McClain-Index:\\n\", NbClust(data=df, method = \"kmeans\", distance = \"euclidean\", index=\"mcclain\")$Best.nc)## McClain-Index:\n##  2 0.3932"},{"path":"tutorial-on-cluster-analysis.html","id":"hierarchial-algorithms","chapter":"16 Tutorial on Cluster Analysis","heading":"16.4.3 Hierarchial Algorithms","text":"two fundamental methods hierarchical clustering - agglomerative divisive clustering. explain .\nhierarchical clustering need define calculate number clusters running algorithm. Moreover, hierarchical clustering results comprehensible tree-like structure called Dendrogram allows us find number clusters interpretable.","code":""},{"path":"tutorial-on-cluster-analysis.html","id":"divisive-hierarchical-clustering","chapter":"16 Tutorial on Cluster Analysis","heading":"16.4.3.1 Divisive Hierarchical Clustering","text":"objects points dataset belong one single clusterPartition single cluster two least similar clustersRepeat step 2 observation single clusterThe parameters followingFUNcluster: “hclust” divisive clustering.hc_metric: “euclidean” euclidean distance., see discrepancy k-means clustering. gap-statistic yielded 4 optimal clusters, hierarchical clustering identifies 2 major cluster.","code":"\nres.hclust <- eclust(df, FUNcluster = \"hclust\", hc_metric = \"euclidean\")\nfviz_dend(res.hclust, rect = TRUE)\nfviz_cluster(res.hclust, labelsize = 10)"},{"path":"tutorial-on-cluster-analysis.html","id":"agglomerative-hierarchical-clustering","chapter":"16 Tutorial on Cluster Analysis","heading":"16.4.3.2 Agglomerative Hierarchical Clustering","text":"observation single clusterEvery two observations closest according distance measure, clusteredRepeat step 2 observations one clusterIt important notice agglomerative clustering requires agglomeration method specified. different agglomeration methods can read : https://en.wikipedia.org/wiki/Hierarchical_clustering#Linkage_criteria.\nchoose commonly used ward.D2 measure minimized total within-cluster variance.parameters followingFUNcluster: “agnes” agglomerative nesting.hc_method: Agglomeration method. , ward.D2.hc_metric: “euclidean” euclidean distance.possible see differences agglomerative diviseve clustering, two methods come result example.","code":"\nres.aclust <- eclust(df, FUNcluster = \"hclust\", hc_metric = \"euclidean\", hc_method = \"ward.D2\")\nfviz_dend(res.aclust, rect = TRUE)\nfviz_cluster(res.aclust, labelsize = 10)"},{"path":"tutorial-on-cluster-analysis.html","id":"distribution-based-algorithms-1","chapter":"16 Tutorial on Cluster Analysis","heading":"16.4.4 Distribution-based Algorithms","text":"explanation good R-tutorial distribution-based algorithms, please visit (Note: Distribution-based algorithms called model-based algorithms ): https://www.datanovia.com/en/lessons/model-based-clustering-essentials/","code":""},{"path":"tutorial-on-cluster-analysis.html","id":"density-based-algorithms-1","chapter":"16 Tutorial on Cluster Analysis","heading":"16.4.5 Density-based Algorithms","text":"explanation good R-tutorial density-based algorithms, please visit: https://www.datanovia.com/en/lessons/dbscan-density-based-clustering-essentials/","code":""},{"path":"tutorial-on-cluster-analysis.html","id":"using-clustering-for-further-analysis","chapter":"16 Tutorial on Cluster Analysis","heading":"16.5 Using Clustering for Further Analysis","text":"clustering observations, want understand clusters mean. , visualize average strenght variable cluster.First, assign clusters dataframe.(Output res.km following)Second, visualize strength variables using heatmap describe different clusters.clustering variables shows cluster 4 largest area average income. However, comprises one observation thus less interpretable. Cluster 3 average income, life expectancy highschool graduation, average illiteracy. cluster can seen one worse performing states developmental areas. Cluster 2 1 relatively similar mostly average characteristics. meaningful difference population. Therefore, call cluster 2 “Low-populated average states” cluster 2 “High-populated average states”.see final classification results :hope tutorial helpful ! Good luck next clustering analysis!","code":"\ndf_clusters <- res.km$centers\nres.km## K-means clustering with 4 clusters of sizes 15, 23, 11, 1\n## \n## Cluster means:\n##   Population      Income  Illiteracy    Life.Exp    HS.Grad      Frost\n## 1  1.0136832  0.61841919  0.09296733  0.07901309  0.1822459 -0.5975278\n## 2 -0.5147347  0.08615414 -0.74968285  0.56233752  0.4850920  0.6945869\n## 3 -0.2269956 -1.30146170  1.39152706 -1.17731360 -1.4157826 -0.7206500\n## 4 -0.8693980  3.05824562  0.54139799 -1.16850978  1.6828035  0.9145676\n##          Area\n## 1 -0.07085360\n## 2 -0.09444464\n## 3 -0.23402899\n## 4  5.80934967\n## \n## Clustering vector:\n##        Alabama         Alaska        Arizona       Arkansas     California \n##              3              4              1              3              1 \n##       Colorado    Connecticut       Delaware        Florida        Georgia \n##              2              2              2              1              3 \n##         Hawaii          Idaho       Illinois        Indiana           Iowa \n##              1              2              1              2              2 \n##         Kansas       Kentucky      Louisiana          Maine       Maryland \n##              2              3              3              2              1 \n##  Massachusetts       Michigan      Minnesota    Mississippi       Missouri \n##              1              1              2              3              2 \n##        Montana       Nebraska         Nevada  New Hampshire     New Jersey \n##              2              2              2              2              1 \n##     New Mexico       New York North Carolina   North Dakota           Ohio \n##              3              1              3              2              1 \n##       Oklahoma         Oregon   Pennsylvania   Rhode Island South Carolina \n##              2              2              1              2              3 \n##   South Dakota      Tennessee          Texas           Utah        Vermont \n##              2              3              1              2              2 \n##       Virginia     Washington  West Virginia      Wisconsin        Wyoming \n##              1              1              3              2              2 \n## \n## Within cluster sum of squares by cluster:\n## [1] 66.96776 52.45135 19.80725  0.00000\n##  (between_SS / total_SS =  59.4 %)\n## \n## Available components:\n## \n##  [1] \"cluster\"      \"centers\"      \"totss\"        \"withinss\"     \"tot.withinss\"\n##  [6] \"betweenss\"    \"size\"         \"iter\"         \"ifault\"       \"silinfo\"     \n## [11] \"nbclust\"      \"data\"         \"gap_stat\"\nmelt_df <- melt(df_clusters)\n\nheatmap <- ggplot(melt_df, aes(Var2, Var1)) +\n  scale_fill_continuous(type = \"viridis\", direction = -1) +\n  geom_tile(aes(fill = value)) +\n  geom_text(aes(label = round(value, 1))) +\n  theme_bw() +\n  ggtitle(\"Strength of Each of the Variables in the Clusters\") +\n  theme(plot.title = element_text(hjust = 0.5)) +\n  labs(x=\"Variable\", y=\"Cluster\")\nheatmap\ndf_original[\"Cluster\"] <- res.km$cluster\ndf_out <- df_original[order(-df_original$Cluster), ]\nknitr::kable(df_out)"},{"path":"tutorial-on-cluster-analysis.html","id":"sources","chapter":"16 Tutorial on Cluster Analysis","heading":"16.6 Sources","text":"Giordani, P., Ferraro, M. B., & Martella, F. (2020). Introduction Clustering. https://doi.org/10.1007/978-981-13-0553-5_1Sultana, S. (2020, December 21). Hierarchical Clustering Algorithm Works. Retrieved October 24, 2021, https://dataaspirant.com/hierarchical-clustering-algorithm/#t-1608531820434Rawat, S. (2021, June 25). 6 Types Clustering Algorithms Machine Learning | Analytics Steps. Retrieved October 23, 2021, https://www.analyticssteps.com/blogs/6-types-clustering-algorithms-machine-learningDatanovia. (n.d.). Agglomerative Hierarchical Clustering - Datanovia. Retrieved October 24, 2021, https://www.datanovia.com/en/lessons/agglomerative-hierarchical-clustering/TechVidvan. (n.d.). Cluster Analysis R - Complete Guide Clustering R - TechVidvan. Retrieved October 24, 2021, https://techvidvan.com/tutorials/cluster-analysis--r/R Bloggers. (2019, July). Customer Segmentation using RFM Analysis - Rsquared Academy Blog - Explore Discover Learn. Retrieved October 24, 2021, https://blog.rsquaredacademy.com/customer-segmentation-using-rfm-analysis/","code":""},{"path":"how-to-integrate-r-with-postgresql.html","id":"how-to-integrate-r-with-postgresql","chapter":"17 How to Integrate R with PostgreSQL","heading":"17 How to Integrate R with PostgreSQL","text":"Julia Wang","code":""},{"path":"how-to-integrate-r-with-postgresql.html","id":"motivation","chapter":"17 How to Integrate R with PostgreSQL","heading":"17.1 Motivation","text":"guide teach connect RStudio local instance PostgreSQL, popular open source object-relational database server management system, free download. become familiar connecting PostgreSQL instance, perform quick Linear Regression sample data, store data PostgreSQL database, reuse LR model make prediction.Note: instance database used interchangeably guide, mean thing.","code":""},{"path":"how-to-integrate-r-with-postgresql.html","id":"how-to-integrate-r-with-postgresql-1","chapter":"17 How to Integrate R with PostgreSQL","heading":"17.2 How to Integrate R with PostgreSQL","text":"haven’t already, [download PostgreSQL]((https://www.postgresql.org/download/){target=\"_blank\"} setup pgAdmin 4. note user password create process, well make note port host used set PostgreSQL (defaults localhost 5432). need information later establish connection RStudio PostgreSQL instance.set PostgreSQL able connect pgAdmin 4, now RStudio, want install use relevant RPostgreSQL packages. can running following commands.","code":"\ninstall.packages(\"RPostgres\")\ninstall.packages(\"devtools\")\ninstall.packages(\"DBI\")\ninstall.packages(\"remotes\")"},{"path":"how-to-integrate-r-with-postgresql.html","id":"create-your-connection","chapter":"17 How to Integrate R with PostgreSQL","heading":"17.2.1 Create your connection","text":"case want use separate dummy/admin user, can create user going Servers > PostgreSQL > Databases >  > Login > right click Create > Login/Group Role. name user name set password Definition whatever want. priviledge login bare minimum. following R block, going setup connection PostgreSQL instance. One question might reading following block drv (driver) . driver context tool allows applications access data database systems, similar printer drivers allow talk printer print things. pass driver relevant information database database user create connection, able use run R commands, dbListTables, list tables database.","code":"\ndb <- '<your db name here>'  # provide the name of your db\n\nhost_db <- '<your db server here>' # i.e. 'ec2-54-83-201-96.compute-1.amazonaws.com or localhost if you are connecting to an instance on your own laptop'  \ndb_port <- '5432'  # or any other port specified by the DBA\n\ndb_user <- '<your db user here>' # user that has access to your SQL instance\n\ndb_password <- '<your db user pwd here>' # password of the user who has access to your SQL instance.\n\ndrv <- RPostgres::Postgres()\n\ncon <- dbConnect(drv, dbname = db, host=host_db, port=db_port, user=db_user, password=db_password)  \n\ndbListTables(con) # returns a list of tables in your database\ndbExistsTable(con, \"<table name>\") # checks if the table exists in your database"},{"path":"how-to-integrate-r-with-postgresql.html","id":"basic-sql-commands","chapter":"17 How to Integrate R with PostgreSQL","heading":"17.2.2 Basic SQL commands","text":"addition two commands showed , basic commands built RPostgres library, allow read write database. following block show write dataframe table instance, well query afterwards.don’t notice table immediately, make sure right click tables dropdown sidebar hit refresh.Read table:case prefer writing raw sql, can use dbGetQuery method. also dbSendQuery method bit involved, purposes, dbGetQuery sufficient.dbSendQuery method submits synchronously executes SQL query database engine. extract records, need use dbFetch method, must call dbClearResult finish fetching records need. going run SQL queries RStudio, likely using dbGetQuery.Now able connect talk PostgreSQL instance, can now run analyses using data stored well store results . can also pull saved model make predictions well, can save us time retraining models.Make sure clean connections finished working database.","code":"\n# Create a table\nlibrary(tidyverse)\n\ncars <- mtcars %>% rownames_to_column(\"carname\") \n  \ndbWriteTable(con, 'cars', cars) # add the mtcars data set to your database as a table called \"cars\"\n\ncars <- cars %>% mutate(id = row_number()) # if you want to change your data, such as adding an id column\n\ndbWriteTable(con, 'cars', cars, overwrite=TRUE, append=FALSE) # you will need to pass in additional parameters. Overwrite will drop and recreate the table with your new data. Append just appends your data, your df needs to be in the same shape with the same variable names in order to work.\ndbReadTable(con, \"cars\") # read your newly created table\n\nresult <- dbReadTable(con, \"cars\") # can also be stored as variable\nlibrary(ggplot2)\n\ndbGetQuery(con, 'ALTER TABLE cars ADD CONSTRAINT cars_pk PRIMARY KEY (id)') # add primary key to the id column\n\ndb_cars <- dbGetQuery(con, 'SELECT * FROM cars WHERE id <= 20') # filter down our data set \n\nggplot(db_cars, aes(x=disp, y=mpg)) + \n  geom_point() +\n  ggtitle(\"Miles Per Gallon vs. Displacement (cu.in.)\") +\n  ylab(\"Miles Per Gallon\") +\n  xlab(\"Displacement (cu.in.)\")\nmodel <- lm(mpg ~ disp, db_cars)\n\nserialized_model <- rawToChar(serialize(model, NULL, ascii=TRUE)) # serialize (convert string) model so it can be stored in database\n\n# create table for model to be stored in\ndbGetQuery(con, 'CREATE TABLE models (\n    id SERIAL PRIMARY KEY,\n    model TEXT NOT NULL\n);') \n\n# insert model into models table\ninsert_query <-'INSERT INTO models (model) VALUES ($1)'\nrs <- dbSendQuery(con, insert_query, list(serialized_model))\ndbClearResult(rs)\n\n# read the model from postgreSQL\nresult <- dbGetQuery(con, \"SELECT model FROM models WHERE id = 1\")\n\n# revert serialization, and we have a working model again!\ndb_model <- unserialize(charToRaw(as.character(result[,c('model')])))\nsummary(db_model)\n\n# use the model to make a prediction\ndisp <- 128\nX_test <- data.frame(disp)\npredict(db_model, X_test)\n# disconnect once you are finished\ndbDisconnect(con)\ndbUnloadDriver(drv)"},{"path":"how-to-integrate-r-with-postgresql.html","id":"sources-1","chapter":"17 How to Integrate R with PostgreSQL","heading":"17.3 Sources","text":"https://www.datacareer.de/blog/connect--postgresql--r--step--step-example/https://stackoverflow.com/questions/1395115/storing-r-objects---relational-database","code":""},{"path":"apply-function-in-r.html","id":"apply-function-in-r","chapter":"18 Apply function in r","heading":"18 Apply function in r","text":"Tianmai JiaoMy youtube link: https://youtu./GVoa_zwYGzs\ntutorial video apply function R. video, firstly introduce components apply function, give examples regarding use mean,max,percentile,plot function apply(). Finally, write function hand, apply apply function.","code":""},{"path":"introduction-to-interactive-graphs-in-r.html","id":"introduction-to-interactive-graphs-in-r","chapter":"19 Introduction to interactive graphs in R","heading":"19 Introduction to interactive graphs in R","text":"Lihui Pan(lp2892)Many different graphs intensely discussed class using ggplot, static. may others due ability show changes whole process, like alluvial diagrams, others can see differences groups.kinds diagrams may disadvantages, example. hard us go deeper specific group. Usually, drawing another diagram way. However, using interactive diagrams likely deal problems. Besides, actual-world application, changing aspects picture time may help better clarify problems deliver ideas.finishing document, understand popular packages used carry interactive plots know draw basic diagrams using . Apart , also learned three important skills:(1) download packages GitHub: Simply use install_github devtools - devtools::install_github()(2) change different R versions: Multiple ways posted online. However, easiest way right now using Rswitch. (Download : https://rud./rswitch/)(3)skip chunks knitting: Add eval=FALSE, message=TRUEThere also problems document need fixing, still find perfect solution:Diagram pictured rPlot can shown viewer rather directly chunksOutput fails returns error pandoc document conversion failed error 1\nThus, section 4&5 graph shown html file work rmd file.possible, may go future give detailed explanation packages.","code":"\nlibrary(networkD3)\nlibrary(visNetwork)\nlibrary(igraph)\nlibrary(igraphdata)\nlibrary(stringr)\nlibrary(rpart)\nlibrary(sparkline)\nlibrary(dygraphs)\nlibrary(plotly)\nlibrary(devtools)\n# library(recharts) remove this package for loading error and not being used in file\nlibrary(rCharts)\nlibrary(highcharter)\nlibrary(tidyverse)\nlibrary(data.table)"},{"path":"introduction-to-interactive-graphs-in-r.html","id":"networkd3","chapter":"19 Introduction to interactive graphs in R","heading":"19.1 networkD3","text":"field data visualization, visualization relational network data always topic widespread concern. example, can clearly understand relationship different characters kinds pictures. However, static pictures meet deep-seated needs, : quickly find character (node)? functions achieved static network diagrams, usually require introduction JavaScript implement interactive functions. , networkD3 works.(majority examples http://christophergandrud.github.io/networkD3/ slightly modified adopt documentation)","code":"\nlibrary(networkD3)"},{"path":"introduction-to-interactive-graphs-in-r.html","id":"simplenetwork","chapter":"19 Introduction to interactive graphs in R","heading":"19.1.1 simplenetwork","text":"start simple network.","code":"\nlibrary(networkD3)\n\nsrc <- c(\"A\", \"A\", \"A\", \"A\",\n        \"B\", \"B\", \"C\", \"C\", \"D\")\ntarget <- c(\"B\", \"C\", \"D\", \"J\",\n            \"E\", \"F\", \"G\", \"H\", \"I\")\nnetworkData <- data.frame(src, target)\n\nsimpleNetwork(networkData)"},{"path":"introduction-to-interactive-graphs-in-r.html","id":"forcenetwork","chapter":"19 Introduction to interactive graphs in R","heading":"19.1.2 forceNetwork","text":"come forceNetwork can parameters define network looks like. used data draw graphs second graph, parameters set like zoom helped zoom well change position pictures details.","code":"\ndata(MisLinks)\ndata(MisNodes)\nforceNetwork(Links = MisLinks, Nodes = MisNodes,\n             Source = \"source\", Target = \"target\",\n             Value = \"value\", NodeID = \"name\",\n             Group = \"group\")\nforceNetwork(Links = MisLinks, Nodes = MisNodes,\n             Source = \"source\", Target = \"target\",\n             Value = \"value\", NodeID = \"name\",\n             Group = \"group\", opacity = 0.8,\n             zoom = TRUE)"},{"path":"introduction-to-interactive-graphs-in-r.html","id":"sankeynetwork","chapter":"19 Introduction to interactive graphs in R","heading":"19.1.3 sankeyNetwork","text":"Sankey diagrams, also known Sankey energy flow diagrams, form flow chart, usually used show changes relationships “flow” data. Famous Matthew Henry Phineas Riall Sankey’s 1898 “diagram energy efficiency Steam Engine,” since named Sankey Diagram . Sankey diagrams, lines represent flow one node another, better suited visualizing “energy diversion” features compared conventional bar charts pie charts. time, width line proportional flow, larger width , larger flow . Important flows can identified intuitively. addition, connection level reflects traffic value also shows information structure distribution defined system. characteristics, Sankey diagrams widely used visualization analysis natural social sciences.","code":"\n# Load energy projection data\n# Load energy projection data\nURL <- paste0(\n        \"https://cdn.rawgit.com/christophergandrud/networkD3/\",\n        \"master/JSONdata/energy.json\")\nEnergy <- jsonlite::fromJSON(URL)\n# Plot\nsankeyNetwork(Links = Energy$links, Nodes = Energy$nodes, Source = \"source\",\n             Target = \"target\", Value = \"value\", NodeID = \"name\",\n             units = \"TWh\", fontSize = 12, nodeWidth = 30)"},{"path":"introduction-to-interactive-graphs-in-r.html","id":"visnetwork","chapter":"19 Introduction to interactive graphs in R","heading":"19.2 visNetwork","text":"visNetwork every similar usage networkD3. Thus, one example displayed . perspective, advantages. example, comes drawing Sankey diagram, prefer networkD3. However, visualizing decision tree model required, visNetowrk first choice.","code":"\nlibrary(visNetwork)\nlibrary(igraph)\nlibrary(igraphdata)\nlibrary(stringr)\nlibrary(rpart)\nlibrary(sparkline)\n\ndata(\"karate\")\n\nkaratedf <- igraph::as_data_frame(karate,what = \"both\")\nnodedf <- karatedf$vertices\nedagedf <- karatedf$edges\n#define the shape of nodes\nshape <-  c(\"square\", \"triangle\", \"box\", \"circle\", \"dot\", \"star\",\n          \"ellipse\", \"database\", \"text\", \"diamond\")\n#define the color of nodes\ncolor <- c(\"orange\", \"darkblue\", \"purple\",\"darkred\", \"grey\")\n#define the size of nodes\nnodesize <- degree(karate)\nNewnodes <- data.frame(id=nodedf$name, \n                       label = nodedf$label, \n                       group = paste(\"Group\",nodedf$Faction), \n                       title = nodedf$name,\n                       shape = shape[nodedf$Faction], \n                       color = color[nodedf$color], \n                       size = 10+ nodesize /2  \n                       )\nNewedages <- data.frame(from = edagedf$from,\n                        to = edagedf$to,\n                        label = paste(\"weight\",edagedf$weight,sep = \"-\"),\n                        width = edagedf$weight, \n                        color = color[edagedf$weight]\n                        )\nvisNetwork(Newnodes, Newedages, height = \"600px\", width = \"100%\",\n           main = \"visNetwork\",background = \"lightblue\") %>%\n  visGroups(groupname = \"Group 1\",color = color[1], shape = shape[1])%>%\n  visGroups(groupname = \"Group 2\",color = color[2], shape = shape[2])%>%\n  visLegend(useGroups = TRUE,width = 0.1,position = \"right\")%>%\n  visOptions(selectedBy = \"group\", \n             highlightNearest = TRUE, \n             nodesIdSelection = TRUE)%>%\n  visLayout(randomSeed = 4)"},{"path":"introduction-to-interactive-graphs-in-r.html","id":"dygraphs","chapter":"19 Introduction to interactive graphs in R","heading":"19.3 dygraphs","text":"Dygraphs open-source JS library. used generate scalable time charts can interacted user. mainly used display dense data sets, users can browse view data well.(Cite http://rstudio.github.io/dygraphs/index.html)Since time series really import finance sales volume forecasting, quite lot projects used R support. great example Kaggle Ross store sales volume forecasting visualization R :https://www.kaggle.com/shearerp/rossmann-store-sales/interactive-sales-visualization/code.detailed information can found .","code":"\nlibrary(dygraphs)\nlungDeaths <- cbind(mdeaths, fdeaths)\ndygraph(lungDeaths) %>%\n  dySeries(\"mdeaths\", label = \"Male\") %>%\n  dySeries(\"fdeaths\", label = \"Female\") %>%\n  dyOptions(stackedGraph = TRUE) %>%\n  dyRangeSelector(height = 20)\nhw <- HoltWinters(ldeaths)\npredicted <- predict(hw, n.ahead = 72, prediction.interval = TRUE)\n\ndygraph(predicted, main = \"Predicted Lung Deaths (UK)\") %>%\n  dyAxis(\"x\", drawGrid = FALSE) %>%\n  dySeries(c(\"lwr\", \"fit\", \"upr\"), label = \"Deaths\") %>%\n  dyOptions(colors = RColorBrewer::brewer.pal(3, \"Set1\"))"},{"path":"introduction-to-interactive-graphs-in-r.html","id":"plotly","chapter":"19 Introduction to interactive graphs in R","heading":"19.4 plotly","text":"Plotly interactive visualization library. official website provides Python, R, Matlab, JavaScript, Excel interfaces, can easily call Plotly software achieve interactive visualization.Plotly supports facet, facet shapes exceed 9, bug appears legend.\nthree main functions:(1)plot_lyplot_ly basic function used generate graph Plotly.Main parameters:Data - source dataData - source datatype diagram - ‘scatter’,‘bar’,‘box’,‘heatmap’,‘histogram’,‘histogram 2d’,‘area’,‘pie’,‘contour’,‘histogram 2d’,‘contour’, ‘scatter3d’,‘surface’,‘mesh3d’,scattergeo’,‘choropleth’type diagram - ‘scatter’,‘bar’,‘box’,‘heatmap’,‘histogram’,‘histogram 2d’,‘area’,‘pie’,‘contour’,‘histogram 2d’,‘contour’, ‘scatter3d’,‘surface’,‘mesh3d’,scattergeo’,‘choropleth’type symbol - ‘dot’, ‘cross’,‘diamond’, ‘square’, ‘triangle-’, ‘triangle-left’, ‘triangle-right’,‘triangle-’type symbol - ‘dot’, ‘cross’,‘diamond’, ‘square’, ‘triangle-’, ‘triangle-left’, ‘triangle-right’,‘triangle-’(2)add_trace()Add_trace() used add layers original diagram.(3)layout()believe Plotly one useful package among since can directly work ggplot quite familar . Examples shown section3.2.","code":"\nplot_ly(data = data.frame(), ..., type = NULL, color, colors = NULL,\n        alpha = 1, symbol, symbols = NULL, size, sizes = c(10, 100), linetype,\n        linetypes = NULL, split, width = NULL, height = NULL, source = \"A\")add_trace(p = last_plot(), …, group, color, colors, symbol, symbols,size, data = NULL, evaluate = FALSE)p <- layout(p,              \n    title = \"unemployment\",  \n    xaxis = list(title = \"time\", showgrid = F),\n    yaxis = list(title = \"uidx\"),\n    annotations = listlist(x = maxdf$date,y = maxdf$uempmed,text = \"Peak\",showarrow = T)\n    )\n)"},{"path":"introduction-to-interactive-graphs-in-r.html","id":"direct-usage","chapter":"19 Introduction to interactive graphs in R","heading":"19.4.1 Direct Usage","text":"","code":"\nlibrary(plotly)\nnames(iris) = gsub(\"\\\\.\", \"\", names(iris))\np <- plot_ly(iris, x = ~PetalLength, y = ~PetalWidth, color = ~Species, colors = \"Set1\", mode = \"markers\")\np"},{"path":"introduction-to-interactive-graphs-in-r.html","id":"combining-with-gglot","chapter":"19 Introduction to interactive graphs in R","heading":"19.4.2 Combining with gglot","text":"","code":"\nlibrary(ggplot2)\np <- ggplot(data=lattice::singer,aes(x=height,fill=voice.part))+\n  geom_density()+\n  facet_grid(voice.part~.)+\n  ggtitle('Original plot') +\n  theme(plot.title = element_text(hjust = 0.5))\np\nlibrary(plotly)\np <- ggplot(data=lattice::singer,aes(x=height,fill=voice.part))+\n  geom_density()+\n  facet_grid(voice.part~.)+\n  ggtitle('Original plot using ggplotly') +\n  theme(plot.title = element_text(hjust = 0.5))\n(gg <- ggplotly(p))"},{"path":"introduction-to-interactive-graphs-in-r.html","id":"rcharts","chapter":"19 Introduction to interactive graphs in R","heading":"19.5 rCharts","text":"rCharts may famous popular package interactive diagrams. R package create, customize publish interactive javascript visualizations R using familiar lattice style plotting interface(Cited https://ramnathv.github.io/rCharts/). way use functions quite straightforward - type used define specific diagram type, formulation data used specify data use use.","code":"\n# devtools::install_github('ramnathv/rCharts',force = TRUE)\nlibrary(devtools)\nlibrary(knitr)"},{"path":"introduction-to-interactive-graphs-in-r.html","id":"rplot","chapter":"19 Introduction to interactive graphs in R","heading":"19.5.1 rPlot","text":"","code":"\nlibrary(rCharts)\nnames(iris) = gsub(\"\\\\.\", \"\", names(iris))\np <- rPlot(PetalWidth ~ PetalLength, data = iris, color = 'Species', type = 'point')\n#p$save(\"p1.1.html\", standalone = TRUE)\np"},{"path":"introduction-to-interactive-graphs-in-r.html","id":"hplot","chapter":"19 Introduction to interactive graphs in R","heading":"19.5.2 hPlot","text":"Highcharts pure Javascript library charting, supporting types charts: line charts, graphs, region charts, region charts, bar charts, pie charts, scatter charts, etc. hPlot function provided rCharts package achieve . example plotted bubble plots student height pulse beats per minute, using age variable adjust bubble size.","code":"\nlibrary(rCharts)\na <- hPlot(Pulse ~ Height, data = MASS::survey, type = \"bubble\",title = \"hPlot Example\", subtitle = \"bubble chart\",size = \"Age\", group = \"Exer\")\na$colors('rgba(223, 83, 83, .5)', 'rgba(119, 152, 191, .5)','rgba(60, 179, 113, .5)')\na$chart(zoomType = \"xy\")\na$exporting(enabled = T)\n#a$save(\"p1.2.html\", standalone = TRUE)\na"},{"path":"introduction-to-interactive-graphs-in-r.html","id":"nplot","chapter":"19 Introduction to interactive graphs in R","heading":"19.5.3 nPlot","text":"detailed tutorials examples can found .http://ramnathv.github.io/rCharts//https://github.com/ramnathv/rCharts/tree/master/demo","code":"\nlibrary(rCharts)\nhair_eye_male <- subset(as.data.frame(HairEyeColor), Sex == \"Male\")\nhair_eye_male[,1] <- paste0(\"Hair\",hair_eye_male[,1])\nhair_eye_male[,2] <- paste0(\"Eye\",hair_eye_male[,2])\nn1 <- nPlot(Freq ~ Hair, group = \"Eye\", data = hair_eye_male,type = \"multiBarChart\")\n#n1$save(\"p1.3.html\", standalone = TRUE)\nn1"},{"path":"introduction-to-interactive-graphs-in-r.html","id":"recharts","chapter":"19 Introduction to interactive graphs in R","heading":"19.6 reCharts","text":"reCharts means redefine. reason behind name package gives users different experience design. redefine React design, also redefines composition configuration.\ndevelopers mentioned introduced package, main problems creating diagrams maybe :\n(1) much parameter can used, make process complicated also cause misunderstandings.\n(2) Styles diagrams vary lot hard unify. example, someone may ask - pillar bar chart triangle?reCharts sovles problems use following methods: (1) Declarative tags make writing charts easy writing HTML\n(2) Configuration items close native SVG make configuration items natural\n(3) Interface API, solve variety personalized needsMore detailed tutorials examples can found .https://recharts.org/en-US/","code":"\n# devtools::install_github('madlogos/recharts',force = TRUE)\nlibrary(devtools)\nlibrary(recharts)\nnames(iris) = gsub(\"\\\\.\", \"\", names(iris))\np <- echart(data=iris,x = ~PetalLength, y = ~PetalWidth,series = ~Species,type = 'scatter')\np\nhair_eye_male <- subset(as.data.frame(HairEyeColor), Sex == \"Male\")\nhair_eye_male[,1] <- paste0(\"Hair\",hair_eye_male[,1])\nhair_eye_male[,2] <- paste0(\"Eye\",hair_eye_male[,2])\np <- echart(data = hair_eye_male, x = ~Hair, y = ~Freq,  series = ~Eye,\n       type = 'bar', palette='fivethirtyeight',\n       xlab = 'Hair', ylab = 'Freq')\np"},{"path":"introduction-to-interactive-graphs-in-r.html","id":"highcharter","chapter":"19 Introduction to interactive graphs in R","heading":"19.7 highcharter","text":"final package document highcharter. Highcharter chart library written pure JavaScript makes easy add interactive charts Web sites Web applications.\nsection, complicated diagram introduced try figure procedures detailed way.(cite fromhttps://zhuanlan.zhihu.com/p/42430990)","code":"\nlibrary(highcharter)\nlibrary(tidyverse)\nlibrary(data.table)\nm <- c(1746181,1884428,2089758,2222362,2537431,2507081,2443179,2664537,3556505,3680231, 3143062 ,2721122, 2229181 ,2227768,\n       2176300, 1329968 , 836804,354784,90569,28367,3878)\nf <- c(1656154, 1787564, 1981671, 2108575, 2403438, 2366003, 2301402, 2519874,3360596, 3493473, 3050775, 2759560, 2304444,\n       2426504, 2568938, 1785638,1447162, 1005011, 330870, 130632, 21208)\nclass <- c('0-4', '5-9', '10-14', '15-19','20-24', '25-29', '30-34', '35-39', '40-44','45-49', '50-54','55-59', '60-64',\n           '65-69', '70-74', '75-79', '80-84', '85-89', '90-94','95-99', '100 + ')\n\nhighchart() %>%\n    hc_xAxis(list(categories = class,\n        reversed = FALSE, # whether to flip the coordinate\n        labels = list(step = 1)),\n      list(\n        opposite = TRUE, # ajust the position of the coordinate\n        categories = class,\n        reversed = FALSE,\n        linkedTo = 0,\n        labels = list(step = 1))\n    ) %>%\n  hc_plotOptions(series = list(borderWidth = 0))%>%\n  hc_yAxis(\n    labels = list(formatter = JS(\"function () { return (Math.abs(this.value) / 1000000) + 'M';}\")),\n    min = -4000000,max = 4000000)%>%# give the range of the x-axis\n  hc_tooltip(formatter = JS(\"function () {\n                                   return '<b>' + this.series.name + ', age ' + this.point.category + '<\/b><br/>' +\n                                     'popluation: ' + Highcharts.numberFormat(Math.abs(this.point.y), 0);}\"))%>%\n  hc_title(text = \"Popluation in 2015 Germany\",align=\"center\")%>%\n  hc_plotOptions(series= list(stacking = \"normal\")) %>%\n  # set the value to be negative to make them display in a same coordinate\n  hc_add_series(name = \"Male\",data = -m, type = \"bar\") %>% \n  hc_add_series(name = \"Female\",data = f,type = \"bar\") %>%\n  hc_add_theme(hc_theme_538())\ntext_data <- data.table(text =c(\"Brazil\",    \"Canada\",  \"Mexico\",  \"USA\",   \"Switerzeland\",  \"France\",   \"Spain\",  \"British\",   \"South Africa\",   \"Russia\",  \"Germany\", \"Iceland\",   \"Korean\",  \"China\",   \"India\",   \"Japan\"),\n                        weight =c(2,    3,  1,  1,  4,  5,  4,  3,  1,  1,  2,  3,  2,  6,  1,  1))\n\nhighchart() %>%\n  hc_title(text = \"World Cloud\") %>%\n  hc_add_series(data = text_data,type = \"wordcloud\",name= \"Score\",hcaes(name = text,weight = weight)) %>%\n  hc_add_theme(hc_theme_flat())\nexplorer_rate <- data.table(name = c('Firefox','IE','Chrome','Safari','Opera','other'),\n                            rate = c(45,    26.8,   12.8,   8.5,6.2,0.7))\n\nhighchart() %>%\n  hc_title(\n    #“<br>” can help change a line\n    text = \"Web broswer<br>Percentage\",\n    #position of title in horizontal axis\n    align = \"center\",\n    #position of title in vertical axis\n    verticalAlign = \"middle\",\n    y = 60) %>%\n  hc_plotOptions(pie = list(\n    dataLabels = list(\n      #show the label\n      enabled = TRUE,\n      #change the position\n      distance = -50,\n      style = list(fontWeight = \"bold\",color = \"white\")),\n    #the start angle of the chart\n    startAngle = -90,\n    #the end angle of the chart\n    endAngle = 90,\n    center = c('50%','75%')))%>%\n  hc_tooltip(\n    headerFormat = \"{series.name}<br>\",\n    pointFormat = \"{point.name}: <b>{point.percentage:.1f}%<\/b>\")%>%\n  hc_add_series(explorer_rate,type = \"pie\",hcaes(name = name, y = rate),name = \"percentage\",\n                #control the size\n                innerSize = \"50%\") %>%\n  hc_add_theme(hc_theme_google())\ntype <- c(\"Sales\", \"Marketing\", \"Development\", \"Support\",\"IT\",\"Administration\")\nactual <- c(50000, 39000, 42000, 31000, 26000, 14000)\nplan <- c(43000, 19000, 60000, 35000, 17000, 10000)\n\nhighchart() %>%\n  #set as polar coordinates\n  hc_chart(polar = TRUE,type = \"line\") %>% \n  hc_title(text = \"Budget and Expenditure\",x=-60) %>%\n  hc_pane(size = \"80%\") %>%\n  hc_legend(align = \"right\",verticalAlign = \"top\",y = 70,layout = \"vertical\") %>%\n  hc_xAxis(categories = type,\n           #hide the horizontal line\n           lineWidth = 0,\n           #rotate to match the vertices of the polygon\n           tickmarkPlacement = \"on\") %>%\n  hc_yAxis(#set as polygon\n           gridLineInterpolation = \"polygon\",\n           #hide the vertial line\n           lineWidth = 0,\n           min = 0) %>%\n  hc_tooltip(#show the result for two different type in the same line\n             shared = TRUE,\n             pointFormat = '<span style=\"color:{series.color}\">{series.name}: <b>${point.y:,.0f}<\/b><br/>')%>%\n  hc_add_series(name = \"Expenditure\",actual) %>%\n  hc_add_series(name = \"Budget\",plan) %>%\n  hc_add_theme(hc_theme_google())"},{"path":"plot-and-analyze-stock-data-with-r.html","id":"plot-and-analyze-stock-data-with-r","chapter":"20 Plot and Analyze Stock Data with R","heading":"20 Plot and Analyze Stock Data with R","text":"Yue Zhang Yue Xiong","code":""},{"path":"plot-and-analyze-stock-data-with-r.html","id":"motivation-1","chapter":"20 Plot and Analyze Stock Data with R","heading":"20.1 Motivation","text":"idea tutorial arise research final project involves lot interactions stock prices. need plot stock prices, analyze data convey financial information behind data. Therefore, gathered useful resources found thoughts tutorial.","code":""},{"path":"plot-and-analyze-stock-data-with-r.html","id":"plot-stock-data","chapter":"20 Plot and Analyze Stock Data with R","heading":"20.2 Plot stock data","text":"","code":""},{"path":"plot-and-analyze-stock-data-with-r.html","id":"using-ggplot2-to-plot-time-series","chapter":"20 Plot and Analyze Stock Data with R","heading":"20.2.1 Using ggplot2 to plot time series","text":"Let’s first look can basic R ggplot2. Stock data essentially time series, bare minimum, can plot stock data time series withe techniques learned class. Let’s use Pfizer data illustration function. downloaded 2-year historical data Pfizer Yahoo Finance saved csv file.plot, can clearly see stock’s trend past two year. However, time series plot encapsulates close price misses many information (open, high, low etc). exists commonly used financial charts describe price movements better, candlestick chart.","code":"\npfe_df <- read_csv(\"resources/stock_analysis/PFE.csv\")\n\npfe_df %>%\n  ggplot(aes(Date, Close)) +\n  geom_line() +\n  ggtitle(\"Pfizer 2-Year Stock price\")"},{"path":"plot-and-analyze-stock-data-with-r.html","id":"candlestick-chart","chapter":"20 Plot and Analyze Stock Data with R","heading":"20.2.2 Candlestick Chart","text":"","code":""},{"path":"plot-and-analyze-stock-data-with-r.html","id":"background-history","chapter":"20 Plot and Analyze Stock Data with R","heading":"20.2.2.1 Background History","text":"Candlestick charts thought developed 18th century Munehisa Homma, Japanese rice trader.[4] introduced Western world Steve Nison book, Japanese Candlestick Charting Techniques. often used today stock analysis along analytical tools.","code":""},{"path":"plot-and-analyze-stock-data-with-r.html","id":"description","chapter":"20 Plot and Analyze Stock Data with R","heading":"20.2.2.2 Description","text":"“candlestick” typically shows one day. similar bar chart candlestick represents four important pieces information day: open close thick body; high low “candle wick”. asset closed higher opened, body hollow green colored, opening price bottom body closing price top. asset closed lower opened, body solid red colored, opening price top closing price bottom. Thus, color candle represents price movement relative prior period’s close “fill” (solid hollow/green red) candle represents price direction period isolation (solid/red higher open lower close; hollow/green lower open higher close).","code":""},{"path":"plot-and-analyze-stock-data-with-r.html","id":"draw-candlestick-chart-in-r","chapter":"20 Plot and Analyze Stock Data with R","heading":"20.2.2.3 Draw Candlestick Chart in R","text":"going use package quantmod draw Candlestick Chart. Quantmod stands quantitative financial modelling framework. three main functions: download data, charting, technical indicator.Instead going search stock’s price Yahoo Finance download csv files read R, easier way quantmod, use function getSymbols. function can help download specific stock price directly r. default source ‘finance.yahoo.com’, can switch sources changing src.need know ticker stock can specify interested date range argument ‘’. , want download past 2 years’ data. gives open price, close price, daily highest price, daily lowest price, daily trading volumes adjusted price.first plot time series line style, looks exactly like one plotted ggplot2.try plot data candlestick style.","code":"\nPFE <- getSymbols(\"PFE\", src=\"yahoo\", from = \"2019-10-25\", to = \"2021-10-25\", auto.assign = FALSE)\nchartSeries(PFE,\n            type=\"line\",\n            theme=chartTheme('white'))\nchartSeries(PFE,\n            type=\"candlesticks\",\n            theme=chartTheme('white'))\nchartSeries(PFE,\n            type=\"candlesticks\",\n            subset='2021-09-25::2021-10-25',\n            theme=chartTheme('white'))"},{"path":"plot-and-analyze-stock-data-with-r.html","id":"interactive-plot","chapter":"20 Plot and Analyze Stock Data with R","heading":"20.2.2.4 Interactive Plot","text":"see previous examples, date range deeply impacts information displayed graph. Sometimes ’d like look stock’s trend long period; sometimes need zoom focus shorter period time look one specific day. ’s hard accomplish static charts graphed quantmod. going introduce plotly graph interactive plots.","code":"\ndf <- data.frame(Date=index(PFE),coredata(PFE))\n\ndf %>% \n  plot_ly(x = ~Date, \n          type=\"candlestick\",\n          open = ~PFE.Open, \n          close = ~PFE.Close,\n          high = ~PFE.High, \n          low = ~PFE.Low) %>% \n  layout(title = \"Basic Candlestick Chart\")"},{"path":"plot-and-analyze-stock-data-with-r.html","id":"analyze-stock-data","chapter":"20 Plot and Analyze Stock Data with R","heading":"20.3 Analyze stock data","text":"","code":""},{"path":"plot-and-analyze-stock-data-with-r.html","id":"simple-moving-average","chapter":"20 Plot and Analyze Stock Data with R","heading":"20.3.1 Simple Moving Average","text":"simple moving average (SMA) calculates average selected range prices, usually closing prices, number periods range. stock market, simple moving average allows us ignore noise daily price moving rather focus relatively long term trajectory stock. choose n = 5, 30, 200 represent average price short, medium long term respectively. example, graph, around March 2021, can see 200-day SMA PFE rose 30-day SMA, bullish indicator, suggests price PFE increase. Indeed, see PFE’s price rises afterwards.","code":"\nchartSeries(PFE, theme=chartTheme('white'))\naddSMA(n = 5, on = 1, col = \"purple\")\naddSMA(n = 30, on = 1, col = \"blue\")\naddSMA(n = 200, on = 1, col = \"red\")"},{"path":"plot-and-analyze-stock-data-with-r.html","id":"bolinger-band","chapter":"20 Plot and Analyze Stock Data with R","heading":"20.3.2 Bolinger Band","text":"Bollinger Band technical analysis tool defined set trendlines plotted x standard deviations (positively negatively) away simple moving average (SMA) security’s price. upper lower bands typically 2 standard deviations +/- 20-day simple moving average, can modified.\nprices move closer upper band, market overbought price likely fall, good time sell; prices move closer lower band, market oversold price likely rise, good time buy. PFE 20-day SMA 2 standard deviation Bolinger Band mid May 2021 mid June 2021 perfectly follows trend.","code":"\nchartSeries(PFE,\n            subset='2021-04-25::2021-10-25',\n            theme=chartTheme('white'))\naddBBands(n=20,sd=2)"},{"path":"plot-and-analyze-stock-data-with-r.html","id":"relative-strength-index","chapter":"20 Plot and Analyze Stock Data with R","heading":"20.3.3 Relative Strength Index","text":"relative strength index (RSI) momentum indicator measures magnitude recent price changes evaluate overbought oversold conditions price stock asset. standard use 14 periods calculate initial RSI value. RSI value ranges 0 100, normally values 70 indicate stock overbought, good time sell; values 30 indicate stock oversold, good chance buy.","code":"\nchartSeries(PFE,\n            subset='2021-04-25::2021-10-25',\n            theme=chartTheme('white'))\naddRSI(n=14, maType = \"SMA\")"},{"path":"plot-and-analyze-stock-data-with-r.html","id":"sma-and-bolinger-band-in-interactive-graph","chapter":"20 Plot and Analyze Stock Data with R","heading":"20.3.4 SMA and Bolinger Band in interactive graph","text":"can also add SMA Bolinger Band top interactive graph.","code":"\nbbands <- BBands(PFE[,c(\"PFE.High\",\"PFE.Low\",\"PFE.Close\")])\ndf <- cbind(df, data.frame(bbands[,1:3]))\n\ndf %>% \n  plot_ly(x = ~Date, type=\"candlestick\",\n          open = ~PFE.Open, close = ~PFE.Close,\n          high = ~PFE.High, low = ~PFE.Low, name = \"PFE\") %>% \n  add_lines(x = ~Date, y = ~up , name = \"B Bands\",\n            line = list(color = 'grey', width = 0.5),\n            legendgroup = \"Bollinger Bands\",\n            hoverinfo = \"none\", inherit = F) %>% \n  add_lines(x = ~Date, y = ~dn, name = \"B Bands\",\n            line = list(color = 'grey', width = 0.5),\n            legendgroup = \"Bollinger Bands\", inherit = F,\n            showlegend = FALSE, hoverinfo = \"none\") %>% \n  add_lines(x = ~Date, y = ~mavg, name = \"Mv Avg\",\n            line = list(color = 'pink', width = 0.5),\n            hoverinfo = \"none\", inherit = F) %>% \n  layout(yaxis = list(title = \"Price\"))"},{"path":"plot-and-analyze-stock-data-with-r.html","id":"calendar-heatmap","chapter":"20 Plot and Analyze Stock Data with R","heading":"20.3.5 Calendar Heatmap","text":"can calculate aggregated return percentage using function periodReturn. aggregate level can specified changing argument period. set aggregate level daily, can also set monthly, yearly etc.Now, want know daily return looks like across year, can use Calendar Heatmap. need first construct dataframe, containing information week year day week . Function .POSIXlt used convert date number week year number day week respectively.dataframe, can know using ggplot plot calendar color calender daily return stock. Since stock market, green represents increasing price red represents decreasing price, follow color pattern Calendar Heatmap.However, graph contain monthly information, need another way include month Calendar Heatmap.*Take note, idea keeps previous method, use stock price data since 2015 include data better demonstration purpose.","code":"\nPFE_ret <- na.omit(periodReturn(PFE, period=\"daily\", type = \"arithmetic\"))\nPFE_ret <- transform(PFE_ret,\n                     week = as.POSIXlt(index(PFE_ret))$yday %/% 7 +1,\n                     wday = as.POSIXlt(index(PFE_ret))$wday,\n                     year = as.POSIXlt(index(PFE_ret))$year + 1900\n                    )\nggplot(PFE_ret, aes(week, wday, fill = daily.returns)) +\n  geom_tile(color = \"white\") +\n  scale_fill_gradientn('PFE return', colors= c('red', 'white', 'green')) +\n  facet_wrap(~ year, ncol = 1) +\n  ggtitle(\"PFE weekly return heatmap\")\nPFE_2015 <- getSymbols(\"PFE\", src=\"yahoo\", from = \"2015-01-01\", auto.assign = FALSE)\n\nPFE_2015_ret <- na.omit(periodReturn(PFE_2015, period=\"daily\", type = \"arithmetic\"))\n\ndat <- data.frame(date=index(PFE_2015_ret), PFE_2015_ret$daily.returns)\ndat %>%\n  # calculate all date related columns\n  mutate(year = as.numeric(as.POSIXlt(date)$year + 1900),\n         month = as.numeric(as.POSIXlt(date)$mon + 1),\n         monthf = factor(month,\n                         levels = as.character(1:12), \n                         labels = c(\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"),\n                         order=TRUE),\n         weekday = as.POSIXlt(date)$wday,\n         weekdayf = factor(weekday,\n                           levels = rev(1:7),\n                           labels=rev(c(\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\",\"Sun\")),\n                           ordered=TRUE),\n         yearmonth = as.yearmon(date),\n         yearmonthf = factor(yearmonth),\n         week = as.numeric(format(date,\"%W\"))\n         ) %>%\n  ddply(.(yearmonthf), transform, monthweek = 1 + week - min(week)) %>%\n  # Plot the heatmap\n  ggplot(aes(monthweek, weekdayf, fill = daily.returns)) +\n    geom_tile(color = \"White\") + \n    facet_grid(year~monthf) +\n    scale_fill_gradientn('PFE Returns', colors= c('red', 'white', 'green')) +\n    ggtitle(\"PFE weekly return heatmap\") +\n    xlab(\"week of Month\")"},{"path":"plot-and-analyze-stock-data-with-r.html","id":"correlation-graph","chapter":"20 Plot and Analyze Stock Data with R","heading":"20.3.6 Correlation Graph","text":"Now, introduce new useful package trying plot correlation graph r, ggcorrplot. going examine whether correlation different stock price. Correlation concept important finance, one application correlation trading strategy observing price correlated stocks one stock market different time zone, can infer price change stock stock markets time zone.firstly choose list stocks like find correlation get stock price data since 2015 Yahoo Finance. store price stock one column dataframe, called tickerPrices. row, shows closing price stock particular trading day. tickerPrice looks like.Now, need construct correlation matrix pair stocks list tickers using function cor convert correlation matrix molten dataframe can used draw correlation graph using ggplot2. shows normal correlation matrix molten format correlation matrix respectively.Now, since know correlation matrix symmetric along diagonal line, information repetition whole correlation matrix, therefore, half correlation matrix required show correlation different pairs. , can choose either maintain upper triangle lower triangle specify ‘upper’ ‘lower’ argument ‘type’.type graph called Correlogram. stronger correlation , darker color circle . correlation , color circle white. strong positive correlation, color circle approaching dark green, strong negative correlation, color circle approaching dark red.Also, size circle also affected correlation coefficient. larger absolute value correlation , larger circlw .actually helps quickly identify pairs strong correlation, FB ^GSPC, FaceBook S&P 500 respectively.","code":"\ntickers <- c(\"PFE\",\"MRNA\",\"JNJ\",\"SVA\",\"^GSPC\",\"AAPL\",\"AMZN\",\"FB\",\"GS\",\"JPM\")\n\ntickerPrices <- NULL\nfor (ticker in tickers)\n  tickerPrices <- cbind(tickerPrices, getSymbols(ticker, src = \"yahoo\", from = \"2015-01-01\", auto.assign=FALSE)[,4])\n\ndrop_na <- apply(tickerPrices,1,function(x) all(!is.na(x)))\ntickerPrices <- tickerPrices[drop_na]\ncolnames(tickerPrices) <- tickers\ncorr <- cor(tickerPrices)\nmelted_cormat <- melt(corr)\nggcorrplot(corr, \n           type = 'upper',\n           lab = TRUE,\n           lab_size = 3,\n           method = 'circle',\n           colors = c(\"red\", \"white\", \"green\"),\n           title=\"Correlogram of Stocks\",\n           legend.title = \"Correlation\")"},{"path":"plot-and-analyze-stock-data-with-r.html","id":"violin-chart","chapter":"20 Plot and Analyze Stock Data with R","heading":"20.3.7 Violin Chart","text":"One graph useful determine trading strategy Violin Chart. graph shows distribution returns stock past. understanding normal profit range particular stock , can know exists one particular month two stock performs better usual. example, concept call Santa Relay January Effect trading, tells us stock price usually goes Dec January. Violin Chart allows us check whether particular stock follows 2 concepts. , use Pfizer example demonstration.Since want know monthly return distribution, year, every month 1 data point, make distribution reliable, need get historical data plot violin chart. first Initial Public Offering (IPO) Pfizer made 1972, try retrieve stock price data 1972.first need calculate monthly return Pfizer since 1972 stored returns dataframe called cal_rets show . Take note, function table.CalendarReturns can return table returns containing monthly return yearly return stock. can also modify number decimal place want keep changing value argument digits. Besides, values dataframe percentage since argument .perc set true., remove monthly.returns column since care overall performance Pfizer whole year. transpose dataframe make aggregated level month melt transposed dataframe make ggplot understand data plot violin chart.code plotting violin chart r. x axis month, y axis monthly return stock. wider violin chart , monthly return concentrate wider part. , can see Dec Jan, monthly return highest, Jan, widest part violin chart actually located negative area. shows Pfizer follow 2 rules mentioned , simply buy Pfizer Dec Jan.","code":"\nPFE_1972 <- getSymbols(\"PFE\", src=\"yahoo\", from = \"1972-01-01\", auto.assign = FALSE)[,4]\nPFE_1972_ret <- na.omit(periodReturn(PFE_1972, period=\"monthly\", type = \"arithmetic\"))\ncal_rets <- table.CalendarReturns(PFE_1972_ret, digits = 2, as.perc = TRUE)\ncal_rets$monthly.returns = NULL\ncal_rets_t <- cal_rets %>% \n  t() %>%\n  melt(id.vars=NULL)\nggplot(cal_rets_t, aes(x=Var1,y=value)) +\n  geom_violin(aes(fill = Var1)) +\n  geom_boxplot(width=0.1) +\n  ggtitle(\"PFE Monthly Returns\") +\n  xlab(\"Month\") +\n  ylab(\"return(%)\") +\n  theme_classic() +\n  theme(legend.position = \"none\")"},{"path":"plot-and-analyze-stock-data-with-r.html","id":"citations","chapter":"20 Plot and Analyze Stock Data with R","heading":"20.4 Citations","text":"https://www.quantmod.com/examples/intro/https://plotly.com/r/candlestick-charts/https://www.investopedia.com/terms/s/sma.asphttps://www.investopedia.com/terms/b/bollingerbands.asphttps://www.investopedia.com/terms/r/rsi.asphttp://www.sthda.com/english/wiki/ggcorrplot-visualization---correlation-matrix-using-ggplot2","code":""},{"path":"data-visulization-ordering.html","id":"data-visulization-ordering","chapter":"21 Data Visulization Ordering","heading":"21 Data Visulization Ordering","text":"Anshuo Wu Shengdi ChenFor community contribution, decided give presentation Data Ordering Different Plots. now, seen many various kinds data plots. graphs, different kinds data, usually exists various ways order audience can best visualize analyze information. importance analyzing order within data allow audience better catch key information data, also helps data analysts create appropriate figures different kinds data illustrate effective ordering techniques. Therefore, goal presentation let people need designing graphs organize data visualization clear perceivable way.order accomplish goal project, design content follows. First, introduce different kinds data plots, give succinct explanation data plot can used different circumstances. following functionality type data plots, start telling audience order data plots clarity practicability can maximized. included typical ordering examples data types, including order categorical data, continuous data, ordinal data, numerical data either numerical means ordinal means. ordering within plots, include examples single histogram, multiple histograms faceted single variable, heatmap, mosaic plot, scatter plots, box plots, ridgeline plots. introduce various data plots, summarize suggestions techniques data ordering plots learning orders provided.Overall, learned , plotting dataset, essential understand variables values, can correctly determine type variables need draw. Next, need think sort data plots according type data, type plot.Links:\nVideo,\nSlides","code":""},{"path":"tutorial-on-lattice-package-in-r.html","id":"tutorial-on-lattice-package-in-r","chapter":"22 Tutorial on lattice package in R","heading":"22 Tutorial on lattice package in R","text":"Yunxiao WangInstall lattice packageload lattice","code":"\n#install.packages(\"lattice\")\nlibrary(lattice)"},{"path":"tutorial-on-lattice-package-in-r.html","id":"overview","chapter":"22 Tutorial on lattice package in R","heading":"22.1 Overview","text":"lattice package powerful high-level graphing package written Deepayan Sarkar.lattice package provides complete system visualizing univariate multivariable data. Many users turn learn lattice package makes easier generate grid graphics. Grid graphics can show distribution variables relationships variables clearlyThe lattice package provides many useful functions, can generate single factor graphs (dot plot, histogram, bar plot, box plot), bivariate graphs (scatter plots, strip graphs parallel boxplot) multivariate graphs (three-dimensional graphs scatter plot matrixes).","code":""},{"path":"tutorial-on-lattice-package-in-r.html","id":"introduction-2","chapter":"22 Tutorial on lattice package in R","heading":"22.2 Introduction","text":"overall format :graph_function(formula, data=, options)formula:specifies variables displayed adjustment variables;\nData: specify data frame\noptions:comma separated parameters used adjust content, arrangement annotation graphics.","code":""},{"path":"tutorial-on-lattice-package-in-r.html","id":"common-graph_function","chapter":"22 Tutorial on lattice package in R","heading":"22.2.1 Common graph_function:","text":"xyplot(): Scatter plotsplom(): Scatter plot matrixcloud(): 3D scatter plotstripplot(): strip plots (1-D scatter plots)bwplot(): Box plotdotplot(): Dot plotbarchart(): bar charthistogram(): Histogramdensityplot(): Kernel density plotqqmath(): Theoretical quantile plotqq(): Two-sample quantile plotcontourplot(): 3D contour plot surfaceslevelplot(): False color level plot surfacesparallel(): Parallel coordinates plot","code":""},{"path":"tutorial-on-lattice-package-in-r.html","id":"common-formula-format","chapter":"22 Tutorial on lattice package in R","heading":"22.2.2 common formula format","text":"Let lowercase numeric variable, capital letter factor variableThe format :y ~ x | * BVariable left side primary variable, variables right side conditioning variable.y ~ x : y y axis x x axisIf one variable use ~x instead y~x.3D plot，use z ~ x*y instead y~xFor Multivariate graph, like scatter matrix parallel corrdinate plot, use data.frame instead y~x.~x|represent plot x level factor .y~x|*B represent given levels B, plot relationship y xFor convenience, use mtcars dataset tutorial make examples.","code":"\nattach(mtcars)"},{"path":"tutorial-on-lattice-package-in-r.html","id":"scatter-plot-matrix","chapter":"22 Tutorial on lattice package in R","heading":"22.2.3 scatter plot matrix","text":"","code":"\n#Plot scatter matrix\n\nsplom(mtcars[c(1, 2, 3, 4, 5)], \n main=\"Scatter Plot Matrix for mtcars Data\") "},{"path":"tutorial-on-lattice-package-in-r.html","id":"density-plot","chapter":"22 Tutorial on lattice package in R","heading":"22.2.4 Density Plot","text":"","code":"\ndensityplot(~wt, \n main=\"Density Plot\", \n xlab=\"wt\")"},{"path":"tutorial-on-lattice-package-in-r.html","id":"density-plot-by-transmission","chapter":"22 Tutorial on lattice package in R","heading":"22.2.5 Density Plot by transmission","text":"","code":"\n#create new variable\nmtcars$transmission <- factor(mtcars$am, levels=c(0, 1), \n labels=c(\"Automatic\", \"Manual\"))\n#Density Plot by transmission\ndensityplot(~mpg |transmission , data=mtcars,\n main=\"MPG Distribution by Transmission Type\", \n xlab=\"Miles per Gallon\") "},{"path":"tutorial-on-lattice-package-in-r.html","id":"xyplot","chapter":"22 Tutorial on lattice package in R","heading":"22.2.6 xyplot","text":"xyplot also type scatterplot.","code":"\nxyplot(mpg ~ wt | transmission, data=mtcars,\n main=\"Scatter Plots by transmission \", \n xlab=\"Car Weight\", ylab=\"Miles per Gallon\")"},{"path":"tutorial-on-lattice-package-in-r.html","id":"boxplot","chapter":"22 Tutorial on lattice package in R","heading":"22.2.7 boxplot","text":"","code":"\n#group by transmission\n\nbwplot(~mpg | transmission, data=mtcars,\n main=\"Box Plots by transmission\", \n xlab=\"Miles per Gallon\")"},{"path":"tutorial-on-lattice-package-in-r.html","id":"kernel-density-estimation-with-grouped-variables-and-custom-legend","chapter":"22 Tutorial on lattice package in R","heading":"22.2.8 Kernel density estimation with grouped variables and custom legend","text":"put many comments describe things line code .","code":"\n#create new variable\nmtcars$transmission <- factor(mtcars$am, levels=c(0, 1), \n labels=c(\"Automatic\", \"Manual\"))\n#set color\ncolors <- c(\"red\", \"green\") \n#set line type\nlines <- c(1,3)\n#set point type\npoints <- c(16,18)\n\n#customize legend\nkey.trans <- list(title=\"Transmission\", \n space=\"bottom\", columns=2, \n text=list(levels(mtcars$transmission)),\n points=list(pch=points, col=colors), \n lines=list(col=colors, lty=lines), \n cex.title=1, cex=.95)\n\n\n#kernel density plot\ndensityplot(~mpg, data=mtcars, \n#set group by variable\n group=transmission, \n #give title\n main=\"MPG Distribution by Transmission Type\",\n \n xlab=\"Miles per Gallon\", \n #set type of point and line and set color\n pch=points, lty=lines, col=colors,\n #size\n lwd=2, jitter=.005, \n #draw legend as we customized above\n key=key.trans)"},{"path":"tutorial-on-lattice-package-in-r.html","id":"adjust-variable","chapter":"22 Tutorial on lattice package in R","heading":"22.2.9 Adjust variable","text":"regulatory variable usually factor variable. continuous variables still interested relationship?One way use cut() function converts continuous variables discrete variables.\nAlternatively, functions provided lattice package can also efficiently.variable transformed data structure named shingle. Specifically, continuous variables divided series (possibly) overlapping ranges.disp original continious variable，divided three group factor variable","code":"\ndisplace <- equal.count(mtcars$disp, number=3, overlap=0)\nxyplot(mpg~wt|displace, data=mtcars, \n main = \"Miles per Gallon vs. Weight by Engine Displace\", \n xlab = \"Weight\", ylab = \"Miles per Gallon\", \n layout=c(3, 1), aspect=1.5)"},{"path":"tutorial-on-lattice-package-in-r.html","id":"panel-function","chapter":"22 Tutorial on lattice package in R","heading":"22.2.10 Panel function","text":"can create panel functions draw plot 7","code":"\ndisplacement <- equal.count(mtcars$disp, number=3, overlap=0) \n#customize panel function, including plottype, layout, line color..etc.\nmypanel <- function(x, y) { \n panel.xyplot(x, y, pch=15) \n panel.rug(x, y) \n panel.grid(h=-1, v=-1) \n panel.lmline(x, y, col=\"blue\", lwd=1, lty=2) \n} \n#draw grouped scatterplot\nxyplot(mpg~wt|displacement, data=mtcars, \n layout=c(3, 1), \n aspect=1.5, \n main = \"Miles per Gallon vs. Weight by Engine Displacement\", \n xlab = \"Weight\", \n ylab = \"Miles per Gallon\", \n panel = mypanel)"},{"path":"tutorial-on-lattice-package-in-r.html","id":"xyplot-for-customizing-panel-functions-and-additional-options","chapter":"22 Tutorial on lattice package in R","heading":"22.2.11 xyplot for customizing panel functions and additional options","text":"","code":"\nmtcars$transmission <- factor(mtcars$am, levels=c(0,1), \n labels=c(\"Automatic\", \"Manual\")) \npanel.smoother <- function(x, y) { \n panel.grid(h=-1, v=-1) \n panel.xyplot(x, y) \n #panel. loess() give the nonparameter fitting line\n panel.loess(x, y) \n panel.abline(h=mean(y), lwd=2, lty=2, col=\"red\") \n } \nxyplot(mpg~disp|transmission,data=mtcars, \n scales=list(cex=.8, col=\"blue\"), \n panel=panel.smoother, \n xlab=\"Displacement\", ylab=\"Miles per Gallon\", \n main=\"MPG vs Displacement by Transmission Type\", \n sub = \"Dotted lines are Group Means\", aspect=1)"},{"path":"tutorial-on-lattice-package-in-r.html","id":"page-layout","chapter":"22 Tutorial on lattice package in R","heading":"22.2.12 Page layout","text":"","code":""},{"path":"tutorial-on-lattice-package-in-r.html","id":"split","chapter":"22 Tutorial on lattice package in R","heading":"22.2.12.1 split","text":"can put 1 plot 1 page want.\nsplit function can split one page specify number rows columns, put plot specified cell.\nformat split :\nsplit=c(x, y, nx, ny)\nPut current plot xth row yth column cell nx*ny 2D array.\norigin top left corner.","code":"\n#draw a histogram\ngraph1 <- histogram(~height | voice.part, data = singer, \n main = \"Heights of Choral Singers by Voice Part\" ) \n#draw a density plot\ngraph2 <- densityplot(~height|voice.part, data = singer) \n#whoe page is 1*2 matrix\n#plot graph 2 at (1,1)\nplot(graph1, split = c(1, 1, 1, 2)) \n#plot graph 2 at (1,2)\nplot(graph2, split = c(1, 2, 1, 2), newpage = FALSE)"},{"path":"tutorial-on-lattice-package-in-r.html","id":"position","chapter":"22 Tutorial on lattice package in R","heading":"22.2.12.2 position","text":"Another way use postion function:\nposition=c(xmin, ymin, xmax, ymax)\nwhole page 2D coordinate. x y range(0,1).\n(0,0) origin point bottom left.\ncan arrage plot size precisely now.","code":"\ngraph1 <- histogram(~height, data = singer ) \n\ngraph2 <- densityplot(~height, data = singer) \nplot(graph1, position=c(0.3, 0, 1, 1))\nplot(graph2, position=c(0, 0, 0.3, 1), newpage=FALSE)"},{"path":"tutorial-on-lattice-package-in-r.html","id":"sources-2","chapter":"22 Tutorial on lattice package in R","heading":"22.3 Sources","text":"http://mng.bz/jXUGhttp://www.sthda.com/english/wiki/lattice-graphsR action(second edition) Chapter 23","code":""},{"path":"network-visualization-in-r.html","id":"network-visualization-in-r","chapter":"23 Network Visualization in R","heading":"23 Network Visualization in R","text":"Yunze Pan","code":""},{"path":"network-visualization-in-r.html","id":"introduction-3","chapter":"23 Network Visualization in R","heading":"23.1 Introduction","text":"visNetwork powerful tool R help us describe networks explore structure visually. extremely useful us obtain valuable information interactive network graph. tutorial, offer quick introduction newcomers learn concepts creating networks R. Hope enjoy!","code":""},{"path":"network-visualization-in-r.html","id":"installation-1","chapter":"23 Network Visualization in R","heading":"23.2 Installation","text":"main packages going use network visualization R visNetwork igraph. can installed install.packages(“visNetwork”) install.packages(“igraph”).","code":"\nlibrary(visNetwork)\nlibrary(igraph)"},{"path":"network-visualization-in-r.html","id":"dataframe","chapter":"23 Network Visualization in R","heading":"23.3 Dataframe","text":"section create small network simulates student interactions campus. objective get familiar using visNetwork quickly possible. order visualize interactive networks, first read two datasets (nodes data.frame edges data.frame). , can explore various layout options adding different variables nodes data.frame edges data.frame.","code":""},{"path":"network-visualization-in-r.html","id":"nodes","chapter":"23 Network Visualization in R","heading":"23.3.1 Nodes","text":"nodes data.frame must include id column. id represents node want display graph. optional columns can also added nodes data.frame. can help us distinguish nodes graph. example, node student unique assigned id, /name, major, major.type.","code":"\nnodes <- data.frame(id=1:7, # id column (must be called id)\n                    name=c(\"Asher\",\"Bella\",\"Chloe\",\"Daniel\",\"Emma\",\"Frank\",\"Gabriel\"), # student names\n                    major=c(\"CS\",\"CS\",\"CS\",\"STAT\",\"DS\",\"DS\",\"DS\"), # CS: computer science major, STAT: statistics major, DS: data science major\n                    major.type=c(1,1,1,2,3,3,3)) # 1: CS, 2: STAT, 3: DS\ndata.frame(nodes)##   id    name major major.type\n## 1  1   Asher    CS          1\n## 2  2   Bella    CS          1\n## 3  3   Chloe    CS          1\n## 4  4  Daniel  STAT          2\n## 5  5    Emma    DS          3\n## 6  6   Frank    DS          3\n## 7  7 Gabriel    DS          3"},{"path":"network-visualization-in-r.html","id":"edges","chapter":"23 Network Visualization in R","heading":"23.3.2 Edges","text":"edges data.frame must include column column denoting starting node ending node edge. use id represent starting node ending node. also add weight column edges data.frame describe frequency interactions two nodes. example, first row, know student 1 reached student 2 .","code":"\nedges <- data.frame(from=c(1,1,2,3,5,5,6,7),\n                    to=c(2,4,3,1,4,6,7,5),\n                    weight=c(1,1,1,1,1,1,1,1))\ndata.frame(edges)##   from to weight\n## 1    1  2      1\n## 2    1  4      1\n## 3    2  3      1\n## 4    3  1      1\n## 5    5  4      1\n## 6    5  6      1\n## 7    6  7      1\n## 8    7  5      1"},{"path":"network-visualization-in-r.html","id":"visualiztion","chapter":"23 Network Visualization in R","heading":"23.4 Visualiztion","text":"Now can visualize student interaction network using visNetwork. Examples showed . start default setting move customize network better interactive visualization.","code":""},{"path":"network-visualization-in-r.html","id":"minimal-example","chapter":"23 Network Visualization in R","heading":"23.4.1 Minimal Example","text":"","code":"\nvisNetwork(nodes, edges)"},{"path":"network-visualization-in-r.html","id":"customize-node","chapter":"23 Network Visualization in R","heading":"23.4.2 Customize Node","text":"","code":"\ncolors <- colorRampPalette(brewer.pal(3, \"RdBu\"))(3) # use three colors to distinguish students by their majors\nnodes <- nodes %>% mutate(shape=\"dot\", # \"shape\" variable: customize shape of nodes (\"dot\", \"square\", \"triangle\")\n                          shadow=TRUE, # \"shadow\" variable: include/exclude shadow of nodes\n                          title=major, # \"title\" variable: tooltip (html or character), when the mouse is above\n                          label=name, # \"label\" variable: add labels on nodes\n                          size=20, # \"size\" variable: set size of nodes\n                          borderWidth=1, # \"borderWidth\" variable: set border width of nodes\n                          color.background=colors[major.type], # \"color.background\" variable: set color of nodes\n                          color.border=\"grey\", # \"color.border\" variable: set frame color\n                          color.highlight.background=\"yellow\", # \"color.highlight.background\" variable: set color of the selected node\n                          color.highlight.border=\"black\") # \"color.highlight.border\" variable: set frame color of the selected node\nvisNetwork(nodes, edges, width=\"100%\", main=\"Student Interaction Network\") %>% # \"main\" variable: add a title\n  visLayout(randomSeed=4) # give a random seed manually so that the layout will be the same every time"},{"path":"network-visualization-in-r.html","id":"customize-edge","chapter":"23 Network Visualization in R","heading":"23.4.3 Customize Edge","text":"","code":"\nedges <- edges %>% mutate(width=weight*3, # \"width\" variable: set width of each edge\n                          color=\"lightgrey\", # \"color\" variable: set color of edges\n                          arrows=\"to\", # \"arrows\" variable: set arrow for each edge (\"to\", \"middle\", \"from \")\n                          smooth=TRUE) # \"smooth\" variable: each edge to be curved or not\nvisNetwork(nodes, edges, width=\"100%\", main=\"Student Interaction Network\") %>% \n  visLayout(randomSeed=4)"},{"path":"network-visualization-in-r.html","id":"add-legend-based-on-groups","chapter":"23 Network Visualization in R","heading":"23.4.4 Add Legend Based on Groups","text":"","code":"\nnodes <- nodes %>% mutate(group=major) # add a \"group\" column on node data.frame and add groups on nodes\nvisNetwork(nodes, edges, width=\"100%\", main=\"Student Interaction Network\") %>%\n  visLayout(randomSeed=4) %>% \n  visGroups(groupname=\"CS\", color=colors[1]) %>% # color \"colors[1]\" for \"CS\" group \n  visGroups(groupname=\"STAT\", color=colors[2]) %>%\n  visGroups(groupname=\"DS\", color=colors[3]) %>%\n  visLegend(width=0.1, position=\"right\", main=\"Academic Major\") # \"position\" variable: set position (\"left\", \"right\") "},{"path":"network-visualization-in-r.html","id":"select-by-node","chapter":"23 Network Visualization in R","heading":"23.4.5 Select by Node","text":"","code":"\nnodes <- nodes %>% select(-group) # remove \"group\" column because we don't want to show legend this time\nvisNetwork(nodes, edges, width=\"100%\", main=\"Student Interaction Network\") %>%\n  visLayout(randomSeed=4) %>% \n  visOptions(nodesIdSelection=TRUE, # \"nodesIdSelection\" variable: select a node by id\n             selectedBy=\"major\") %>% # \"selectedBy\" variable: select a node by the values of a column such as \"major\" column\n  visLegend()"},{"path":"network-visualization-in-r.html","id":"highlight-nearest-nodes","chapter":"23 Network Visualization in R","heading":"23.4.6 Highlight Nearest Nodes","text":"","code":"\nvisNetwork(nodes, edges, width=\"100%\", main=\"Student Interaction Network\") %>% \n  visLayout(randomSeed=4) %>% \n  visOptions(highlightNearest = list(enabled = TRUE, # \"enabled\" variable: highlight nearest nodes and edges by clicking on a node\n                                     degree = 2)) # \"degree\" variable: set degree of depth"},{"path":"network-visualization-in-r.html","id":"edit-network","chapter":"23 Network Visualization in R","heading":"23.4.7 Edit Network","text":"","code":"\nvisNetwork(nodes, edges, width=\"100%\", main=\"Student Interaction Network\") %>%\n  visLayout(randomSeed=4) %>% \n  visOptions(highlightNearest=TRUE, # degree of depth = 1\n             nodesIdSelection=TRUE,\n             selectedBy=\"major\",\n             manipulation=TRUE) %>%  # \"manipulation\" variable: add/delete nodes/edges or change edges\n  visLegend()"},{"path":"network-visualization-in-r.html","id":"add-navigation-buttons-and-control-interactions","chapter":"23 Network Visualization in R","heading":"23.4.8 Add Navigation Buttons and Control Interactions","text":"","code":"\nvisNetwork(nodes, edges, width=\"100%\", main=\"Student Interaction Network\") %>%\n  visLayout(randomSeed=4) %>%\n  visOptions(highlightNearest=TRUE,\n             nodesIdSelection=TRUE,\n             selectedBy=\"major\") %>% \n  visInteraction(hideEdgesOnDrag=TRUE, # \"hideEdgesOnDrag\" variable: hide edges when dragging the view\n                 dragNodes=TRUE, # \"dragNodes\" variable: hide nodes when dragging the view\n                 dragView=TRUE, # \"dragView\" variable: enable or not the movement of the full network\n                 zoomView=TRUE, # \"zoomView\" variable: enable or not the zoom (use mouse scroll)\n                 navigationButtons=TRUE) %>% # \"navigationButtons\" variable: show navigation buttons\n  visLegend()"},{"path":"network-visualization-in-r.html","id":"export","chapter":"23 Network Visualization in R","heading":"23.5 Export","text":"Finally, use visSave() save network html file.","code":"\nour_network <- visNetwork(nodes, edges)\nvisSave(our_network, file = \"Student Interaction Network.html\", background=\"white\")"},{"path":"network-visualization-in-r.html","id":"help","chapter":"23 Network Visualization in R","heading":"23.6 Help?","text":"information visNetwork.","code":"\n?visNodes\n?visEdges\n?visOptions\n?visGroups\n?visLegend\n?visLayout"},{"path":"network-visualization-in-r.html","id":"social-network-analysis","chapter":"23 Network Visualization in R","heading":"23.7 Social Network Analysis","text":"already learned visualize interactive network. help better understand application, use visNetwork igraph perform social network analysis.","code":""},{"path":"network-visualization-in-r.html","id":"dataset","chapter":"23 Network Visualization in R","heading":"23.7.1 Dataset","text":"investigate interactions movie Star Wars Episode IV. First, import two csv files (“nodes.csv” “edges.csv”). node “nodes.csv” character edge “edges.csv” tells whether two characters appeared together scene movie. Thus, edges undirected. Since characters may appear multiple scenes together, edge weight.group characters (“dark side” “light side” “”).Let’s try another network package called igraph explore network.First, use graph_from_data_frame function, needs two arguments: d vertices. igraph object g indicates 22 nodes 66 edges.Next, output portion adjacency matrix network.","code":"\nsw_nodes <- read.csv(\"https://raw.githubusercontent.com/pablobarbera/data-science-workshop/master/sna/data/star-wars-network-nodes.csv\")\nhead(sw_nodes)##          name id\n## 1       R2-D2  0\n## 2   CHEWBACCA  1\n## 3       C-3PO  2\n## 4        LUKE  3\n## 5 DARTH VADER  4\n## 6       CAMIE  5\nsw_edges <- read.csv(\"https://raw.githubusercontent.com/pablobarbera/data-science-workshop/master/sna/data/star-wars-network-edges.csv\")\nhead(sw_edges)##      source target weight\n## 1     C-3PO  R2-D2     17\n## 2      LUKE  R2-D2     13\n## 3   OBI-WAN  R2-D2      6\n## 4      LEIA  R2-D2      5\n## 5       HAN  R2-D2      5\n## 6 CHEWBACCA  R2-D2      3\ndark_side <- c(\"DARTH VADER\", \"MOTTI\", \"TARKIN\")\nlight_side <- c(\"R2-D2\", \"CHEWBACCA\", \"C-3PO\", \"LUKE\", \"CAMIE\", \"BIGGS\", \"LEIA\", \"BERU\", \"OWEN\", \"OBI-WAN\", \"HAN\", \"DODONNA\", \"GOLD LEADER\", \"WEDGE\", \"RED LEADER\", \"RED TEN\", \"GOLD FIVE\")\nother <- c(\"GREEDO\", \"JABBA\")\nsw_nodes$group <- NA\nsw_nodes$group[sw_nodes$name %in% dark_side] <- \"dark side\"\nsw_nodes$group[sw_nodes$name %in% light_side] <- \"light side\"\nsw_nodes$group[sw_nodes$name %in% other] <- \"other\"\ng <- graph_from_data_frame(d=sw_edges, vertices=sw_nodes, directed=FALSE) # an undirected graph\ng## IGRAPH 551d259 UNW- 22 60 -- \n## + attr: name (v/c), id (v/n), group (v/c), weight (e/n)\n## + edges from 551d259 (vertex names):\n##  [1] R2-D2      --C-3PO       R2-D2      --LUKE        R2-D2      --OBI-WAN    \n##  [4] R2-D2      --LEIA        R2-D2      --HAN         R2-D2      --CHEWBACCA  \n##  [7] R2-D2      --DODONNA     CHEWBACCA  --OBI-WAN     CHEWBACCA  --C-3PO      \n## [10] CHEWBACCA  --LUKE        CHEWBACCA  --HAN         CHEWBACCA  --LEIA       \n## [13] CHEWBACCA  --DARTH VADER CHEWBACCA  --DODONNA     LUKE       --CAMIE      \n## [16] CAMIE      --BIGGS       LUKE       --BIGGS       DARTH VADER--LEIA       \n## [19] LUKE       --BERU        BERU       --OWEN        C-3PO      --BERU       \n## [22] LUKE       --OWEN        C-3PO      --LUKE        C-3PO      --OWEN       \n## + ... omitted several edges\ng[1:6, 1:6] # the first six rows and columns## 6 x 6 sparse Matrix of class \"dgCMatrix\"\n##             R2-D2 CHEWBACCA C-3PO LUKE DARTH VADER CAMIE\n## R2-D2           .         3    17   13           .     .\n## CHEWBACCA       3         .     5   16           1     .\n## C-3PO          17         5     .   18           .     .\n## LUKE           13        16    18    .           .     2\n## DARTH VADER     .         1     .    .           .     .\n## CAMIE           .         .     .    2           .     ."},{"path":"network-visualization-in-r.html","id":"visualization","chapter":"23 Network Visualization in R","heading":"23.7.2 Visualization","text":"Alternatively, can show heat map adjacency matrix. number square equals weight one edge. observe LUKE popular character.also compute characters’ importance using strength() function based number scenes appear rank importance descending order. goal strength() function sum edge weights adjacent edges node., use visNetwork visualize.may wonder important character Star Wars network. Therefore, want utilize three proposed measures (degree centrality, betweenness centrality, closeness centrality) quantify node’s importance network visualize importance different others.","code":"\nsw_matrix <- as.matrix(g[])\nsw_matrix <- sw_matrix[order(rownames(sw_matrix)), order(colnames(sw_matrix))]\nmelted_sw_matrix <- melt(sw_matrix)\nggplot(melted_sw_matrix, aes(x=Var1, y=Var2, fill=value)) + \n  geom_tile() +\n  geom_text(aes(label=value), color=\"red\") +\n  scale_fill_gradient(low=\"white\", high=\"black\") +\n  xlab(\"characters\") + ylab(\"characters\") +\n  theme(axis.text.x=element_text(angle=45)) +\n  labs(fill=\"weight\")\nimportance <- strength(g)\nsw_nodes$importance <- importance\nhead(arrange(sw_nodes, -importance))##        name id      group importance\n## 1      LUKE  3 light side        129\n## 2       HAN 13 light side         80\n## 3     C-3PO  2 light side         64\n## 4 CHEWBACCA  1 light side         63\n## 5      LEIA  7 light side         59\n## 6     R2-D2  0 light side         50\nsw_colors <- colorRampPalette(brewer.pal(3, \"RdBu\"))(3)\nsw_nodes$group.type <- NA\nsw_nodes$group.type[sw_nodes$group==\"dark side\"] <- sw_colors[1]\nsw_nodes$group.type[sw_nodes$group==\"other\"] <- sw_colors[2]\nsw_nodes$group.type[sw_nodes$group==\"light side\"] <- sw_colors[3]\nsw_nodes <- sw_nodes %>% select(-id) %>%\n  mutate(id=name,\n         shape=\"dot\",\n         shadow=TRUE,\n         title=group,\n         label=name,\n         size=log((importance+3)^5), # adjust size with respect to a node's importance\n         borderWidth=1,\n         color.background=group.type,\n         color.border=\"grey\",\n         color.highlight.background=\"yellow\",\n         color.highlight.border=\"black\") %>% \n  arrange(id)\nsw_edges <- sw_edges %>% mutate(from=source,\n                                to=target,\n                                width=log((weight+3)^1.5), # adjust width with respect to an edge's weight\n                                color=\"lightgrey\",\n                                smooth=FALSE)\nvisNetwork(sw_nodes, sw_edges, width=\"100%\", main=\"Star Wars Episode IV Network\") %>%\n  visLayout(randomSeed=21) %>% \n  visGroups(groupname=\"dark side\", color=sw_colors[1]) %>%\n  visGroups(groupname=\"other\", color=sw_colors[2]) %>%\n  visGroups(groupname=\"light side\", color=sw_colors[3]) %>%\n  visLegend(width=0.1, position=\"right\", main=\"Group\") %>%\n  visOptions(highlightNearest=TRUE,\n             nodesIdSelection=TRUE,\n             selectedBy=\"group\") %>% \n  visInteraction(hideEdgesOnDrag=TRUE,\n                 dragNodes=TRUE,\n                 dragView=TRUE,\n                 zoomView=TRUE,\n                 navigationButtons=TRUE)"},{"path":"network-visualization-in-r.html","id":"centrality-measurement","chapter":"23 Network Visualization in R","heading":"23.7.3 Centrality Measurement","text":"Degree centrality deﬁned number adjacent edges node. ranking degree centrality, find LUKE greatest value. implies LUKE interacting great amount unique characters. color node based degree centrality value. node greatest value warmest color.Betweenness centrality deﬁned number shortest paths nodes pass particular node. ranking betweenness centrality, find LEIA greatest value. implies LEIA tends critical communication process. color node based betweenness centrality value. node greatest value warmest color.Closeness centrality deﬁned number steps required access every node given node. ranking closeness centrality, find BIGGS greatest value. implies BIGGS close many characters. color node based closeness centrality value. node greatest value warmest color.Lastly, output network find discrepancies among three measurements.","code":"\ndegree_centrality <- degree(g)\nsw_nodes$degree_centrality <- degree_centrality[as.character(sw_nodes$name)]\nhead(sort(degree_centrality, decreasing=TRUE))##      LUKE      LEIA     C-3PO CHEWBACCA       HAN     R2-D2 \n##        15        12        10         8         8         7\nsw_colors_centrality <- rev(colorRampPalette(brewer.pal(9, \"Oranges\"))(22))\nsw_nodes <- sw_nodes %>% mutate(degree_rank=23-floor(rank(degree_centrality)),\n                                color.background=sw_colors_centrality[degree_rank])\nnetwork_degree <- visNetwork(sw_nodes, sw_edges, height='350px', width=\"100%\", main=\"Degree Centrality\") %>%\n  visLayout(randomSeed=21) %>% \n  visOptions(highlightNearest=TRUE,\n             nodesIdSelection=TRUE,\n             selectedBy=\"degree_rank\") %>% \n  visInteraction(hideEdgesOnDrag=TRUE,\n                 dragNodes=TRUE,\n                 dragView=TRUE,\n                 zoomView=TRUE,\n                 navigationButtons=TRUE)\nbetweenness_centrality <- betweenness(g)\nsw_nodes$betweenness_centrality <- betweenness_centrality[as.character(sw_nodes$name)]\nhead(sort(betweenness_centrality, decreasing=TRUE))##       LEIA    DODONNA        HAN      C-3PO      BIGGS RED LEADER \n##   59.95000   47.53333   37.00000   32.78333   31.91667   31.41667\ncloseness_centrality <- closeness(g, normalized=TRUE)\nsw_nodes$closeness_centrality <- closeness_centrality[as.character(sw_nodes$name)]\nhead(sort(closeness_centrality, decreasing=TRUE))##       BIGGS  RED LEADER     DODONNA GOLD LEADER        LEIA       C-3PO \n##   0.2625000   0.2625000   0.2560976   0.2560976   0.2530120   0.2441860"},{"path":"network-visualization-in-r.html","id":"external-resource","chapter":"23 Network Visualization in R","heading":"23.8 External Resource","text":"visNetwork package;star-wars-network.","code":""},{"path":"dplyr-tutorial-in-r.html","id":"dplyr-tutorial-in-r","chapter":"24 Dplyr tutorial in R","heading":"24 Dplyr tutorial in R","text":"Pinyi Yang","code":"\n#install.packages(\"dplyr\")\n#install.packages(\"ggplot2\")\n#install.packages(\"stringr\")\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(stringr)"},{"path":"dplyr-tutorial-in-r.html","id":"environment-setup","chapter":"24 Dplyr tutorial in R","heading":"24.1 Environment Setup","text":"order use dyplr package, need first install library beginning.\nBesides dplyr package, use two packages better demonstration functions dplyr. Related documentations two accessory packages provided :ggplot2: https://ggplot2.tidyverse.org/reference/ggplot2: https://ggplot2.tidyverse.org/reference/stringr: https://www.rdocumentation.org/packages/stringr/versions/1.4.0stringr: https://www.rdocumentation.org/packages/stringr/versions/1.4.0","code":""},{"path":"dplyr-tutorial-in-r.html","id":"introduction-4","chapter":"24 Dplyr tutorial in R","heading":"24.2 Introduction","text":"Dplyr package tidyverse R. key role dplyr dataframe manipulation enables data management. Dplyr contain numerous useful functions allows user-friendly data query, data cleaning, data summary, etc. Dplyr especially important data visualization, , effective informative visualization requires structural integrity dataframe used well removal excessive redundant information keeping information needed.","code":""},{"path":"dplyr-tutorial-in-r.html","id":"data","chapter":"24 Dplyr tutorial in R","heading":"24.3 Data","text":"One widely used data tutorial use purpose R ‘diamond’ dataset. information ‘diamond’ dataset, please visit following link: https://www.rdocumentation.org/packages/ggplot2/versions/3.3.5/topics/diamonds.following section showcases attributes ‘diamond’ dataset assist understanding data manipulation using dplyr.","code":"\nstr(diamonds)## tibble [53,940 × 10] (S3: tbl_df/tbl/data.frame)\n##  $ carat  : num [1:53940] 0.23 0.21 0.23 0.29 0.31 0.24 0.24 0.26 0.22 0.23 ...\n##  $ cut    : Ord.factor w/ 5 levels \"Fair\"<\"Good\"<..: 5 4 2 4 2 3 3 3 1 3 ...\n##  $ color  : Ord.factor w/ 7 levels \"D\"<\"E\"<\"F\"<\"G\"<..: 2 2 2 6 7 7 6 5 2 5 ...\n##  $ clarity: Ord.factor w/ 8 levels \"I1\"<\"SI2\"<\"SI1\"<..: 2 3 5 4 2 6 7 3 4 5 ...\n##  $ depth  : num [1:53940] 61.5 59.8 56.9 62.4 63.3 62.8 62.3 61.9 65.1 59.4 ...\n##  $ table  : num [1:53940] 55 61 65 58 58 57 57 55 61 61 ...\n##  $ price  : int [1:53940] 326 326 327 334 335 336 336 337 337 338 ...\n##  $ x      : num [1:53940] 3.95 3.89 4.05 4.2 4.34 3.94 3.95 4.07 3.87 4 ...\n##  $ y      : num [1:53940] 3.98 3.84 4.07 4.23 4.35 3.96 3.98 4.11 3.78 4.05 ...\n##  $ z      : num [1:53940] 2.43 2.31 2.31 2.63 2.75 2.48 2.47 2.53 2.49 2.39 ...\nhead(diamonds, n = 3)## # A tibble: 3 × 10\n##   carat cut     color clarity depth table price     x     y     z\n##   <dbl> <ord>   <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl>\n## 1  0.23 Ideal   E     SI2      61.5    55   326  3.95  3.98  2.43\n## 2  0.21 Premium E     SI1      59.8    61   326  3.89  3.84  2.31\n## 3  0.23 Good    E     VS1      56.9    65   327  4.05  4.07  2.31\nsummary(diamonds[,!(names(diamonds) %in% c(\"color\", \"clarity\", \"cut\"))])##      carat            depth           table           price      \n##  Min.   :0.2000   Min.   :43.00   Min.   :43.00   Min.   :  326  \n##  1st Qu.:0.4000   1st Qu.:61.00   1st Qu.:56.00   1st Qu.:  950  \n##  Median :0.7000   Median :61.80   Median :57.00   Median : 2401  \n##  Mean   :0.7979   Mean   :61.75   Mean   :57.46   Mean   : 3933  \n##  3rd Qu.:1.0400   3rd Qu.:62.50   3rd Qu.:59.00   3rd Qu.: 5324  \n##  Max.   :5.0100   Max.   :79.00   Max.   :95.00   Max.   :18823  \n##        x                y                z         \n##  Min.   : 0.000   Min.   : 0.000   Min.   : 0.000  \n##  1st Qu.: 4.710   1st Qu.: 4.720   1st Qu.: 2.910  \n##  Median : 5.700   Median : 5.710   Median : 3.530  \n##  Mean   : 5.731   Mean   : 5.735   Mean   : 3.539  \n##  3rd Qu.: 6.540   3rd Qu.: 6.540   3rd Qu.: 4.040  \n##  Max.   :10.740   Max.   :58.900   Max.   :31.800"},{"path":"dplyr-tutorial-in-r.html","id":"column-and-row-manipulation","chapter":"24 Dplyr tutorial in R","heading":"24.4 Column and Row Manipulation","text":"data analysis, sometimes original data set contains much information, actually need analysis good structure us use. order make data looked structured, use Dplyr organize clean Data. Dplyr can effectively help us reorganize data set based criteria commanded. example, data set may contain observations (.e. rows) past 10 years, need analyze trend recent 5 years. case, need ignore data previous years order generate reasonable visualizations, thus filter function Dplyr come handy. Also, might times data contains numerous redundant parameters (.e. columns) analysis, need select variables important goal study. case, can use Dplyr’s select function choose desired columns.\n### Select\n‘select’ dplyr package used select certain columns data frame. can use ‘select’ function following syntax:\n\\[select(data, column\\ names/column\\ position , \\dots)\\]\n#### Column Selection\nfollowing example, selecting three columns observations : ‘carat’, ‘clarity’, ‘price’. Noted can select name position.","code":"\n#only keeping \"carat\", \"clarity\", and \"price\" columns\nselect_result <- select(diamonds, c(carat, clarity, price))\nhead(select_result,n = 3)## # A tibble: 3 × 3\n##   carat clarity price\n##   <dbl> <ord>   <int>\n## 1  0.23 SI2       326\n## 2  0.21 SI1       326\n## 3  0.23 VS1       327\n# same result but use position\nselect_result <- select(diamonds, c(1,4,7))\nhead(select_result,n = 3)## # A tibble: 3 × 3\n##   carat clarity price\n##   <dbl> <ord>   <int>\n## 1  0.23 SI2       326\n## 2  0.21 SI1       326\n## 3  0.23 VS1       327\n# or use both column name and position, not recommended\nselect_result <- select(diamonds, c(1,4, price))\nhead(select_result,n = 3)## # A tibble: 3 × 3\n##   carat clarity price\n##   <dbl> <ord>   <int>\n## 1  0.23 SI2       326\n## 2  0.21 SI1       326\n## 3  0.23 VS1       327"},{"path":"dplyr-tutorial-in-r.html","id":"column-deselection","chapter":"24 Dplyr tutorial in R","heading":"24.4.0.1 Column Deselection","text":"can also deselect certain columns, range columns using negate command \\(!\\). following example, want remove (.e. deselect) columns x z.","code":"\n#deselecting columns from x to z\nselect_result <- select(diamonds, !(x:z))\nhead(select_result,n = 3)## # A tibble: 3 × 7\n##   carat cut     color clarity depth table price\n##   <dbl> <ord>   <ord> <ord>   <dbl> <dbl> <int>\n## 1  0.23 Ideal   E     SI2      61.5    55   326\n## 2  0.21 Premium E     SI1      59.8    61   326\n## 3  0.23 Good    E     VS1      56.9    65   327"},{"path":"dplyr-tutorial-in-r.html","id":"helper-functions","chapter":"24 Dplyr tutorial in R","heading":"24.4.0.2 Helper Functions","text":"several helper functions selection deal specific cases used select function:\\(contains()\\): Use select column contains specific string\\(contains()\\): Use select column contains specific string\\(starts\\_with()\\): Use select columns start given string\\(starts\\_with()\\): Use select columns start given string\\(ends\\_with()\\): Use select columns end given string\\(ends\\_with()\\): Use select columns end given string\\(matches()\\): Use select columns match string (often use regular expression)\\(matches()\\): Use select columns match string (often use regular expression)\\(everything()\\): Select columns\\(everything()\\): Select columns","code":""},{"path":"dplyr-tutorial-in-r.html","id":"the-matches-function","chapter":"24 Dplyr tutorial in R","heading":"24.4.0.3 The matches() Function","text":"introduced , \\(matches()\\) function can select columns names match regular expression (regex). Regular expression way represent certain string patterns, extensively used natural language processing, linguistic analysis, etc. details regular expression, grammar, application, please visit following link: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Cheatsheet.example, want keep columns names start c, can use regular expression “^c” \\(matches()\\) function. (p.s. “^c” regular expression defines strings start letter lower-case c)Notice columns “carat”, “cut”, “color”, “clarity” kept selection, satisfy pattern first letter string letter “c”.","code":"\nhead(select(diamonds, matches(\"^c\")),n = 3)## # A tibble: 3 × 4\n##   carat cut     color clarity\n##   <dbl> <ord>   <ord> <ord>  \n## 1  0.23 Ideal   E     SI2    \n## 2  0.21 Premium E     SI1    \n## 3  0.23 Good    E     VS1"},{"path":"dplyr-tutorial-in-r.html","id":"the-contains-function","chapter":"24 Dplyr tutorial in R","heading":"24.4.0.4 The contains() Function","text":"sake demonstration, create pseudo-dataset names specifically designed include certain strings. case, multiple column names include string “length”Now, can use \\(contains()\\) function select names contain string “length”.","code":"\ncolors <- c(\"red\", \"blue\", \"yellow\", \"green\")\npseudo_car_data <- data.frame(obs = 1:10,\n                              cabin_length = runif(10, 5, 7.5),\n                              door_length = runif(10, 1, 3),\n                              wind_shield_length = runif(10, 4, 6),\n                              color = sample(colors, 10, replace = T))\nhead(pseudo_car_data,,n = 3)##   obs cabin_length door_length wind_shield_length  color\n## 1   1     5.888524    2.332473           5.374240 yellow\n## 2   2     5.929073    1.223836           5.936480  green\n## 3   3     6.816316    2.020962           4.808456  green\nhead(select(pseudo_car_data, contains(\"length\")),n = 3)##   cabin_length door_length wind_shield_length\n## 1     5.888524    2.332473           5.374240\n## 2     5.929073    1.223836           5.936480\n## 3     6.816316    2.020962           4.808456"},{"path":"dplyr-tutorial-in-r.html","id":"filter","chapter":"24 Dplyr tutorial in R","heading":"24.4.1 Filter","text":"Similar select function discussed last section, filter function dplyr package also used selection existing data frame. Filter function used select rows satisfies specific conditions/criteria.second argument must logical value. Logical operation useful . example, ‘.na’ function return TRUE value NA FALSE . can also use \\(\\&\\) \\(|\\) operators combine multiple logical statements.syntax filter function follow:\n\\[filter(data, condition, \\dots)\\]","code":""},{"path":"dplyr-tutorial-in-r.html","id":"filter-numerical-values","chapter":"24 Dplyr tutorial in R","heading":"24.4.1.1 Filter Numerical Values","text":"filter function can used filter numerical character type data. First, lets use price parameter demonstrate filter numerical values. filter observations diamond price 500. words, keep rows observations \\(price \\leq 500\\).","code":"\n#the range of prices for diamonds\nrange(diamonds$price)## [1]   326 18823\n#filter observations that have price less than or equal to 500\nfilter_result <- filter(diamonds, price <= 500)\nhead(filter_result,n = 3)## # A tibble: 3 × 10\n##   carat cut     color clarity depth table price     x     y     z\n##   <dbl> <ord>   <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl>\n## 1  0.23 Ideal   E     SI2      61.5    55   326  3.95  3.98  2.43\n## 2  0.21 Premium E     SI1      59.8    61   326  3.89  3.84  2.31\n## 3  0.23 Good    E     VS1      56.9    65   327  4.05  4.07  2.31"},{"path":"dplyr-tutorial-in-r.html","id":"filter-character-values","chapter":"24 Dplyr tutorial in R","heading":"24.4.1.2 Filter Character Values","text":"Now, can filter character type variables. example, can choose observations “Fair” “Good” cuts:checking counts category, can see filtering dataframe, observations cut “Good” “Premium” “Ideal” filtered , leaving “Fair” “Good” observations. Note table filtration still contains three categories. ‘cut’ variable stored factor dataframe. Thus, filtration eliminate original levels.","code":"\n#check levels of cuts\nlevels(diamonds$cut)## [1] \"Fair\"      \"Good\"      \"Very Good\" \"Premium\"   \"Ideal\"\ntable(diamonds$cut)## \n##      Fair      Good Very Good   Premium     Ideal \n##      1610      4906     12082     13791     21551\n#filter by cut, keeping Fair and Good\nfilter_result <- filter(diamonds, cut %in% c(\"Fair\", \"Good\"))\nhead(filter_result,n = 3)## # A tibble: 3 × 10\n##   carat cut   color clarity depth table price     x     y     z\n##   <dbl> <ord> <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl>\n## 1  0.23 Good  E     VS1      56.9    65   327  4.05  4.07  2.31\n## 2  0.31 Good  J     SI2      63.3    58   335  4.34  4.35  2.75\n## 3  0.22 Fair  E     VS2      65.1    61   337  3.87  3.78  2.49\ntable(filter_result$cut)## \n##      Fair      Good Very Good   Premium     Ideal \n##      1610      4906         0         0         0"},{"path":"dplyr-tutorial-in-r.html","id":"slice","chapter":"24 Dplyr tutorial in R","heading":"24.4.2 Slice","text":"slice function dplyr also useful selecting rows based position order. use similar head function base R select top tail n rows data set.syntax slice function follow:\n\\[slice(data,  number\\ \\ \\ sliced,... )\\]also wrapper functions ‘slice’ can used get pieces data specified number/range rows also filtering conditions, slice_max,slice_min. syntax slice function follow:\n\\[slice\\_max(data, order\\_by = column \\ name, n =  number\\ \\ \\ sliced )\\]","code":"\n#only get the first five observation of the data frame \nslice_result <- slice(diamonds, 1:5)\nslice_result ## # A tibble: 5 × 10\n##   carat cut     color clarity depth table price     x     y     z\n##   <dbl> <ord>   <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl>\n## 1  0.23 Ideal   E     SI2      61.5    55   326  3.95  3.98  2.43\n## 2  0.21 Premium E     SI1      59.8    61   326  3.89  3.84  2.31\n## 3  0.23 Good    E     VS1      56.9    65   327  4.05  4.07  2.31\n## 4  0.29 Premium I     VS2      62.4    58   334  4.2   4.23  2.63\n## 5  0.31 Good    J     SI2      63.3    58   335  4.34  4.35  2.75\n# only get the first five observation of the data frame with highest price\nslice_result <- slice_max(diamonds, order_by = price, n = 5)\nslice_result## # A tibble: 5 × 10\n##   carat cut       color clarity depth table price     x     y     z\n##   <dbl> <ord>     <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl>\n## 1  2.29 Premium   I     VS2      60.8    60 18823  8.5   8.47  5.16\n## 2  2    Very Good G     SI1      63.5    56 18818  7.9   7.97  5.04\n## 3  1.51 Ideal     G     IF       61.7    55 18806  7.37  7.41  4.56\n## 4  2.07 Ideal     G     SI2      62.5    55 18804  8.2   8.13  5.11\n## 5  2    Very Good H     SI1      62.8    57 18803  7.95  8     5.01"},{"path":"dplyr-tutorial-in-r.html","id":"order-manipulation","chapter":"24 Dplyr tutorial in R","heading":"24.5 Order Manipulation","text":"Sometimes, want get direct visualization data ranking observations using one multiple parameters.\n### Ascending Order\ncan use ‘arrange’ function arrange data, based one parameter multiple parameters, ascending order, using following syntax:\n\\[arrange(data, column\\ \\ arrangement, \\dots)\\]","code":"\nhead(arrange(diamonds, price),n = 3)## # A tibble: 3 × 10\n##   carat cut     color clarity depth table price     x     y     z\n##   <dbl> <ord>   <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl>\n## 1  0.23 Ideal   E     SI2      61.5    55   326  3.95  3.98  2.43\n## 2  0.21 Premium E     SI1      59.8    61   326  3.89  3.84  2.31\n## 3  0.23 Good    E     VS1      56.9    65   327  4.05  4.07  2.31"},{"path":"dplyr-tutorial-in-r.html","id":"descending-order","chapter":"24 Dplyr tutorial in R","heading":"24.5.1 Descending Order","text":"can use ‘desc’ function arrange data, based one multiple parameters, descending order, using following syntax:\n\\[arrange(data, desc(column\\ \\ arrangement))\\]","code":"\nhead(arrange(diamonds, desc(price)),n = 3)## # A tibble: 3 × 10\n##   carat cut       color clarity depth table price     x     y     z\n##   <dbl> <ord>     <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl>\n## 1  2.29 Premium   I     VS2      60.8    60 18823  8.5   8.47  5.16\n## 2  2    Very Good G     SI1      63.5    56 18818  7.9   7.97  5.04\n## 3  1.51 Ideal     G     IF       61.7    55 18806  7.37  7.41  4.56"},{"path":"dplyr-tutorial-in-r.html","id":"entry-manipulation","chapter":"24 Dplyr tutorial in R","heading":"24.6 Entry Manipulation","text":"real life data processing, sometimes, need gather data order reduce dimension. example, want show mean number products sold across months data shows daily sales. case, need gather observations combining observations within month calculate cumulative mean generate desirable visualizations. grouping function summary function dplyr comes handy.\n### Grouping\nGrouping function dplyr groups data based categories assigned column(s). general syntax :\n\\[group\\_by(data, column\\ used\\ \\ grouping, \\dots)\\]Notice dataframe grouping looks exactly ! ‘group_by’ function change dataframe , rather, prepares dataframe data processing. can see next section, can summarize data grouping.","code":"\nhead(group_by(diamonds, cut),n = 3)## # A tibble: 3 × 10\n## # Groups:   cut [3]\n##   carat cut     color clarity depth table price     x     y     z\n##   <dbl> <ord>   <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl>\n## 1  0.23 Ideal   E     SI2      61.5    55   326  3.95  3.98  2.43\n## 2  0.21 Premium E     SI1      59.8    61   326  3.89  3.84  2.31\n## 3  0.23 Good    E     VS1      56.9    65   327  4.05  4.07  2.31\nhead(diamonds,n = 3)## # A tibble: 3 × 10\n##   carat cut     color clarity depth table price     x     y     z\n##   <dbl> <ord>   <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl>\n## 1  0.23 Ideal   E     SI2      61.5    55   326  3.95  3.98  2.43\n## 2  0.21 Premium E     SI1      59.8    61   326  3.89  3.84  2.31\n## 3  0.23 Good    E     VS1      56.9    65   327  4.05  4.07  2.31"},{"path":"dplyr-tutorial-in-r.html","id":"summary-statistics","chapter":"24 Dplyr tutorial in R","heading":"24.6.1 Summary Statistics","text":"Often times, want reduce complexity data creating summary statistics, mean, median, max, etc. ‘summarise’ function dplyr just job. grouping categories certain column(s), can employ ‘summarise’ function create new column(s) summary statistics, following syntax:\n\\[summarise(grouped\\_data, new\\_column\\_name = function(column\\ \\ \\ summarized), \\dots)\\]example, trying get mean price based cut diamond type.","code":"\nsummarise(group_by(diamonds, cut), mean_price = mean(price))## # A tibble: 5 × 2\n##   cut       mean_price\n##   <ord>          <dbl>\n## 1 Fair           4359.\n## 2 Good           3929.\n## 3 Very Good      3982.\n## 4 Premium        4584.\n## 5 Ideal          3458."},{"path":"dplyr-tutorial-in-r.html","id":"helper-function-for-summarise","chapter":"24 Dplyr tutorial in R","heading":"24.6.1.1 Helper function for summarise()","text":"several helper functions can efficiently find summary statistics within ‘summarise’ function.$mean(), median() $: Center data$mean(), median() $: Center data$sd() $: Spread data$sd() $: Spread data$min(), max() $: Range data$min(), max() $: Range data","code":""},{"path":"dplyr-tutorial-in-r.html","id":"mutation","chapter":"24 Dplyr tutorial in R","heading":"24.6.2 Mutation","text":"‘mutate’ function extremely useful data manipulation allows greater freedom transforming existing dataframe, also application missing value imputation. syntax mutate function :\n\\[mutate(data, new\\_column\\_name = operation, \\dots)\\]","code":""},{"path":"dplyr-tutorial-in-r.html","id":"transforming-dataframe","chapter":"24 Dplyr tutorial in R","heading":"24.6.2.1 Transforming Dataframe","text":"can add new parameter performing operations existing parameters. following example, calculate price per carat diamond diamond listed dataset. can use formula \\(\\frac{price}{carat}\\) row observation.Notice mutated dataframe one column end titled “price_per_carat”. new column calculated dividing price carat within observation.","code":"\nhead(mutate(diamonds, price_per_carat = price/carat),n = 3)## # A tibble: 3 × 11\n##   carat cut    color clarity depth table price     x     y     z price_per_carat\n##   <dbl> <ord>  <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl>           <dbl>\n## 1  0.23 Ideal  E     SI2      61.5    55   326  3.95  3.98  2.43           1417.\n## 2  0.21 Premi… E     SI1      59.8    61   326  3.89  3.84  2.31           1552.\n## 3  0.23 Good   E     VS1      56.9    65   327  4.05  4.07  2.31           1422."},{"path":"dplyr-tutorial-in-r.html","id":"imputation-using-mean","chapter":"24 Dplyr tutorial in R","heading":"24.6.2.2 Imputation – Using Mean","text":"sake demonstration, create pseudo-dataset contains missing values showcase imputation power mutate function.example, can see Lexa Garcia’s ages missing. use mutate function impute missing values using mean rest ages (.e. age Tom, Jay, Marry). \\(.na()\\) function used check entry contain NA values.","code":"\n#create new data\npseudo_missing_data <- data.frame(name = c(\"Tom\", \"Jay\", \"Marry\", \"Lexa\", \"Garcia\"),\n                          age = c(sample(40:80, 3, replace = F), NA, NA))\npseudo_missing_data##     name age\n## 1    Tom  42\n## 2    Jay  65\n## 3  Marry  43\n## 4   Lexa  NA\n## 5 Garcia  NA\nimputed_data <- mutate(pseudo_missing_data,\n                       age = ifelse(is.na(age), mean(age, na.rm = T), age))\nimputed_data##     name age\n## 1    Tom  42\n## 2    Jay  65\n## 3  Marry  43\n## 4   Lexa  50\n## 5 Garcia  50"},{"path":"dplyr-tutorial-in-r.html","id":"imputation-removing-observations","chapter":"24 Dplyr tutorial in R","heading":"24.6.2.3 Imputation – Removing Observations","text":"Also, brutal way cleaning data – removing observations NA values (.e. removing entire row row contain NA value). However, type cleaning technique generally recommended large quantity missing values, severely depricate integrity original dataset lose important information. general way removing observations NA values calling ‘na.omit’ function:can see latter two rows (.e. observations Lexa Garcia) completely removed!","code":"\nna.omit(pseudo_missing_data)##    name age\n## 1   Tom  42\n## 2   Jay  65\n## 3 Marry  43"},{"path":"dplyr-tutorial-in-r.html","id":"useful-helper-functions-for-mutate","chapter":"24 Dplyr tutorial in R","heading":"24.6.2.4 Useful Helper Functions for mutate()","text":"multiple functions can embedded ‘mutate’ function helps perform complex tasks otherwise requires us define functions :\\(pmin(), pmax()\\): Element-wise min max\\(pmin(), pmax()\\): Element-wise min max\\(cummin(), cummax()\\): Cumulative min max\\(cummin(), cummax()\\): Cumulative min max\\(()\\): value range\\(()\\): value range\\(cumsum(), cumprod()\\): Cumulative sum cumulative product\\(cumsum(), cumprod()\\): Cumulative sum cumulative product\\(cummean()\\): Cumulative mean\\(cummean()\\): Cumulative meanexample:","code":"\nhelper_example <- mutate(diamonds,\n                         #use cummin to find the minimum value up to the current observation\n                         cummin_price = cummin(price),\n                         #use between to determine if the price is in range\n                         in_range = between(price, 330, 340))\nhead(helper_example)[,c(\"price\", \"cummin_price\", \"in_range\")]## # A tibble: 6 × 3\n##   price cummin_price in_range\n##   <int>        <int> <lgl>   \n## 1   326          326 FALSE   \n## 2   326          326 FALSE   \n## 3   327          326 FALSE   \n## 4   334          326 TRUE    \n## 5   335          326 TRUE    \n## 6   336          326 TRUE"},{"path":"dplyr-tutorial-in-r.html","id":"distinct","chapter":"24 Dplyr tutorial in R","heading":"24.6.3 Distinct","text":"‘distinct’ function used check duplicates data set. wouldn’t want data excessive duplicated observations. distinct function can help us delete replicated rows simplify dataframe.\n\\[distinct(data, \\dots)\\]","code":"\nrepeated_diamonds <- slice(diamonds,1:3,1:2)\nrepeated_diamonds ## # A tibble: 5 × 10\n##   carat cut     color clarity depth table price     x     y     z\n##   <dbl> <ord>   <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl>\n## 1  0.23 Ideal   E     SI2      61.5    55   326  3.95  3.98  2.43\n## 2  0.21 Premium E     SI1      59.8    61   326  3.89  3.84  2.31\n## 3  0.23 Good    E     VS1      56.9    65   327  4.05  4.07  2.31\n## 4  0.23 Ideal   E     SI2      61.5    55   326  3.95  3.98  2.43\n## 5  0.21 Premium E     SI1      59.8    61   326  3.89  3.84  2.31\ndistinct(repeated_diamonds )## # A tibble: 3 × 10\n##   carat cut     color clarity depth table price     x     y     z\n##   <dbl> <ord>   <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl>\n## 1  0.23 Ideal   E     SI2      61.5    55   326  3.95  3.98  2.43\n## 2  0.21 Premium E     SI1      59.8    61   326  3.89  3.84  2.31\n## 3  0.23 Good    E     VS1      56.9    65   327  4.05  4.07  2.31"},{"path":"dplyr-tutorial-in-r.html","id":"piping---tying-everything-together","chapter":"24 Dplyr tutorial in R","heading":"24.7 Piping - Tying Everything Together","text":"Piping effective way construct data processing pipelines, especially process involves multiple manipulation steps. grammar used pipe commands ‘%>%’. direction arrow pointing towards way data processing proceeds.example, want first filter observations ‘Good’ cut; keep parameters numerical (.e. ‘carat’, ‘price’, ‘depth’, ‘table’, ‘x’, ‘y’, ‘z’), well ‘clarity’; , summarize data taking mean price grouping ‘clarity’. careful using piping ggplot2. know ggplot2 different layers graphical components connected \\(+\\) sign. Even though piping operator \\(%>%\\) function plus sign, used different conditions. Don’t mix !","code":"\n#pass down to the next manipulation command using piping\ndiamonds %>%\n  #filter only those observations with Good cuts\n  filter(cut == \"Good\") %>%\n  #select all columns except for cut and color\n  select(-c(cut, color)) %>%\n  #summarize the price when grouping by clarity\n  group_by(clarity) %>%\n  summarise(mean_price = mean(price)) %>%\n  #order the mean prices in descending order of clarity\n  arrange(desc(mean_price))## # A tibble: 8 × 2\n##   clarity mean_price\n##   <ord>        <dbl>\n## 1 SI2          4580.\n## 2 VS2          4262.\n## 3 IF           4098.\n## 4 VS1          3801.\n## 5 SI1          3690.\n## 6 I1           3597.\n## 7 VVS2         3079.\n## 8 VVS1         2255."},{"path":"dplyr-tutorial-in-r.html","id":"using-dplyr-with-ggplot","chapter":"24 Dplyr tutorial in R","heading":"24.8 Using Dplyr with GGplot","text":"essence dplyr clean data used perform model construction data visualization. section, use simple data visualization example combines dplyr ggplot2 shows can tie functions introduced graphic design using ggplot2.","code":"\ndiamonds %>%\n  #data manipulation using dplyr\n  filter(cut %in% c(\"Fair\", \"Good\", \"Very Good\")) %>%\n  select(cut, carat, color, price) %>%\n  group_by(cut, color) %>%\n  summarise(mean_price = mean(price),\n            mean_carat = mean(carat)) %>%\n  #data visualization using ggplot2\n  ggplot(mapping = aes(x = mean_carat, y = mean_price)) +\n  geom_point(mapping = aes(color = color)) +\n  ylab(\"Mean Price\") + xlab(\"Mean Carat\") +\n  labs(title = \"Mean Price vs. Mean Carat of Diamonds\") +\n  theme(plot.title = element_text(hjust = 0.5))"},{"path":"downloading-files.html","id":"downloading-files","chapter":"25 Downloading files","heading":"25 Downloading files","text":"Aaron Aknin Ashkan BozorgzadSo Section use r download files. important use right method importing dataset order optimize use.","code":""},{"path":"downloading-files.html","id":"getset-your-working-directory","chapter":"25 Downloading files","heading":"25.1 Get/set your working directory","text":"basic component working data knowing working directoryThe two main commands getwd() setwd().aware relative versus absolute paths","code":""},{"path":"downloading-files.html","id":"checking-for-and-creating-directories","chapter":"25 Downloading files","heading":"25.2 Checking for and creating directories","text":"file.exists (\"directoryName\") check see directory exists dir.create (\"directoryName\") create directory doesn’t exist. example checking “data” directory creating doesn’t exist.","code":"\nif (!file.exists(\"data\")){\n        dir.create(\"data\")\n        }"},{"path":"downloading-files.html","id":"download-a-file-from-the-web","chapter":"25 Downloading files","heading":"25.3 Download a file from the web","text":"Download file internetEven hand, helps reproducibilityImportant parameters url, destfile, methodUseful downloading tab-delimited, csv, filesThe method ’re going use curl. necessary website https, secure website, ’re Mac, need specify method curl order work. list files data directory, see now one file directory, ’s cameras.csv file.important component downloading files internet files might change. want keep track date downloaded data, can date function. just assign dateDownloaded command date give date data downloaded.","code":"\nlist.files( \"./data\" )## [1] \"output.csv\"\ndateDownloaded <- date()\ndateDownloaded## [1] \"Sat Nov  6 04:04:20 2021\""},{"path":"downloading-files.html","id":"reading-local-files","chapter":"25 Downloading files","heading":"25.4 Reading Local Files","text":"Loading flat files - read.table().main function reading data R.Flexible robust requires parameters.Reads data RAM big data can cause problems.can also use read.csv case csv file, automatically sets sep equal quote comma automatically sets header = TRUE.","code":"\ndf <- read.table( \"resources/downloading_files/output.csv\" , sep = \",\",header= TRUE )\nhead(df)##   year industry_code_ANZSIC              industry_name_ANZSIC rme_size_grp\n## 1 2011                    A Agriculture, Forestry and Fishing          a_0\n## 2 2011                    A Agriculture, Forestry and Fishing          a_0\n## 3 2011                    A Agriculture, Forestry and Fishing          a_0\n## 4 2011                    A Agriculture, Forestry and Fishing          a_0\n## 5 2011                    A Agriculture, Forestry and Fishing          a_0\n## 6 2011                    A Agriculture, Forestry and Fishing          a_0\n##                                          variable value              unit\n## 1                                   Activity unit 46134             COUNT\n## 2                          Rolling mean employees     0             COUNT\n## 3                         Salaries and wages paid   279 DOLLARS(millions)\n## 4 Sales, government funding, grants and subsidies  8187 DOLLARS(millions)\n## 5                                    Total income  8866 DOLLARS(millions)\n## 6                               Total expenditure  7618 DOLLARS(millions)\ndf <- read.csv( \"resources/downloading_files/output.csv\")\nhead(df)##   year industry_code_ANZSIC              industry_name_ANZSIC rme_size_grp\n## 1 2011                    A Agriculture, Forestry and Fishing          a_0\n## 2 2011                    A Agriculture, Forestry and Fishing          a_0\n## 3 2011                    A Agriculture, Forestry and Fishing          a_0\n## 4 2011                    A Agriculture, Forestry and Fishing          a_0\n## 5 2011                    A Agriculture, Forestry and Fishing          a_0\n## 6 2011                    A Agriculture, Forestry and Fishing          a_0\n##                                          variable value              unit\n## 1                                   Activity unit 46134             COUNT\n## 2                          Rolling mean employees     0             COUNT\n## 3                         Salaries and wages paid   279 DOLLARS(millions)\n## 4 Sales, government funding, grants and subsidies  8187 DOLLARS(millions)\n## 5                                    Total income  8866 DOLLARS(millions)\n## 6                               Total expenditure  7618 DOLLARS(millions)"},{"path":"downloading-files.html","id":"some-more-important-parameters","chapter":"25 Downloading files","heading":"25.4.1 Some more important parameters","text":"quote - can tell R whether quoted values quote=\"\" means quotes.na.strings - set character represents missing value.nrows - many rows read file (e.g. nrows=10 reads 10 lines).skip- number lines skip starting read","code":""},{"path":"downloading-files.html","id":"reading-xml","chapter":"25 Downloading files","heading":"25.5 Reading XML","text":"Extensible markup languageFrequently used store structured dataParticularly widely used internet applicationsExtracting XML basis web scrapingComponents\nMarkup - labels give text structure\nContent - actual text document\nMarkup - labels give text structureContent - actual text document","code":"\nfileURL<-\"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml\"\ndoc <- xmlTreeParse(sub(\"s\", \"\", fileURL), useInternal = TRUE)\nrootNode <- xmlRoot(doc)\n\nxmlName(rootNode)## [1] \"response\"\nrootNode[[1]][[1]]## <row _id=\"1\" _uuid=\"93CACF6F-C8C2-4B87-95A8-8177806D5A6F\" _position=\"1\" _address=\"http://data.baltimorecity.gov/resource/k5ry-ef3g/1\">\n##   <name>410<\/name>\n##   <zipcode>21206<\/zipcode>\n##   <neighborhood>Frankford<\/neighborhood>\n##   <councildistrict>2<\/councildistrict>\n##   <policedistrict>NORTHEASTERN<\/policedistrict>\n##   <location_1 human_address=\"{&quot;address&quot;:&quot;4509 BELAIR ROAD&quot;,&quot;city&quot;:&quot;Baltimore&quot;,&quot;state&quot;:&quot;MD&quot;,&quot;zip&quot;:&quot;&quot;}\" needs_recoding=\"true\"/>\n## <\/row>"},{"path":"downloading-files.html","id":"reading-json","chapter":"25 Downloading files","heading":"25.6 Reading JSON","text":"Javascript Object NotationLightweight data storageCommon format data application programming interfaces (APIs)Similar structure XML different syntax/formatData stored \nNumbers (double)\nStrings (double quoted)\nBoolean (true false)\nArray (ordered, comma separated enclosed square brackets [])\nObject (unorderd, comma separated collection key:value pairs curley brackets {})\nNumbers (double)Strings (double quoted)Boolean (true false)Array (ordered, comma separated enclosed square brackets [])Object (unorderd, comma separated collection key:value pairs curley brackets {})httr package allows connect websites connect APIs. allows, GET request made (request access result search), retrieve result form text reworked. general, call API via httr made follows:","code":"\n# extracting data from the website\njsonData <- fromJSON(\"https://data.ny.gov/api/views/9a8c-vfzj/rows.json?accessType=DOWNLOAD\")\n# extract the data node\nfood_market <- jsonData[['data']]\n# assembling the data into data frames\n\nfood_market[1,19]## [1] \"GREENVILLE\"\nurl <- \"https://world.openfoodfacts.org/api/v0/product/3017620425400.json\"\n\nresults <- \n  httr::content(\n    httr::GET(url),             # url to query\n    as=\"text\",                  # type of the output\n    httr::content_type_json(),  # type of the answer\n    encoding= \"UTF-8\"           # encoding of the answer\n  )\n\njsonData <-fromJSON(results)"},{"path":"downloading-files.html","id":"webscraping","chapter":"25 Downloading files","heading":"25.7 Webscraping","text":"can great way get dataMany websites information may want programaticaly readIn cases terms service websiteAttempting read many pages quickly can get IP address blockedIn order retrieve data web page can use rvest package.order begin parsing web page, must first request data computer server contains . rvest, function read_html() function. tutorial use weather website, National Weather Service website.\nHigh: 63 °F\nhard read, One way deal , ’ve seen use XML package. , use URL. Use XML package, parse HTML , using InternalNodes get complete structure .","code":"\npage <- read_html(\"https://forecast.weather.gov/MapClick.php?lat=37.7771&lon=-122.4196#.Xl0j6BNKhTY\")\npage## {html_document}\n## <html class=\"no-js\">\n## [1] <head>\\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8 ...\n## [2] <body>\\n        <main class=\"container\"><header class=\"row clearfix\" id=\" ...\nresults = page  %>% html_nodes(\".temp\") %>% html_text()\nresults## [1] \"Low: 55 °F\"  \"High: 64 °F\" \"Low: 50 °F\"  \"High: 62 °F\" \"Low: 48 °F\" \n## [6] \"High: 60 °F\" \"Low: 52 °F\"  \"High: 64 °F\" \"Low: 54 °F\""},{"path":"downloading-files.html","id":"dplyr-pachage","chapter":"25 Downloading files","heading":"25.8 dplyr Pachage","text":"section dplyr package R, package specifically designed help work data frames. lecture just cover basics introduce package ’ll talk verbs arrange, filter, select, mutate rename.","code":""},{"path":"downloading-files.html","id":"load-the-dplyr-package","chapter":"25 Downloading files","heading":"25.8.1 Load the dplyr package","text":"dataset going work data set air pollution weather variables city Chicago years 1987 2005, ’s kind daily data.","code":"\nchicago <- readRDS(\"resources/downloading_files/chicago.rds\")\ndim(chicago)## [1] 6940    8\nstr(chicago)## 'data.frame':    6940 obs. of  8 variables:\n##  $ city      : chr  \"chic\" \"chic\" \"chic\" \"chic\" ...\n##  $ tmpd      : num  31.5 33 33 29 32 40 34.5 29 26.5 32.5 ...\n##  $ dptp      : num  31.5 29.9 27.4 28.6 28.9 ...\n##  $ date      : Date, format: \"1987-01-01\" \"1987-01-02\" ...\n##  $ pm25tmean2: num  NA NA NA NA NA NA NA NA NA NA ...\n##  $ pm10tmean2: num  34 NA 34.2 47 NA ...\n##  $ o3tmean2  : num  4.25 3.3 3.33 4.38 4.75 ...\n##  $ no2tmean2 : num  20 23.2 23.8 30.4 30.3 ..."},{"path":"downloading-files.html","id":"select","chapter":"25 Downloading files","heading":"25.8.2 Select","text":"Show dataframe first 5 columnsif want look columns starting city ending D DPTP, dew point column. , want include columns .can use minus sign say, want look columns except . columns indicated range. can use select function just say minus city colon dew point sequence. ’ll get columns, except columns.equivalent code kind regular R, without using deplyr package little bit tricky","code":"\nhead(select(chicago, 1:5))##   city tmpd   dptp       date pm25tmean2\n## 1 chic 31.5 31.500 1987-01-01         NA\n## 2 chic 33.0 29.875 1987-01-02         NA\n## 3 chic 33.0 27.375 1987-01-03         NA\n## 4 chic 29.0 28.625 1987-01-04         NA\n## 5 chic 32.0 28.875 1987-01-05         NA\n## 6 chic 40.0 35.125 1987-01-06         NA\nnames(chicago)[1:3]## [1] \"city\" \"tmpd\" \"dptp\"\nhead(select(chicago, city:dptp))##   city tmpd   dptp\n## 1 chic 31.5 31.500\n## 2 chic 33.0 29.875\n## 3 chic 33.0 27.375\n## 4 chic 29.0 28.625\n## 5 chic 32.0 28.875\n## 6 chic 40.0 35.125\nhead(select(chicago, -(city:dptp)))##         date pm25tmean2 pm10tmean2 o3tmean2 no2tmean2\n## 1 1987-01-01         NA   34.00000 4.250000  19.98810\n## 2 1987-01-02         NA         NA 3.304348  23.19099\n## 3 1987-01-03         NA   34.16667 3.333333  23.81548\n## 4 1987-01-04         NA   47.00000 4.375000  30.43452\n## 5 1987-01-05         NA         NA 4.750000  30.33333\n## 6 1987-01-06         NA   48.00000 5.833333  25.77233\ni <- match(\"city\", names(chicago))\nj <- match(\"dptp\", names(chicago))\nhead(chicago[, -(i:j)])##         date pm25tmean2 pm10tmean2 o3tmean2 no2tmean2\n## 1 1987-01-01         NA   34.00000 4.250000  19.98810\n## 2 1987-01-02         NA         NA 3.304348  23.19099\n## 3 1987-01-03         NA   34.16667 3.333333  23.81548\n## 4 1987-01-04         NA   47.00000 4.375000  30.43452\n## 5 1987-01-05         NA         NA 4.750000  30.33333\n## 6 1987-01-06         NA   48.00000 5.833333  25.77233"},{"path":"downloading-files.html","id":"verbs","chapter":"25 Downloading files","heading":"25.8.3 Verbs","text":"","code":""},{"path":"downloading-files.html","id":"filter-1","chapter":"25 Downloading files","heading":"25.8.3.1 filter","text":"filter function next function deplyr ’ll talk ’s basically used subset rows based conditions. , example, might want take rows Chicago data set pm 2.5 greater 30you don’t just subset rows based values one column. can take multiple columns create complicated logical sequence. looking pm2.5 greater 30. well temperature greater 80.","code":"\nchic.f <- filter(chicago, pm25tmean2 > 30)\nhead(select(chic.f, 1:3, pm25tmean2), 10)##    city tmpd dptp pm25tmean2\n## 1  chic   23 21.9      38.10\n## 2  chic   28 25.8      33.95\n## 3  chic   55 51.3      39.40\n## 4  chic   59 53.7      35.40\n## 5  chic   57 52.0      33.30\n## 6  chic   57 56.0      32.10\n## 7  chic   75 65.8      56.50\n## 8  chic   61 59.0      33.80\n## 9  chic   73 60.3      30.30\n## 10 chic   78 67.1      41.40\nchic.f <- filter(chicago, pm25tmean2 > 30 & tmpd > 80)\nhead(select(chic.f, 1:3, pm25tmean2, tmpd), 10)##    city tmpd dptp pm25tmean2\n## 1  chic   81 71.2    39.6000\n## 2  chic   81 70.4    31.5000\n## 3  chic   82 72.2    32.3000\n## 4  chic   84 72.9    43.7000\n## 5  chic   85 72.6    38.8375\n## 6  chic   84 72.6    38.2000\n## 7  chic   82 67.4    33.0000\n## 8  chic   82 63.5    42.5000\n## 9  chic   81 70.4    33.1000\n## 10 chic   82 66.2    38.8500"},{"path":"downloading-files.html","id":"arrange","chapter":"25 Downloading files","heading":"25.8.3.2 arrange","text":"next function range simple purpose. ’s basically used reorder rows data frame based values column.use tail function look last couple rowsTo arrange rows descending order, desc function can useduse tail function look last couple rows","code":"\nchicago <- arrange(chicago, date)\nhead(select(chicago, date, pm25tmean2), 3)##         date pm25tmean2\n## 1 1987-01-01         NA\n## 2 1987-01-02         NA\n## 3 1987-01-03         NA\ntail(select(chicago, date, pm25tmean2), 3)##            date pm25tmean2\n## 6938 2005-12-29    7.45000\n## 6939 2005-12-30   15.05714\n## 6940 2005-12-31   15.00000\nchicago <- arrange(chicago, desc(date))\nhead(select(chicago, date, pm25tmean2), 3)##         date pm25tmean2\n## 1 2005-12-31   15.00000\n## 2 2005-12-30   15.05714\n## 3 2005-12-29    7.45000\ntail(select(chicago, date, pm25tmean2), 3)##            date pm25tmean2\n## 6938 1987-01-03         NA\n## 6939 1987-01-02         NA\n## 6940 1987-01-01         NA"},{"path":"downloading-files.html","id":"rename","chapter":"25 Downloading files","heading":"25.8.3.3 rename","text":"rename function simple. can used rename variable R.","code":"\nhead(chicago[, 1:5], 3)##   city tmpd dptp       date pm25tmean2\n## 1 chic   35 30.1 2005-12-31   15.00000\n## 2 chic   36 31.0 2005-12-30   15.05714\n## 3 chic   35 29.4 2005-12-29    7.45000\nchicago <- rename(chicago, dewpoint = dptp, pm25 = pm25tmean2)\nhead(chicago[, 1:5], 3)##   city tmpd dewpoint       date     pm25\n## 1 chic   35     30.1 2005-12-31 15.00000\n## 2 chic   36     31.0 2005-12-30 15.05714\n## 3 chic   35     29.4 2005-12-29  7.45000"},{"path":"downloading-files.html","id":"mutate","chapter":"25 Downloading files","heading":"25.8.3.4 mutate","text":"mutate function used simply transform existing variables create new variables. example want create new variable called pm25detrend. pm25 variable mean subtracted .","code":"\nchicago <- mutate(chicago, pm25detrend=pm25-mean(pm25, na.rm=TRUE))\nhead(select(chicago, pm25, pm25detrend))##       pm25 pm25detrend\n## 1 15.00000   -1.230958\n## 2 15.05714   -1.173815\n## 3  7.45000   -8.780958\n## 4 17.75000    1.519042\n## 5 23.56000    7.329042\n## 6  8.40000   -7.830958"},{"path":"downloading-files.html","id":"group_by","chapter":"25 Downloading files","heading":"25.8.3.5 group_by","text":"Finally group function allows split data frame according Certain categorical variables. example, going create temperature category variable indicate whether given day hot cold, depending whether temperature 80 degrees .can also categorize data set variables. example might want summary year data set. can create can use mutate function create year variable.","code":"\nchicago <- mutate(chicago, tempcat = factor(1 * (tmpd > 80), labels = c(\"cold\", \"hot\")))\nhotcold <- group_by(chicago, tempcat)\nsummarize(hotcold, pm25 = mean(pm25, na.rm = TRUE),\no3 = max(o3tmean2),\nno2 = median(no2tmean2))## # A tibble: 3 × 4\n##   tempcat  pm25    o3   no2\n##   <fct>   <dbl> <dbl> <dbl>\n## 1 cold     16.0 66.6   24.5\n## 2 hot      26.5 63.0   24.9\n## 3 <NA>     47.7  9.42  37.4\nchicago <- mutate(chicago, year = as.POSIXlt(date)$year + 1900)\nyears <- group_by(chicago, year)\nsummarize(years, pm25 = mean(pm25, na.rm = TRUE),\no3 = max(o3tmean2, na.rm = TRUE),\nno2 = median(no2tmean2, na.rm = TRUE))## # A tibble: 19 × 4\n##     year  pm25    o3   no2\n##    <dbl> <dbl> <dbl> <dbl>\n##  1  1987 NaN    63.0  23.5\n##  2  1988 NaN    61.7  24.5\n##  3  1989 NaN    59.7  26.1\n##  4  1990 NaN    52.2  22.6\n##  5  1991 NaN    63.1  21.4\n##  6  1992 NaN    50.8  24.8\n##  7  1993 NaN    44.3  25.8\n##  8  1994 NaN    52.2  28.5\n##  9  1995 NaN    66.6  27.3\n## 10  1996 NaN    58.4  26.4\n## 11  1997 NaN    56.5  25.5\n## 12  1998  18.3  50.7  24.6\n## 13  1999  18.5  57.5  24.7\n## 14  2000  16.9  55.8  23.5\n## 15  2001  16.9  51.8  25.1\n## 16  2002  15.3  54.9  22.7\n## 17  2003  15.2  56.2  24.6\n## 18  2004  14.6  44.5  23.4\n## 19  2005  16.2  58.8  22.6"},{"path":"downloading-files.html","id":"section","chapter":"25 Downloading files","heading":"25.8.3.6 %>%","text":"dplyr package implements special operator. allows chain different operations. allows see operations happening readable way. ’s indicated percent symbol greater symbol percent symbol. call pipeline operator. idea take data set feed pipeline operations create new data set. Chicago data set want mutate create month variable want create summary pollutant variables month. want take output mutate. group use according month variable. finally want take output group run summarize.","code":"\nchicago %>% mutate(month = as.POSIXlt(date)$mon + 1) %>% group_by(month) %>%  summarize(pm25 = mean(pm25, na.rm = TRUE),\n    o3 = max(o3tmean2, na.rm = TRUE),\n    no2 = median(no2tmean2, na.rm = TRUE))## # A tibble: 12 × 4\n##    month  pm25    o3   no2\n##    <dbl> <dbl> <dbl> <dbl>\n##  1     1  17.8  28.2  25.4\n##  2     2  20.4  37.4  26.8\n##  3     3  17.4  39.0  26.8\n##  4     4  13.9  47.9  25.0\n##  5     5  14.1  52.8  24.2\n##  6     6  15.9  66.6  25.0\n##  7     7  16.6  59.5  22.4\n##  8     8  16.9  54.0  23.0\n##  9     9  15.9  57.5  24.5\n## 10    10  14.2  47.1  24.2\n## 11    11  15.2  29.5  23.6\n## 12    12  17.5  27.7  24.5"},{"path":"downloading-files.html","id":"connecting-to-sql-database","chapter":"25 Downloading files","heading":"25.8.4 Connecting to SQL DataBase","text":"part teach us connect SQL database R submit queries . need dbplyr RSQLite packages.Retrieve SQL file way want. case retrieve url stock data folder.connect R terminal SQL database.","code":"\ndownload.file(url = \"https://ndownloader.figshare.com/files/2292171\", destfile = \"data/db_sql.sqlite\", mode = \"wb\")\ndb <- DBI::dbConnect(RSQLite::SQLite(), \"resources/downloading_files/db_sql.sqlite\")"},{"path":"downloading-files.html","id":"querying-the-database-with-the-sql-syntax","chapter":"25 Downloading files","heading":"25.8.4.1 Querying the database with the SQL syntax","text":"sql function allows us submit queries database using SQL language.","code":"\ntbl(db, sql(\"SELECT year, species_id, plot_id FROM surveys\"))## # Source:   SQL [?? x 3]\n## # Database: sqlite 3.36.0\n## #   [/home/runner/work/cc21fall2/cc21fall2/resources/downloading_files/db_sql.sqlite]\n##     year species_id plot_id\n##    <int> <chr>        <int>\n##  1  1977 NL               2\n##  2  1977 NL               3\n##  3  1977 DM               2\n##  4  1977 DM               7\n##  5  1977 DM               3\n##  6  1977 PF               1\n##  7  1977 PE               2\n##  8  1977 DM               1\n##  9  1977 DM               1\n## 10  1977 PF               6\n## # … with more rows"},{"path":"downloading-files.html","id":"querying-the-database-with-the-dplyr-syntax","chapter":"25 Downloading files","heading":"25.8.4.2 Querying the database with the dplyr syntax","text":"result can achieved using dplyr syntax.","code":"\nsurveys <- tbl(db, \"surveys\")\nsurveys %>% select(year, species_id, plot_id)## # Source:   lazy query [?? x 3]\n## # Database: sqlite 3.36.0\n## #   [/home/runner/work/cc21fall2/cc21fall2/resources/downloading_files/db_sql.sqlite]\n##     year species_id plot_id\n##    <int> <chr>        <int>\n##  1  1977 NL               2\n##  2  1977 NL               3\n##  3  1977 DM               2\n##  4  1977 DM               7\n##  5  1977 DM               3\n##  6  1977 PF               1\n##  7  1977 PE               2\n##  8  1977 DM               1\n##  9  1977 DM               1\n## 10  1977 PF               6\n## # … with more rows"},{"path":"downloading-files.html","id":"other-benefit-of-dplyr","chapter":"25 Downloading files","heading":"25.8.5 Other benefit of dplyr","text":"dplyr can work data frame “backends”data.table large fast tablesSQL interface relational databases via DBI package","code":""},{"path":"video-introduction-to-maps-with-ggmap.html","id":"video-introduction-to-maps-with-ggmap","chapter":"26 Video introduction to maps with ggmap","heading":"26 Video introduction to maps with ggmap","text":"Ryan Rogers","code":"\n# install.packages(\"ggmap\")\nlibrary(ggmap)\n# You will also need to activate an API key! Use a line like the following:\n# register_google(\"<API KEY>\")"},{"path":"video-introduction-to-maps-with-ggmap.html","id":"link-to-video-tutorial","chapter":"26 Video introduction to maps with ggmap","heading":"26.1 Link to Video Tutorial","text":"https://www.youtube.com/watch?v=AKEEAaCbtog","code":""},{"path":"video-introduction-to-maps-with-ggmap.html","id":"getting-started","chapter":"26 Video introduction to maps with ggmap","heading":"26.2 Getting Started","text":"demonstration show make static maps within tidyverse framework using ggmap. get started, make sure ggmap installed ready go, since may installed default.One thing can somewhat pesky working ggmap Google maps. 2018, service requires API key use. access full features demonstration, register Google API key. Details can found help file ‘register_google’.Note: wish run code found file, need register Google API key!","code":""},{"path":"video-introduction-to-maps-with-ggmap.html","id":"why-ggmap","chapter":"26 Video introduction to maps with ggmap","heading":"26.3 Why ggmap?","text":"ggmap useful demonstration, since use syntax may familiar already! ggmap designed quite compatible ggplot2 (fact, Hadley Wickham, one authors ggplot2, co-author!). fact, much ggmap , hood, largely comprised ggplot2 components. ggmap, however, features added benefit abstracting away many involved components setting ggplot2 visual maps, doubtless prove easier use base ggplot2 alone. ggmap also many options customizing resulting visuals, though explore many options depth.noted ggmap excellent tool static maps. looking dynamic maps provide potential user interaction, may find libraries, leaflet, better suit needs.","code":""},{"path":"video-introduction-to-maps-with-ggmap.html","id":"dataset-for-demonstration","chapter":"26 Video introduction to maps with ggmap","heading":"26.4 Dataset for Demonstration","text":"demonstration, utilize data public WiFi locations New York City. dataset can found :\nhttps://data.cityofnewyork.us/City-Government/NYC-Wi-Fi-Hotspot-Locations/yjub-udmw . save dataset ‘wifi_data’:","code":"\nwifi_data <- read.csv(\"https://data.cityofnewyork.us/api/views/yjub-udmw/rows.csv?accessType=DOWNLOAD\")\nhead(wifi_data)##   OBJECTID Borough         Type          Provider                   Name\n## 1    10604       4 Limited Free          SPECTRUM      Baisley Pond Park\n## 2    10555       4 Limited Free          SPECTRUM           Kissena Park\n## 3    12370       3         Free  Transit Wireless           Grand St (L)\n## 4     9893       3         Free Downtown Brooklyn                       \n## 5    10169       1         Free  Transit Wireless Lexington Av-63 St (F)\n## 6    10880       4 Limited Free          SPECTRUM           Kissena Park\n##                 Location Latitude Longitude         X        Y\n## 1         Park Perimeter 40.67486 -73.78412 1044131.9 185219.9\n## 2         Park Perimeter 40.74756 -73.81815 1034637.5 211685.2\n## 3           Grand St (L) 40.71193 -73.94067 1000698.1 198655.9\n## 4          125 Court St. 40.68999 -73.99200  986470.0 190656.7\n## 5 Lexington Av-63 St (F) 40.76463 -73.96612  993636.6 217853.9\n## 6         Park Perimeter 40.74243 -73.81151 1036481.4 209820.1\n##           Location_T                Remarks     City                   SSID\n## 1 Outdoor TWC Aerial 3 free 10 min sessions   Queens              GuestWiFi\n## 2 Outdoor TWC Aerial 3 free 10 min sessions   Queens              GuestWiFi\n## 3     Subway Station                 SN 123 Brooklyn    TransitWirelessWiFi\n## 4            Outdoor                        Brooklyn Downtown Brooklyn WiFi\n## 5     Subway Station                 SN 223 New York    TransitWirelessWiFi\n## 6 Outdoor TWC Aerial 3 free 10 min sessions   Queens              GuestWiFi\n##   SourceID  Activated BoroCode Borough.Name\n## 1        0 09/09/9999        4       Queens\n## 2        0 09/09/9999        4       Queens\n## 3          09/09/9999        3     Brooklyn\n## 4          09/09/9999        3     Brooklyn\n## 5          09/09/9999        1    Manhattan\n## 6        0 09/09/9999        4       Queens\n##   Neighborhood.Tabulation.Area.Code..NTACODE.\n## 1                                        QN02\n## 2                                        QN22\n## 3                                        BK90\n## 4                                        BK09\n## 5                                        MN40\n## 6                                        QN62\n##   Neighborhood.Tabulation.Area..NTA. Council.Distrcit Postcode BoroCD\n## 1          Springfield Gardens North               28    11434    412\n## 2                           Flushing               20    11355    407\n## 3                  East Williamsburg               34    11206    301\n## 4       Brooklyn Heights-Cobble Hill               33    11201    302\n## 5      Upper East Side-Carnegie Hill                4    10065    108\n## 6                    Queensboro Hill               20    11355    407\n##   Census.Tract BCTCB2010     BIN        BBL DOITT_ID\n## 1          294       294       0          0     1408\n## 2          845       845       0          0     1359\n## 3          495       495       0          0     1699\n## 4            9         9 3388736 3002777501      298\n## 5          120       120       0          0      599\n## 6         1215      1215       0          0     1347\n##              Location..Lat..Long.\n## 1 (40.6748599999, -73.7841200005)\n## 2 (40.7475599996, -73.8181499997)\n## 3 (40.7119259997, -73.9406699994)\n## 4 (40.6899850001, -73.9919950004)\n## 5 (40.7646300002, -73.9661150001)\n## 6 (40.7424300003, -73.8115100003)"},{"path":"video-introduction-to-maps-with-ggmap.html","id":"creating-maps-no-plotting","chapter":"26 Video introduction to maps with ggmap","heading":"26.5 Creating Maps (No plotting)","text":"dive overlay datapoints visuals graphs, ’ll start going create maps first place.","code":""},{"path":"video-introduction-to-maps-with-ggmap.html","id":"by-location-name","chapter":"26 Video introduction to maps with ggmap","heading":"26.5.1 By location name","text":"first, perhaps approachable way can plot map simply specifying name location ’d like see. works geocode function. example city Paris, France:want verify coordinates, can try ! Simply plug 48.85661, 2.352222 Google Maps, see indeed location Paris, France (, location roughly center Paris). revgeocode mapdist two useful functions inverse geocode calculate distances, respectively.generate map using location name, run two steps. First use get_map(), specifying location name. gives ggmap object. Second, generate ggplot2-compatible plot, using ggmap() providing ggmap object step 1 input. demonstrate location lookup works abstract names, let us try finding Parthenon, Athens:Clearly Parthenon viewed space. Let us adjust variables give us clearer view. First, adjust ‘zoom’ parameter. default, get_map select us, can specify manually. , initially set 10, right city. Let us try 16 instead:better. style map may little distracting, show change later.","code":"\ngeocode(\"Paris\")## # A tibble: 1 × 2\n##     lon   lat\n##   <dbl> <dbl>\n## 1  2.35  48.9\nparthenon <- get_map(location = \"parthenon, athens\")\n\nparthenon_map <- ggmap(parthenon)\n\nparthenon_map\nparthenon <- get_map(location = \"parthenon, athens\", zoom = 16)\n\nparthenon_map <- ggmap(parthenon)\n\nparthenon_map"},{"path":"video-introduction-to-maps-with-ggmap.html","id":"by-geographic-coordinates","chapter":"26 Video introduction to maps with ggmap","heading":"26.5.2 By geographic coordinates","text":"Another way plot map geographic coordinates directly. , input coordinates Grand Canyon:","code":"\ngrand_canyon <- get_map(location = c(-112, 36.1), zoom = 9)\n\ngrand_canyon_map <- ggmap(grand_canyon)\n\ngrand_canyon_map"},{"path":"video-introduction-to-maps-with-ggmap.html","id":"using-shape-files","chapter":"26 Video introduction to maps with ggmap","heading":"26.5.3 Using shape files","text":"Shape files also option plotting maps ggmap, cover .","code":""},{"path":"video-introduction-to-maps-with-ggmap.html","id":"quick-map-plot","chapter":"26 Video introduction to maps with ggmap","heading":"26.6 Quick Map Plot","text":"event like quick visual plotted, given set latitude longitude points like superimpose map, easy option form qmplot. example, using sample dataset:looking quick visual, may suffice cases.","code":"\nqmplot(data=wifi_data, x = Longitude, y = Latitude, color = I('Blue'), alpha = I(0.05))"},{"path":"video-introduction-to-maps-with-ggmap.html","id":"plotting-by-overlaying-ggplot2-visuals","chapter":"26 Video introduction to maps with ggmap","heading":"26.7 Plotting by Overlaying ggplot2 Visuals","text":"cases, want elaborate visuals, may easier accomplish ggplot2 ordinary ggmaps. examples:","code":""},{"path":"video-introduction-to-maps-with-ggmap.html","id":"scatterplot","chapter":"26 Video introduction to maps with ggmap","heading":"26.7.1 Scatterplot","text":"Let us start basic plotting. Note ‘lat’ ‘lon’ expected names x y values.see two issues. First, legend inset top left. can modified within ggmap. Second, map colors may confusing, given parks water colors several categories. Let us correct issues:used arguments extent = ‘device’ legend = “topleft” move legend, source = ‘stamen’ maptype = “toner” adjust map’s appearance.","code":"\nwifi_data_renamed <- mutate(wifi_data, lat = Latitude, lon = Longitude)\n\nnyc <- get_map(location = \"manhattan\", zoom = 12)\n\nggmap(nyc) +\n  geom_point(data = wifi_data_renamed, aes(color = Type), alpha=.2)\nnyc <- get_map(location = \"manhattan\", zoom = 12, source = 'stamen', maptype = \"toner\")\n\nggmap(nyc, extent = 'device', legend = \"topleft\") +\n  geom_point(data = wifi_data_renamed, aes(color = Type), alpha=.2)"},{"path":"video-introduction-to-maps-with-ggmap.html","id":"heatmap-with-rectangular-bins","chapter":"26 Video introduction to maps with ggmap","heading":"26.7.2 Heatmap with Rectangular Bins","text":"event overplotting, rectangular heatmap can used. graph shows rectangular heatmap area manhattan north central park.","code":"\nnyc <- get_map(location = c(-73.96, 40.8), zoom = 14, source = 'stamen', maptype = \"toner\")\n\nggmap(nyc, extent = 'device', legend = \"topleft\") +\n  geom_bin_2d(data = wifi_data_renamed, aes(color = Type, fill = Type), bins = 40, alpha=.7)"},{"path":"video-introduction-to-maps-with-ggmap.html","id":"contour-plots","chapter":"26 Video introduction to maps with ggmap","heading":"26.7.3 Contour Plots","text":"One final visual interest contour plot. example one:","code":"\nnyc <- get_map(location = \"manhattan\", zoom = 12, color = 'bw')\n\nggmap(nyc, extent = 'device', legend = \"topleft\") +\n  geom_density_2d_filled(data = wifi_data_renamed, alpha = 0.3)"},{"path":"video-introduction-to-maps-with-ggmap.html","id":"overlaying-routes","chapter":"26 Video introduction to maps with ggmap","heading":"26.7.4 Overlaying Routes","text":"One neat feature ggmap ability superimpose routes. map shows available WiFi hotspots near walking route Columbia Central Park:Looks like pickings pretty slim!","code":"\nto_cp <- route(from = 'Columbia University', to = 'Frederick Douglass Circle', mode = 'walking')\n\nnyc <- get_map(location = c(-73.96, 40.803), zoom = 16, color = 'bw')\n\nggmap(nyc) +\n  geom_leg(aes(x = start_lon, y = start_lat, xend = end_lon, yend = end_lat), size = 2, color = 'blue', data=to_cp) +\n  geom_point(data = wifi_data_renamed, color = 'red')"},{"path":"video-introduction-to-maps-with-ggmap.html","id":"recommended-reading","chapter":"26 Video introduction to maps with ggmap","heading":"26.8 Recommended Reading","text":"’re looking additional reading ggmap, recommend https://journal.r-project.org/archive/2013-1/kahle-wickham.pdf .","code":""},{"path":"video-introduction-to-maps-with-ggmap.html","id":"sources-3","chapter":"26 Video introduction to maps with ggmap","heading":"26.9 Sources","text":"L. Ellis. Map Plots Created R Ggmap. Little Miss Data. April 15, 2018. URL\nhttps://www.littlemissdata.com/blog/mapsD. Kahle H. Wickham. ggmap: Spatial Visualization ggplot2. R Journal, 5(1), 144-161. URL\nhttp://journal.r-project.org/archive/2013-1/kahle-wickham.pdfN. Voevodin. R, Best Practices. April 6, 2020. URL\nhttps://bookdown.org/voevodin_nv/R_Not_the_Best_Practices/maps.html","code":""},{"path":"comparison-among-base-r-tidyverse-and-datatable.html","id":"comparison-among-base-r-tidyverse-and-datatable","chapter":"27 Comparison among base R, tidyverse, and datatable","heading":"27 Comparison among base R, tidyverse, and datatable","text":"Siyue Han","code":"\n# Load the tidyverse package\nlibrary(tidyverse)\n# Load the data.table package\nlibrary(data.table)"},{"path":"comparison-among-base-r-tidyverse-and-datatable.html","id":"introduction-5","chapter":"27 Comparison among base R, tidyverse, and datatable","heading":"27.1 Introduction","text":"many ways read analyze data R, data.frame provided base R can handle situations. Therefore, using time far occasionally used tibble tidyverse. one time dealing large csv, found slow data.frame. help google, used data.table first time, amazing. Therefore, ’d like share way reading analyzing data people.","code":""},{"path":"comparison-among-base-r-tidyverse-and-datatable.html","id":"reading-data","chapter":"27 Comparison among base R, tidyverse, and datatable","heading":"27.2 Reading Data","text":"First, let’s see performance reading csv data among three environments.","code":""},{"path":"comparison-among-base-r-tidyverse-and-datatable.html","id":"data.frame","chapter":"27 Comparison among base R, tidyverse, and datatable","heading":"27.2.1 Data.Frame","text":"example reading csv data.frame.","code":"\nstart <- Sys.time()\ndf <- read.csv(\"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv\")\nend <- Sys.time()\nprint(end - start)## Time difference of 1.295147 secs"},{"path":"comparison-among-base-r-tidyverse-and-datatable.html","id":"tibble","chapter":"27 Comparison among base R, tidyverse, and datatable","heading":"27.2.2 Tibble","text":"example reading csv tibble.","code":"\nstart <- Sys.time()\ntb <- read_csv(\"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv\")\nend <- Sys.time()\nprint(end - start)## Time difference of 0.8497355 secs"},{"path":"comparison-among-base-r-tidyverse-and-datatable.html","id":"data.table","chapter":"27 Comparison among base R, tidyverse, and datatable","heading":"27.2.3 Data.Table","text":"example reading csv data.table.can see, data.table can read csv file super fast, especially file large. tibble tidyverse slightly faster data.frame base R, still much slower data.table.","code":"\nstart <- Sys.time()\ndt <- fread(\"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv\")\nend <- Sys.time()\nprint(end - start)## Time difference of 0.1946497 secs"},{"path":"comparison-among-base-r-tidyverse-and-datatable.html","id":"processing-data","chapter":"27 Comparison among base R, tidyverse, and datatable","heading":"27.3 Processing Data","text":", let’s see differences processing data among three environments.","code":""},{"path":"comparison-among-base-r-tidyverse-and-datatable.html","id":"selecting-columns-and-rows","chapter":"27 Comparison among base R, tidyverse, and datatable","heading":"27.3.1 Selecting column(s) and row(s)","text":"","code":"\nstart <- Sys.time()\nx1 <- df[101:110, c('Lat', 'Long_')]\nend <- Sys.time()\nprint(end - start)## Time difference of 0.00269413 secs\nstart <- Sys.time()\nx2 <- select(tb, Lat, Long_) %>% slice(101:110)\nend <- Sys.time()\nprint(end - start)## Time difference of 0.01958704 secs\nstart <- Sys.time()\nx3 <- dt[101:110, .(Lat, Long_)]\nend <- Sys.time()\nprint(end - start)## Time difference of 0.01444721 secs"},{"path":"comparison-among-base-r-tidyverse-and-datatable.html","id":"filtering-rows","chapter":"27 Comparison among base R, tidyverse, and datatable","heading":"27.3.2 Filtering row(s)","text":"","code":"\nstart <- Sys.time()\nx1 <- df[df$`X10.31.21` > 500000,]\nend <- Sys.time()\nprint(end - start)## Time difference of 0.02132368 secs\nstart <- Sys.time()\nx2 <- filter(tb, `10/31/21` > 500000)\nend <- Sys.time()\nprint(end - start)## Time difference of 0.01430535 secs\nstart <- Sys.time()\nx3 <- dt[`10/31/21` > 500000,]\nend <- Sys.time()\nprint(end - start)## Time difference of 0.003150463 secs"},{"path":"comparison-among-base-r-tidyverse-and-datatable.html","id":"sorting-the-table","chapter":"27 Comparison among base R, tidyverse, and datatable","heading":"27.3.3 Sorting the table","text":"","code":"\nstart <- Sys.time()\nx1 <- df[order(-df$`X10.31.21`), ]\nend <- Sys.time()\nprint(end - start)## Time difference of 0.01976466 secs\nstart <- Sys.time()\nx2 <- arrange(tb, -`10/31/21`)\nend <- Sys.time()\nprint(end - start)## Time difference of 0.03271651 secs\nstart <- Sys.time()\nx3 <- dt[order(-`10/31/21`), ]\nend <- Sys.time()\nprint(end - start)## Time difference of 0.1771774 secs"},{"path":"comparison-among-base-r-tidyverse-and-datatable.html","id":"summarizing-columns-by-group","chapter":"27 Comparison among base R, tidyverse, and datatable","heading":"27.3.4 Summarizing columns by group","text":"","code":"\nstart <- Sys.time()\nx1 <- aggregate(df$`X10.31.21`, list(df$Province_State), sum)\nend <- Sys.time()\nprint(end - start)## Time difference of 0.007216692 secs\nstart <- Sys.time()\nx2 <- group_by(tb, Province_State) %>% summarise(sum(`10/31/21`))\nend <- Sys.time()\nprint(end - start)## Time difference of 0.02284217 secs\nstart <- Sys.time()\nx3 <- dt[ , lapply(.(`10/31/21`), sum), by = Province_State] \nend <- Sys.time()\nprint(end - start)## Time difference of 0.004267931 secs"},{"path":"comparison-among-base-r-tidyverse-and-datatable.html","id":"pivoting-longer","chapter":"27 Comparison among base R, tidyverse, and datatable","heading":"27.3.5 Pivoting longer","text":"","code":"\nstart <- Sys.time()\nx1 <- reshape(df, \n              varying = 12:dim(df)[2],\n              timevar = \"Date\", v.names=\"Cases\",\n              direction = \"long\")\nx1 <- x1[, c('Combined_Key', 'Date', 'Cases')]\nend <- Sys.time()\nprint(end - start)## Time difference of 17.64273 secs\nstart <- Sys.time()\nx2 <- pivot_longer(tb, \n                   names_to = \"Date\", \n                   values_to = \"Cases\", \n                   -(1:11)) %>%\n      select(Combined_Key, Date, Cases)\nend <- Sys.time()\nprint(end - start)## Time difference of 1.070366 secs\nstart <- Sys.time()\nx3 <- melt(dt, \n           id.vars = 1:11, \n           variable.name = \"Date\", \n           value.name = \"Cases\")[\n             , .(Combined_Key, Date, Cases)]\nend <- Sys.time()\nprint(end - start)## Time difference of 1.012232 secs"},{"path":"comparison-among-base-r-tidyverse-and-datatable.html","id":"joining-tables","chapter":"27 Comparison among base R, tidyverse, and datatable","heading":"27.3.6 Joining tables","text":"","code":"\nstart <- Sys.time()\nx1 <- merge(df[, 1:11], x1)\nend <- Sys.time()\nprint(end - start)## Time difference of 25.52823 secs\nstart <- Sys.time()\nx2 <- left_join(select(tb, 1:11), x2, by = \"Combined_Key\")\nend <- Sys.time()\nprint(end - start)## Time difference of 1.356773 secs\nstart <- Sys.time()\nx3 <- dt[, 1:11][x3, on = \"Combined_Key\"]\nend <- Sys.time()\nprint(end - start)## Time difference of 1.044259 secs"},{"path":"comparison-among-base-r-tidyverse-and-datatable.html","id":"chaining-structures","chapter":"27 Comparison among base R, tidyverse, and datatable","heading":"27.3.7 Chaining structures","text":"Base R chaining structure like tidyverse data.table. compare chaining structures tidyverse data.table.\ntidyverse uses %>% connect operations together.\ndata.table uses bracketed operations back back [...][...]., can see simple operations selecting, filtering sorting, Base R can finish fast. However, complex operations pivoting joining, Base R cost huge amount time. Comparing tidyverse data.table, can see data.table slightly faster speed tidyverse almost every task. Especially, using chaining structure, data.table finishes much faster tidyverse. probably data.table includes many different operations together one bracketed operation. example, use one bracketed operation group_by, summarise arrange task tidyverse. hand, since tidyverse one task function, task function easy understand name, code tidyverse readable data.table.","code":"\nstart <- Sys.time()\nx2 <- tb %>% \n      mutate(year = `10/31/21` - `10/31/20`) %>% \n      group_by(Province_State) %>% \n      summarise(year = sum(year)) %>% \n      arrange(-year)\n\nend <- Sys.time()\nprint(end - start)## Time difference of 0.03047562 secs\nstart <- Sys.time()\nx3 <- dt[, year := `10/31/21` - `10/31/20`, ][\n         order(-year), .(year = sum(year)), by = Province_State]\nend <- Sys.time()\nprint(end - start)## Time difference of 0.006450891 secs"},{"path":"comparison-among-base-r-tidyverse-and-datatable.html","id":"summary-of-key-functions","chapter":"27 Comparison among base R, tidyverse, and datatable","heading":"27.4 Summary of key functions","text":"","code":""},{"path":"comparison-among-base-r-tidyverse-and-datatable.html","id":"conclusion","chapter":"27 Comparison among base R, tidyverse, and datatable","heading":"27.5 Conclusion","text":"motivation project one day dealing large csv, found slow data.frame. help google, used data.table first time, amazing. Therefore, ’d like compare performance base R tidyverse reading analyzing data.project, learned use data.table analyze data. Also learned advantage using three ways. data.frame base R convenient easy way deal data analytics tasks, takes much time data large operation complex. Therefore, cases, better use data.table tidyverse. cases handling large dataset, data.table good choice since runs extremely fast. cases requiring speed much, especially collaborating others, can choose tidyverse since code readable.","code":""},{"path":"comparison-among-base-r-tidyverse-and-datatable.html","id":"reference","chapter":"27 Comparison among base R, tidyverse, and datatable","heading":"27.6 Reference","text":"[1] https://cran.r-project.org/web/packages/data.table/vignettes/datatable-intro.html[2] https://megapteraphile.wordpress.com/2020/03/25/data-frame-vs-data-table-vs-tibble--r/[3] https://mgimond.github.io/rug_2019_12/Index.html","code":""},{"path":"introduction-to-analytics-consulting-at-accenture.html","id":"introduction-to-analytics-consulting-at-accenture","chapter":"28 Introduction to analytics consulting at Accenture","heading":"28 Introduction to analytics consulting at Accenture","text":"Gabrielle NyirjesyI conducted zoom session Analytics Consulting shared learned 5 years working Accenture. topics discussed included types Data Science problems, working real-world data, considerations delivering solutions, team structure career progression. presentation can found following link: https://drive.google.com/drive/folders/1DH9pn7gAZpjYXgjMJQwFwBbvTYCnan0K?usp=sharing","code":""},{"path":"github-initial-setup.html","id":"github-initial-setup","chapter":"29 Github initial setup","heading":"29 Github initial setup","text":"Joyce Robbins","code":""},{"path":"github-initial-setup.html","id":"create-new-repo","chapter":"29 Github initial setup","heading":"29.1 Create new repo","text":"Create new repository copying template: http://www.github.com/jtr13/cctemplate following instructions README.","code":""},{"path":"github-initial-setup.html","id":"pages-in-repo-settings","chapter":"29 Github initial setup","heading":"29.2 Pages in repo settings","text":"Change source gh-pagesMay trigger GHA get work","code":""},{"path":"github-initial-setup.html","id":"add-packages-to-description-file","chapter":"29 Github initial setup","heading":"29.3 Add packages to DESCRIPTION file","text":"Need better process…Downloaded submissions CourseWorksCreate DESCRIPTION file. Add add dependencies projthis::proj_update_deps()https://twitter.com/ijlyttle/status/1370776366585614342Add Imports real DESCRIPTION file.Found problematic packages looking reverse dependencies packages failed install:devtools::revdep()Also used pak::pkg_deps_tree()Problems:magickrJava dependency qdap","code":""},{"path":"tutorial-for-pull-request-mergers.html","id":"tutorial-for-pull-request-mergers","chapter":"30 Tutorial for pull request mergers","heading":"30 Tutorial for pull request mergers","text":"","code":""},{"path":"tutorial-for-pull-request-mergers.html","id":"general","chapter":"30 Tutorial for pull request mergers","heading":"30.1 General","text":"following checklist steps perform merging pull request. point, ’re sure , request review one PR leaders.","code":""},{"path":"tutorial-for-pull-request-mergers.html","id":"check-branch","chapter":"30 Tutorial for pull request mergers","heading":"30.2 Check branch","text":"PR submitted non-main branch.PR submitted main branch, provide instructions fix problem:Close PR.Close PR.Follow instructions forgetting branch committed pushed GitHub: https://edav.info/github#fixing-mistakesFollow instructions forgetting branch committed pushed GitHub: https://edav.info/github#fixing-mistakesIf trouble 2., delete local folder project, delete fork GitHub, start .trouble 2., delete local folder project, delete fork GitHub, start .Open new PR.Open new PR.","code":""},{"path":"tutorial-for-pull-request-mergers.html","id":"examine-files-that-were-added-or-modified","chapter":"30 Tutorial for pull request mergers","heading":"30.3 Examine files that were added or modified","text":"ONE .Rmd file.ONE .Rmd file.additional resources resources/<project_name>/ folder.additional resources resources/<project_name>/ folder.files root directory besides .Rmd file.files root directory besides .Rmd file.","code":""},{"path":"tutorial-for-pull-request-mergers.html","id":"check-.rmd-filename","chapter":"30 Tutorial for pull request mergers","heading":"30.4 Check .Rmd filename","text":".Rmd filename words joined underscores, white space. (Update: need branch name.).Rmd filename can contain lowercase letters. (Otherwise filenames sort nicely repo home page.)","code":""},{"path":"tutorial-for-pull-request-mergers.html","id":"check-.rmd-file-contents","chapter":"30 Tutorial for pull request mergers","heading":"30.5 Check .Rmd file contents","text":"file contain YAML header --- line.first line start single hashtag #, followed single whitespace, title.second line blank, followed author name(s).additional single hashtag headers chapter. (, new chapters created.)hashtag headers followed numbers since hashtags create numbered subheadings. Correct: ## Subheading. Incorrect: ## 3. Subheading.file contains setup chunk .Rmd file, contain setup label. (bookdown render fail duplicate chunk labels.)\n.e. use {r, include=FALSE} instead {r setup, include=FALSE}.\nSee sample .RmdLinks internal files must contain resources/<project_name>/ path, : ![Test Photo](resources/sample_project/election.jpg)file contain install.packages(), write functions, setwd(), getwd().’s anything else looks odd ’re sure, assign jtr13 review explain issue.","code":""},{"path":"tutorial-for-pull-request-mergers.html","id":"request-changes","chapter":"30 Tutorial for pull request mergers","heading":"30.6 Request changes","text":"problems checks listed , explain pull request merged request changes following steps:, add changes requested label pull request.job pull request done now. contributors fix requests, review either move forward merge explain changes still need made.","code":""},{"path":"tutorial-for-pull-request-mergers.html","id":"merge-the-pull-request","chapter":"30 Tutorial for pull request mergers","heading":"30.7 Merge the pull request","text":"good go, ’s time merge pull request. several steps.","code":""},{"path":"tutorial-for-pull-request-mergers.html","id":"add-chapter-filename-to-_bookdown.yml-in-prs-branch","chapter":"30 Tutorial for pull request mergers","heading":"30.7.1 Add chapter filename to _bookdown.yml in PR’s branch","text":"access PR branch:Make sure PR branch checking PR branch name shown (main):Open _bookdown.yml file.Open _bookdown.yml file.delete everything file beginning rmd_files: [ add name new file single quotes followed comma:delete everything file beginning rmd_files: [ add name new file single quotes followed comma:? easier fix merge conflicts way. (better way merge main PR branch adding new file can’t done GitHub. ’s interest explain locally.)Save edited version.Save edited version.Click resolve conflicts button:Click resolve conflicts button:Cut new filename paste proper location. delete lines <<<<<<< xxxx, ======= >>>>>>>> main. short, file look correct ’re done. Click “Marked resolved” button green “Commit merge” button.","code":""},{"path":"tutorial-for-pull-request-mergers.html","id":"pr-leaders-only-add-part-names-to-.rmd-for-every-first-article-in-part","chapter":"30 Tutorial for pull request mergers","heading":"30.7.2 PR Leaders only: Add part names to .Rmd for every first article in part","text":"adding first chapter PART.every first article part, add chapter name top .Rmd file, propose changes. example like .\n","code":""},{"path":"tutorial-for-pull-request-mergers.html","id":"merge-pr-and-leave-a-comment","chapter":"30 Tutorial for pull request mergers","heading":"30.7.3 Merge PR and leave a comment","text":"Now comes final step.’re sure things correctly, assign one PR merge leaders @jtr13 review merge PR.Go back conversation tab pull requests page, example:https://github.com/jtr13/cc20/pull/23#issuecomment-728506101Leave comments congratulations 🎉 (type :tada:) click green button merge.\n","code":""},{"path":"tutorial-for-pull-request-mergers.html","id":"check-updated-version","chapter":"30 Tutorial for pull request mergers","heading":"30.7.4 Check updated version","text":"successful merge means addition file files added project merge conflicts. mean book render deploy GitHub pages without issues. merge, take 5-10 minutes GitHub Actions render book deploy updated version. ’s problem notified email address . words, job done. However ’re interested, can check progress clicking Actions top repo.","code":""}]
